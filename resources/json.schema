{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "AWS::ApiGateway::Account": {
            "properties": {
                "CloudWatchRoleArn": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::ApiKey": {
            "properties": {
                "Description": {},
                "Enabled": {},
                "Name": {},
                "StageKeys": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::ApiKey.StageKey": {
            "properties": {
                "RestApiId": {},
                "StageName": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Authorizer": {
            "properties": {
                "AuthorizerCredentials": {},
                "AuthorizerResultTtlInSeconds": {},
                "AuthorizerUri": {},
                "IdentitySource": {},
                "IdentityValidationExpression": {},
                "Name": {},
                "ProviderARNs": {},
                "RestApiId": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::BasePathMapping": {
            "properties": {
                "BasePath": {},
                "DomainName": {},
                "RestApiId": {},
                "Stage": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::ClientCertificate": {
            "properties": {
                "Description": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Deployment": {
            "properties": {
                "Description": {},
                "RestApiId": {},
                "StageDescription": {},
                "StageName": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Deployment.MethodSetting": {
            "properties": {
                "CacheDataEncrypted": {},
                "CacheTtlInSeconds": {},
                "CachingEnabled": {},
                "DataTraceEnabled": {},
                "HttpMethod": {},
                "LoggingLevel": {},
                "MetricsEnabled": {},
                "ResourcePath": {},
                "ThrottlingBurstLimit": {},
                "ThrottlingRateLimit": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Deployment.StageDescription": {
            "properties": {
                "CacheClusterEnabled": {},
                "CacheClusterSize": {},
                "CacheDataEncrypted": {},
                "CacheTtlInSeconds": {},
                "CachingEnabled": {},
                "ClientCertificateId": {},
                "DataTraceEnabled": {},
                "Description": {},
                "LoggingLevel": {},
                "MethodSettings": {},
                "MetricsEnabled": {},
                "StageName": {},
                "ThrottlingBurstLimit": {},
                "ThrottlingRateLimit": {},
                "Variables": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::DomainName": {
            "properties": {
                "CertificateArn": {},
                "DomainName": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Method": {
            "properties": {
                "ApiKeyRequired": {},
                "AuthorizationType": {},
                "AuthorizerId": {},
                "HttpMethod": {},
                "Integration": {},
                "MethodResponses": {},
                "RequestModels": {},
                "RequestParameters": {},
                "ResourceId": {},
                "RestApiId": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Method.Integration": {
            "properties": {
                "CacheKeyParameters": {},
                "CacheNamespace": {},
                "Credentials": {},
                "IntegrationHttpMethod": {},
                "IntegrationResponses": {},
                "PassthroughBehavior": {},
                "RequestParameters": {},
                "RequestTemplates": {},
                "Type": {},
                "Uri": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Method.IntegrationResponse": {
            "properties": {
                "ResponseParameters": {},
                "ResponseTemplates": {},
                "SelectionPattern": {},
                "StatusCode": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Method.MethodResponse": {
            "properties": {
                "ResponseModels": {},
                "ResponseParameters": {},
                "StatusCode": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Model": {
            "properties": {
                "ContentType": {},
                "Description": {},
                "Name": {},
                "RestApiId": {},
                "Schema": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Resource": {
            "properties": {
                "ParentId": {},
                "PathPart": {},
                "RestApiId": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::RestApi": {
            "properties": {
                "BinaryMediaTypes": {},
                "Body": {},
                "BodyS3Location": {},
                "CloneFrom": {},
                "Description": {},
                "FailOnWarnings": {},
                "Mode": {},
                "Name": {},
                "Parameters": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::RestApi.S3Location": {
            "properties": {
                "Bucket": {},
                "ETag": {},
                "Key": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Stage": {
            "properties": {
                "CacheClusterEnabled": {},
                "CacheClusterSize": {},
                "ClientCertificateId": {},
                "DeploymentId": {},
                "Description": {},
                "MethodSettings": {},
                "RestApiId": {},
                "StageName": {},
                "Variables": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::Stage.MethodSetting": {
            "properties": {
                "CacheDataEncrypted": {},
                "CacheTtlInSeconds": {},
                "CachingEnabled": {},
                "DataTraceEnabled": {},
                "HttpMethod": {},
                "LoggingLevel": {},
                "MetricsEnabled": {},
                "ResourcePath": {},
                "ThrottlingBurstLimit": {},
                "ThrottlingRateLimit": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::UsagePlan": {
            "properties": {
                "ApiStages": {},
                "Description": {},
                "Quota": {},
                "Throttle": {},
                "UsagePlanName": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::UsagePlan.ApiStage": {
            "properties": {
                "ApiId": {},
                "Stage": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::UsagePlan.QuotaSettings": {
            "properties": {
                "Limit": {},
                "Offset": {},
                "Period": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::UsagePlan.ThrottleSettings": {
            "properties": {
                "BurstLimit": {},
                "RateLimit": {}
            },
            "type": "object"
        },
        "AWS::ApiGateway::UsagePlanKey": {
            "properties": {
                "KeyId": {},
                "KeyType": {},
                "UsagePlanId": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalableTarget": {
            "properties": {
                "MaxCapacity": {},
                "MinCapacity": {},
                "ResourceId": {},
                "RoleARN": {},
                "ScalableDimension": {},
                "ServiceNamespace": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy": {
            "properties": {
                "PolicyName": {},
                "PolicyType": {},
                "ResourceId": {},
                "ScalableDimension": {},
                "ScalingTargetId": {},
                "ServiceNamespace": {},
                "StepScalingPolicyConfiguration": {},
                "TargetTrackingScalingPolicyConfiguration": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.CustomizedMetricSpecification": {
            "properties": {
                "Dimensions": {},
                "MetricName": {},
                "Namespace": {},
                "Statistic": {},
                "Unit": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.MetricDimension": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification": {
            "properties": {
                "PredefinedMetricType": {},
                "ResourceLabel": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.StepAdjustment": {
            "properties": {
                "MetricIntervalLowerBound": {},
                "MetricIntervalUpperBound": {},
                "ScalingAdjustment": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration": {
            "properties": {
                "AdjustmentType": {},
                "Cooldown": {},
                "MetricAggregationType": {},
                "MinAdjustmentMagnitude": {},
                "StepAdjustments": {}
            },
            "type": "object"
        },
        "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration": {
            "properties": {
                "CustomizedMetricSpecification": {},
                "PredefinedMetricSpecification": {},
                "ScaleInCooldown": {},
                "ScaleOutCooldown": {},
                "TargetValue": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::AutoScalingGroup": {
            "properties": {
                "AvailabilityZones": {},
                "Cooldown": {},
                "DesiredCapacity": {},
                "HealthCheckGracePeriod": {},
                "HealthCheckType": {},
                "InstanceId": {},
                "LaunchConfigurationName": {},
                "LoadBalancerNames": {},
                "MaxSize": {},
                "MetricsCollection": {},
                "MinSize": {},
                "NotificationConfigurations": {},
                "PlacementGroup": {},
                "Tags": {},
                "TargetGroupARNs": {},
                "TerminationPolicies": {},
                "VPCZoneIdentifier": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::AutoScalingGroup.MetricsCollection": {
            "properties": {
                "Granularity": {},
                "Metrics": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::AutoScalingGroup.NotificationConfiguration": {
            "properties": {
                "NotificationTypes": {},
                "TopicARN": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::AutoScalingGroup.TagProperty": {
            "properties": {
                "Key": {},
                "PropagateAtLaunch": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::LaunchConfiguration": {
            "properties": {
                "AssociatePublicIpAddress": {},
                "BlockDeviceMappings": {},
                "ClassicLinkVPCId": {},
                "ClassicLinkVPCSecurityGroups": {},
                "EbsOptimized": {},
                "IamInstanceProfile": {},
                "ImageId": {},
                "InstanceId": {},
                "InstanceMonitoring": {},
                "InstanceType": {},
                "KernelId": {},
                "KeyName": {},
                "PlacementTenancy": {},
                "RamDiskId": {},
                "SecurityGroups": {},
                "SpotPrice": {},
                "UserData": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::LaunchConfiguration.BlockDevice": {
            "properties": {
                "DeleteOnTermination": {},
                "Encrypted": {},
                "Iops": {},
                "SnapshotId": {},
                "VolumeSize": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::LaunchConfiguration.BlockDeviceMapping": {
            "properties": {
                "DeviceName": {},
                "Ebs": {},
                "NoDevice": {},
                "VirtualName": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::LifecycleHook": {
            "properties": {
                "AutoScalingGroupName": {},
                "DefaultResult": {},
                "HeartbeatTimeout": {},
                "LifecycleTransition": {},
                "NotificationMetadata": {},
                "NotificationTargetARN": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::ScalingPolicy": {
            "properties": {
                "AdjustmentType": {},
                "AutoScalingGroupName": {},
                "Cooldown": {},
                "EstimatedInstanceWarmup": {},
                "MetricAggregationType": {},
                "MinAdjustmentMagnitude": {},
                "PolicyType": {},
                "ScalingAdjustment": {},
                "StepAdjustments": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::ScalingPolicy.StepAdjustment": {
            "properties": {
                "MetricIntervalLowerBound": {},
                "MetricIntervalUpperBound": {},
                "ScalingAdjustment": {}
            },
            "type": "object"
        },
        "AWS::AutoScaling::ScheduledAction": {
            "properties": {
                "AutoScalingGroupName": {},
                "DesiredCapacity": {},
                "EndTime": {},
                "MaxSize": {},
                "MinSize": {},
                "Recurrence": {},
                "StartTime": {}
            },
            "type": "object"
        },
        "AWS::Batch::ComputeEnvironment": {
            "properties": {
                "ComputeEnvironmentName": {},
                "ComputeResources": {},
                "ServiceRole": {},
                "State": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::Batch::ComputeEnvironment.ComputeResources": {
            "properties": {
                "BidPercentage": {},
                "DesiredvCpus": {},
                "Ec2KeyPair": {},
                "ImageId": {},
                "InstanceRole": {},
                "InstanceTypes": {},
                "MaxvCpus": {},
                "MinvCpus": {},
                "SecurityGroupIds": {},
                "SpotIamFleetRole": {},
                "Subnets": {},
                "Tags": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition": {
            "properties": {
                "ContainerProperties": {},
                "JobDefinitionName": {},
                "Parameters": {},
                "RetryStrategy": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.ContainerProperties": {
            "properties": {
                "Command": {},
                "Environment": {},
                "Image": {},
                "JobRoleArn": {},
                "Memory": {},
                "MountPoints": {},
                "Privileged": {},
                "ReadonlyRootFilesystem": {},
                "Ulimits": {},
                "User": {},
                "Vcpus": {},
                "Volumes": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.Environment": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.MountPoints": {
            "properties": {
                "ContainerPath": {},
                "ReadOnly": {},
                "SourceVolume": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.RetryStrategy": {
            "properties": {
                "Attempts": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.Ulimit": {
            "properties": {
                "HardLimit": {},
                "Name": {},
                "SoftLimit": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.Volumes": {
            "properties": {
                "Host": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobDefinition.VolumesHost": {
            "properties": {
                "SourcePath": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobQueue": {
            "properties": {
                "ComputeEnvironmentOrder": {},
                "JobQueueName": {},
                "Priority": {},
                "State": {}
            },
            "type": "object"
        },
        "AWS::Batch::JobQueue.ComputeEnvironmentOrder": {
            "properties": {
                "ComputeEnvironment": {},
                "Order": {}
            },
            "type": "object"
        },
        "AWS::CertificateManager::Certificate": {
            "properties": {
                "DomainName": {},
                "DomainValidationOptions": {},
                "SubjectAlternativeNames": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::CertificateManager::Certificate.DomainValidationOption": {
            "properties": {
                "DomainName": {},
                "ValidationDomain": {}
            },
            "type": "object"
        },
        "AWS::CloudFormation::CustomResource": {
            "properties": {
                "ServiceToken": {}
            },
            "type": "object"
        },
        "AWS::CloudFormation::Stack": {
            "properties": {
                "NotificationARNs": {},
                "Parameters": {},
                "Tags": {},
                "TemplateURL": {},
                "TimeoutInMinutes": {}
            },
            "type": "object"
        },
        "AWS::CloudFormation::WaitCondition": {
            "properties": {
                "Count": {},
                "Handle": {},
                "Timeout": {}
            },
            "type": "object"
        },
        "AWS::CloudFormation::WaitConditionHandle": {
            "properties": {},
            "type": "object"
        },
        "AWS::CloudFront::Distribution": {
            "properties": {
                "DistributionConfig": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.CacheBehavior": {
            "properties": {
                "AllowedMethods": {},
                "CachedMethods": {},
                "Compress": {},
                "DefaultTTL": {},
                "ForwardedValues": {},
                "MaxTTL": {},
                "MinTTL": {},
                "PathPattern": {},
                "SmoothStreaming": {},
                "TargetOriginId": {},
                "TrustedSigners": {},
                "ViewerProtocolPolicy": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.Cookies": {
            "properties": {
                "Forward": {},
                "WhitelistedNames": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.CustomErrorResponse": {
            "properties": {
                "ErrorCachingMinTTL": {},
                "ErrorCode": {},
                "ResponseCode": {},
                "ResponsePagePath": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.CustomOriginConfig": {
            "properties": {
                "HTTPPort": {},
                "HTTPSPort": {},
                "OriginProtocolPolicy": {},
                "OriginSSLProtocols": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.DefaultCacheBehavior": {
            "properties": {
                "AllowedMethods": {},
                "CachedMethods": {},
                "Compress": {},
                "DefaultTTL": {},
                "ForwardedValues": {},
                "MaxTTL": {},
                "MinTTL": {},
                "SmoothStreaming": {},
                "TargetOriginId": {},
                "TrustedSigners": {},
                "ViewerProtocolPolicy": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.DistributionConfig": {
            "properties": {
                "Aliases": {},
                "CacheBehaviors": {},
                "Comment": {},
                "CustomErrorResponses": {},
                "DefaultCacheBehavior": {},
                "DefaultRootObject": {},
                "Enabled": {},
                "HttpVersion": {},
                "Logging": {},
                "Origins": {},
                "PriceClass": {},
                "Restrictions": {},
                "ViewerCertificate": {},
                "WebACLId": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.ForwardedValues": {
            "properties": {
                "Cookies": {},
                "Headers": {},
                "QueryString": {},
                "QueryStringCacheKeys": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.GeoRestriction": {
            "properties": {
                "Locations": {},
                "RestrictionType": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.Logging": {
            "properties": {
                "Bucket": {},
                "IncludeCookies": {},
                "Prefix": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.Origin": {
            "properties": {
                "CustomOriginConfig": {},
                "DomainName": {},
                "Id": {},
                "OriginCustomHeaders": {},
                "OriginPath": {},
                "S3OriginConfig": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.OriginCustomHeader": {
            "properties": {
                "HeaderName": {},
                "HeaderValue": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.Restrictions": {
            "properties": {
                "GeoRestriction": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.S3OriginConfig": {
            "properties": {
                "OriginAccessIdentity": {}
            },
            "type": "object"
        },
        "AWS::CloudFront::Distribution.ViewerCertificate": {
            "properties": {
                "AcmCertificateArn": {},
                "CloudFrontDefaultCertificate": {},
                "IamCertificateId": {},
                "MinimumProtocolVersion": {},
                "SslSupportMethod": {}
            },
            "type": "object"
        },
        "AWS::CloudTrail::Trail": {
            "properties": {
                "CloudWatchLogsLogGroupArn": {},
                "CloudWatchLogsRoleArn": {},
                "EnableLogFileValidation": {},
                "IncludeGlobalServiceEvents": {},
                "IsLogging": {},
                "IsMultiRegionTrail": {},
                "KMSKeyId": {},
                "S3BucketName": {},
                "S3KeyPrefix": {},
                "SnsTopicName": {},
                "Tags": {},
                "TrailName": {}
            },
            "type": "object"
        },
        "AWS::CloudWatch::Alarm": {
            "properties": {
                "ActionsEnabled": {},
                "AlarmActions": {},
                "AlarmDescription": {},
                "AlarmName": {},
                "ComparisonOperator": {},
                "Dimensions": {},
                "EvaluateLowSampleCountPercentile": {},
                "EvaluationPeriods": {},
                "ExtendedStatistic": {},
                "InsufficientDataActions": {},
                "MetricName": {},
                "Namespace": {},
                "OKActions": {},
                "Period": {},
                "Statistic": {},
                "Threshold": {},
                "TreatMissingData": {},
                "Unit": {}
            },
            "type": "object"
        },
        "AWS::CloudWatch::Alarm.Dimension": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::CloudWatch::Dashboard": {
            "properties": {
                "DashboardBody": {},
                "DashboardName": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project": {
            "properties": {
                "Artifacts": {},
                "Description": {},
                "EncryptionKey": {},
                "Environment": {},
                "Name": {},
                "ServiceRole": {},
                "Source": {},
                "Tags": {},
                "TimeoutInMinutes": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project.Artifacts": {
            "properties": {
                "Location": {},
                "Name": {},
                "NamespaceType": {},
                "Packaging": {},
                "Path": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project.Environment": {
            "properties": {
                "ComputeType": {},
                "EnvironmentVariables": {},
                "Image": {},
                "PrivilegedMode": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project.EnvironmentVariable": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project.Source": {
            "properties": {
                "Auth": {},
                "BuildSpec": {},
                "Location": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodeBuild::Project.SourceAuth": {
            "properties": {
                "Resource": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodeCommit::Repository": {
            "properties": {
                "RepositoryDescription": {},
                "RepositoryName": {},
                "Triggers": {}
            },
            "type": "object"
        },
        "AWS::CodeCommit::Repository.RepositoryTrigger": {
            "properties": {
                "Branches": {},
                "CustomData": {},
                "DestinationArn": {},
                "Events": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::Application": {
            "properties": {
                "ApplicationName": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentConfig": {
            "properties": {
                "DeploymentConfigName": {},
                "MinimumHealthyHosts": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts": {
            "properties": {
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup": {
            "properties": {
                "AlarmConfiguration": {},
                "ApplicationName": {},
                "AutoScalingGroups": {},
                "Deployment": {},
                "DeploymentConfigName": {},
                "DeploymentGroupName": {},
                "Ec2TagFilters": {},
                "OnPremisesInstanceTagFilters": {},
                "ServiceRoleArn": {},
                "TriggerConfigurations": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.Alarm": {
            "properties": {
                "Name": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration": {
            "properties": {
                "Alarms": {},
                "Enabled": {},
                "IgnorePollAlarmFailure": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.Deployment": {
            "properties": {
                "Description": {},
                "IgnoreApplicationStopFailures": {},
                "Revision": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.EC2TagFilter": {
            "properties": {
                "Key": {},
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.GitHubLocation": {
            "properties": {
                "CommitId": {},
                "Repository": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.RevisionLocation": {
            "properties": {
                "GitHubLocation": {},
                "RevisionType": {},
                "S3Location": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.S3Location": {
            "properties": {
                "Bucket": {},
                "BundleType": {},
                "ETag": {},
                "Key": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.TagFilter": {
            "properties": {
                "Key": {},
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::CodeDeploy::DeploymentGroup.TriggerConfig": {
            "properties": {
                "TriggerEvents": {},
                "TriggerName": {},
                "TriggerTargetArn": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::CustomActionType": {
            "properties": {
                "Category": {},
                "ConfigurationProperties": {},
                "InputArtifactDetails": {},
                "OutputArtifactDetails": {},
                "Provider": {},
                "Settings": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::CustomActionType.ArtifactDetails": {
            "properties": {
                "MaximumCount": {},
                "MinimumCount": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::CustomActionType.ConfigurationProperties": {
            "properties": {
                "Description": {},
                "Key": {},
                "Name": {},
                "Queryable": {},
                "Required": {},
                "Secret": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::CustomActionType.Settings": {
            "properties": {
                "EntityUrlTemplate": {},
                "ExecutionUrlTemplate": {},
                "RevisionUrlTemplate": {},
                "ThirdPartyConfigurationUrl": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline": {
            "properties": {
                "ArtifactStore": {},
                "DisableInboundStageTransitions": {},
                "Name": {},
                "RestartExecutionOnUpdate": {},
                "RoleArn": {},
                "Stages": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.ActionDeclaration": {
            "properties": {
                "ActionTypeId": {},
                "Configuration": {},
                "InputArtifacts": {},
                "Name": {},
                "OutputArtifacts": {},
                "RoleArn": {},
                "RunOrder": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.ActionTypeId": {
            "properties": {
                "Category": {},
                "Owner": {},
                "Provider": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.ArtifactStore": {
            "properties": {
                "EncryptionKey": {},
                "Location": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.BlockerDeclaration": {
            "properties": {
                "Name": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.EncryptionKey": {
            "properties": {
                "Id": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.InputArtifact": {
            "properties": {
                "Name": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.OutputArtifact": {
            "properties": {
                "Name": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.StageDeclaration": {
            "properties": {
                "Actions": {},
                "Blockers": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::CodePipeline::Pipeline.StageTransition": {
            "properties": {
                "Reason": {},
                "StageName": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPool": {
            "properties": {
                "AllowUnauthenticatedIdentities": {},
                "CognitoEvents": {},
                "CognitoIdentityProviders": {},
                "CognitoStreams": {},
                "DeveloperProviderName": {},
                "IdentityPoolName": {},
                "OpenIdConnectProviderARNs": {},
                "PushSync": {},
                "SamlProviderARNs": {},
                "SupportedLoginProviders": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPool.CognitoIdentityProvider": {
            "properties": {
                "ClientId": {},
                "ProviderName": {},
                "ServerSideTokenCheck": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPool.CognitoStreams": {
            "properties": {
                "RoleArn": {},
                "StreamName": {},
                "StreamingStatus": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPool.PushSync": {
            "properties": {
                "ApplicationArns": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment": {
            "properties": {
                "IdentityPoolId": {},
                "RoleMappings": {},
                "Roles": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.MappingRule": {
            "properties": {
                "Claim": {},
                "MatchType": {},
                "RoleARN": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping": {
            "properties": {
                "AmbiguousRoleResolution": {},
                "RulesConfiguration": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::Cognito::IdentityPoolRoleAttachment.RulesConfigurationType": {
            "properties": {},
            "type": "object"
        },
        "AWS::Cognito::UserPool": {
            "properties": {
                "AdminCreateUserConfig": {},
                "AliasAttributes": {},
                "AutoVerifiedAttributes": {},
                "DeviceConfiguration": {},
                "EmailConfiguration": {},
                "EmailVerificationMessage": {},
                "EmailVerificationSubject": {},
                "LambdaConfig": {},
                "MfaConfiguration": {},
                "Policies": {},
                "Schema": {},
                "SmsAuthenticationMessage": {},
                "SmsConfiguration": {},
                "SmsVerificationMessage": {},
                "UserPoolName": {},
                "UserPoolTags": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.AdminCreateUserConfig": {
            "properties": {
                "AllowAdminCreateUserOnly": {},
                "InviteMessageTemplate": {},
                "UnusedAccountValidityDays": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.DeviceConfiguration": {
            "properties": {
                "ChallengeRequiredOnNewDevice": {},
                "DeviceOnlyRememberedOnUserPrompt": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.EmailConfiguration": {
            "properties": {
                "ReplyToEmailAddress": {},
                "SourceArn": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.InviteMessageTemplate": {
            "properties": {
                "EmailMessage": {},
                "EmailSubject": {},
                "SMSMessage": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.LambdaConfig": {
            "properties": {
                "CreateAuthChallenge": {},
                "CustomMessage": {},
                "DefineAuthChallenge": {},
                "PostAuthentication": {},
                "PostConfirmation": {},
                "PreAuthentication": {},
                "PreSignUp": {},
                "VerifyAuthChallengeResponse": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.NumberAttributeConstraints": {
            "properties": {
                "MaxValue": {},
                "MinValue": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.PasswordPolicy": {
            "properties": {
                "MinimumLength": {},
                "RequireLowercase": {},
                "RequireNumbers": {},
                "RequireSymbols": {},
                "RequireUppercase": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.Policies": {
            "properties": {
                "PasswordPolicy": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.SchemaAttribute": {
            "properties": {
                "AttributeDataType": {},
                "DeveloperOnlyAttribute": {},
                "Mutable": {},
                "Name": {},
                "NumberAttributeConstraints": {},
                "Required": {},
                "StringAttributeConstraints": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.SmsConfiguration": {
            "properties": {
                "ExternalId": {},
                "SnsCallerArn": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPool.StringAttributeConstraints": {
            "properties": {
                "MaxLength": {},
                "MinLength": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPoolClient": {
            "properties": {
                "ClientName": {},
                "ExplicitAuthFlows": {},
                "GenerateSecret": {},
                "ReadAttributes": {},
                "RefreshTokenValidity": {},
                "UserPoolId": {},
                "WriteAttributes": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPoolGroup": {
            "properties": {
                "Description": {},
                "GroupName": {},
                "Precedence": {},
                "RoleArn": {},
                "UserPoolId": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPoolUser": {
            "properties": {
                "DesiredDeliveryMediums": {},
                "ForceAliasCreation": {},
                "MessageAction": {},
                "UserAttributes": {},
                "UserPoolId": {},
                "Username": {},
                "ValidationData": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPoolUser.AttributeType": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Cognito::UserPoolUserToGroupAttachment": {
            "properties": {
                "GroupName": {},
                "UserPoolId": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigRule": {
            "properties": {
                "ConfigRuleName": {},
                "Description": {},
                "InputParameters": {},
                "MaximumExecutionFrequency": {},
                "Scope": {},
                "Source": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigRule.Scope": {
            "properties": {
                "ComplianceResourceId": {},
                "ComplianceResourceTypes": {},
                "TagKey": {},
                "TagValue": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigRule.Source": {
            "properties": {
                "Owner": {},
                "SourceDetails": {},
                "SourceIdentifier": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigRule.SourceDetail": {
            "properties": {
                "EventSource": {},
                "MaximumExecutionFrequency": {},
                "MessageType": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigurationRecorder": {
            "properties": {
                "Name": {},
                "RecordingGroup": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::Config::ConfigurationRecorder.RecordingGroup": {
            "properties": {
                "AllSupported": {},
                "IncludeGlobalResourceTypes": {},
                "ResourceTypes": {}
            },
            "type": "object"
        },
        "AWS::Config::DeliveryChannel": {
            "properties": {
                "ConfigSnapshotDeliveryProperties": {},
                "Name": {},
                "S3BucketName": {},
                "S3KeyPrefix": {},
                "SnsTopicARN": {}
            },
            "type": "object"
        },
        "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties": {
            "properties": {
                "DeliveryFrequency": {}
            },
            "type": "object"
        },
        "AWS::DMS::Certificate": {
            "properties": {
                "CertificateIdentifier": {},
                "CertificatePem": {},
                "CertificateWallet": {}
            },
            "type": "object"
        },
        "AWS::DMS::Endpoint": {
            "properties": {
                "CertificateArn": {},
                "DatabaseName": {},
                "DynamoDbSettings": {},
                "EndpointIdentifier": {},
                "EndpointType": {},
                "EngineName": {},
                "ExtraConnectionAttributes": {},
                "KmsKeyId": {},
                "MongoDbSettings": {},
                "Password": {},
                "Port": {},
                "S3Settings": {},
                "ServerName": {},
                "SslMode": {},
                "Tags": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::DMS::Endpoint.DynamoDbSettings": {
            "properties": {
                "ServiceAccessRoleArn": {}
            },
            "type": "object"
        },
        "AWS::DMS::Endpoint.MongoDbSettings": {
            "properties": {
                "AuthMechanism": {},
                "AuthSource": {},
                "AuthType": {},
                "DatabaseName": {},
                "DocsToInvestigate": {},
                "ExtractDocId": {},
                "NestingLevel": {},
                "Password": {},
                "Port": {},
                "ServerName": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::DMS::Endpoint.S3Settings": {
            "properties": {
                "BucketFolder": {},
                "BucketName": {},
                "CompressionType": {},
                "CsvDelimiter": {},
                "CsvRowDelimiter": {},
                "ExternalTableDefinition": {},
                "ServiceAccessRoleArn": {}
            },
            "type": "object"
        },
        "AWS::DMS::EventSubscription": {
            "properties": {
                "Enabled": {},
                "EventCategories": {},
                "SnsTopicArn": {},
                "SourceIds": {},
                "SourceType": {},
                "SubscriptionName": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::DMS::ReplicationInstance": {
            "properties": {
                "AllocatedStorage": {},
                "AllowMajorVersionUpgrade": {},
                "AutoMinorVersionUpgrade": {},
                "AvailabilityZone": {},
                "EngineVersion": {},
                "KmsKeyId": {},
                "MultiAZ": {},
                "PreferredMaintenanceWindow": {},
                "PubliclyAccessible": {},
                "ReplicationInstanceClass": {},
                "ReplicationInstanceIdentifier": {},
                "ReplicationSubnetGroupIdentifier": {},
                "Tags": {},
                "VpcSecurityGroupIds": {}
            },
            "type": "object"
        },
        "AWS::DMS::ReplicationSubnetGroup": {
            "properties": {
                "ReplicationSubnetGroupDescription": {},
                "ReplicationSubnetGroupIdentifier": {},
                "SubnetIds": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::DMS::ReplicationTask": {
            "properties": {
                "CdcStartTime": {},
                "MigrationType": {},
                "ReplicationInstanceArn": {},
                "ReplicationTaskIdentifier": {},
                "ReplicationTaskSettings": {},
                "SourceEndpointArn": {},
                "TableMappings": {},
                "Tags": {},
                "TargetEndpointArn": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline": {
            "properties": {
                "Activate": {},
                "Description": {},
                "Name": {},
                "ParameterObjects": {},
                "ParameterValues": {},
                "PipelineObjects": {},
                "PipelineTags": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.Field": {
            "properties": {
                "Key": {},
                "RefValue": {},
                "StringValue": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.ParameterAttribute": {
            "properties": {
                "Key": {},
                "StringValue": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.ParameterObject": {
            "properties": {
                "Attributes": {},
                "Id": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.ParameterValue": {
            "properties": {
                "Id": {},
                "StringValue": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.PipelineObject": {
            "properties": {
                "Fields": {},
                "Id": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::DataPipeline::Pipeline.PipelineTag": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::DirectoryService::MicrosoftAD": {
            "properties": {
                "CreateAlias": {},
                "EnableSso": {},
                "Name": {},
                "Password": {},
                "ShortName": {},
                "VpcSettings": {}
            },
            "type": "object"
        },
        "AWS::DirectoryService::MicrosoftAD.VpcSettings": {
            "properties": {
                "SubnetIds": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::DirectoryService::SimpleAD": {
            "properties": {
                "CreateAlias": {},
                "Description": {},
                "EnableSso": {},
                "Name": {},
                "Password": {},
                "ShortName": {},
                "Size": {},
                "VpcSettings": {}
            },
            "type": "object"
        },
        "AWS::DirectoryService::SimpleAD.VpcSettings": {
            "properties": {
                "SubnetIds": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table": {
            "properties": {
                "AttributeDefinitions": {},
                "GlobalSecondaryIndexes": {},
                "KeySchema": {},
                "LocalSecondaryIndexes": {},
                "ProvisionedThroughput": {},
                "StreamSpecification": {},
                "TableName": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.AttributeDefinition": {
            "properties": {
                "AttributeName": {},
                "AttributeType": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.GlobalSecondaryIndex": {
            "properties": {
                "IndexName": {},
                "KeySchema": {},
                "Projection": {},
                "ProvisionedThroughput": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.KeySchema": {
            "properties": {
                "AttributeName": {},
                "KeyType": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.LocalSecondaryIndex": {
            "properties": {
                "IndexName": {},
                "KeySchema": {},
                "Projection": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.Projection": {
            "properties": {
                "NonKeyAttributes": {},
                "ProjectionType": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.ProvisionedThroughput": {
            "properties": {
                "ReadCapacityUnits": {},
                "WriteCapacityUnits": {}
            },
            "type": "object"
        },
        "AWS::DynamoDB::Table.StreamSpecification": {
            "properties": {
                "StreamViewType": {}
            },
            "type": "object"
        },
        "AWS::EC2::CustomerGateway": {
            "properties": {
                "BgpAsn": {},
                "IpAddress": {},
                "Tags": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::EC2::DHCPOptions": {
            "properties": {
                "DomainName": {},
                "DomainNameServers": {},
                "NetbiosNameServers": {},
                "NetbiosNodeType": {},
                "NtpServers": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::EC2::EIP": {
            "properties": {
                "Domain": {},
                "InstanceId": {}
            },
            "type": "object"
        },
        "AWS::EC2::EIPAssociation": {
            "properties": {
                "AllocationId": {},
                "EIP": {},
                "InstanceId": {},
                "NetworkInterfaceId": {},
                "PrivateIpAddress": {}
            },
            "type": "object"
        },
        "AWS::EC2::EgressOnlyInternetGateway": {
            "properties": {
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::FlowLog": {
            "properties": {
                "DeliverLogsPermissionArn": {},
                "LogGroupName": {},
                "ResourceId": {},
                "ResourceType": {},
                "TrafficType": {}
            },
            "type": "object"
        },
        "AWS::EC2::Host": {
            "properties": {
                "AutoPlacement": {},
                "AvailabilityZone": {},
                "InstanceType": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance": {
            "properties": {
                "AdditionalInfo": {},
                "Affinity": {},
                "AvailabilityZone": {},
                "BlockDeviceMappings": {},
                "DisableApiTermination": {},
                "EbsOptimized": {},
                "HostId": {},
                "IamInstanceProfile": {},
                "ImageId": {},
                "InstanceInitiatedShutdownBehavior": {},
                "InstanceType": {},
                "Ipv6AddressCount": {},
                "Ipv6Addresses": {},
                "KernelId": {},
                "KeyName": {},
                "Monitoring": {},
                "NetworkInterfaces": {},
                "PlacementGroupName": {},
                "PrivateIpAddress": {},
                "RamdiskId": {},
                "SecurityGroupIds": {},
                "SecurityGroups": {},
                "SourceDestCheck": {},
                "SsmAssociations": {},
                "SubnetId": {},
                "Tags": {},
                "Tenancy": {},
                "UserData": {},
                "Volumes": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.AssociationParameter": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.BlockDeviceMapping": {
            "properties": {
                "DeviceName": {},
                "Ebs": {},
                "NoDevice": {},
                "VirtualName": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.Ebs": {
            "properties": {
                "DeleteOnTermination": {},
                "Encrypted": {},
                "Iops": {},
                "SnapshotId": {},
                "VolumeSize": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.InstanceIpv6Address": {
            "properties": {
                "Ipv6Address": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.NetworkInterface": {
            "properties": {
                "AssociatePublicIpAddress": {},
                "DeleteOnTermination": {},
                "Description": {},
                "DeviceIndex": {},
                "GroupSet": {},
                "Ipv6AddressCount": {},
                "Ipv6Addresses": {},
                "NetworkInterfaceId": {},
                "PrivateIpAddress": {},
                "PrivateIpAddresses": {},
                "SecondaryPrivateIpAddressCount": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.NoDevice": {
            "properties": {},
            "type": "object"
        },
        "AWS::EC2::Instance.PrivateIpAddressSpecification": {
            "properties": {
                "Primary": {},
                "PrivateIpAddress": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.SsmAssociation": {
            "properties": {
                "AssociationParameters": {},
                "DocumentName": {}
            },
            "type": "object"
        },
        "AWS::EC2::Instance.Volume": {
            "properties": {
                "Device": {},
                "VolumeId": {}
            },
            "type": "object"
        },
        "AWS::EC2::InternetGateway": {
            "properties": {
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::EC2::NatGateway": {
            "properties": {
                "AllocationId": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkAcl": {
            "properties": {
                "Tags": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkAclEntry": {
            "properties": {
                "CidrBlock": {},
                "Egress": {},
                "Icmp": {},
                "Ipv6CidrBlock": {},
                "NetworkAclId": {},
                "PortRange": {},
                "Protocol": {},
                "RuleAction": {},
                "RuleNumber": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkAclEntry.Icmp": {
            "properties": {
                "Code": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkAclEntry.PortRange": {
            "properties": {
                "From": {},
                "To": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkInterface": {
            "properties": {
                "Description": {},
                "GroupSet": {},
                "InterfaceType": {},
                "Ipv6AddressCount": {},
                "Ipv6Addresses": {},
                "PrivateIpAddress": {},
                "PrivateIpAddresses": {},
                "SecondaryPrivateIpAddressCount": {},
                "SourceDestCheck": {},
                "SubnetId": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkInterface.InstanceIpv6Address": {
            "properties": {
                "Ipv6Address": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkInterface.PrivateIpAddressSpecification": {
            "properties": {
                "Primary": {},
                "PrivateIpAddress": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkInterfaceAttachment": {
            "properties": {
                "DeleteOnTermination": {},
                "DeviceIndex": {},
                "InstanceId": {},
                "NetworkInterfaceId": {}
            },
            "type": "object"
        },
        "AWS::EC2::NetworkInterfacePermission": {
            "properties": {
                "AwsAccountId": {},
                "NetworkInterfaceId": {},
                "Permission": {}
            },
            "type": "object"
        },
        "AWS::EC2::PlacementGroup": {
            "properties": {
                "Strategy": {}
            },
            "type": "object"
        },
        "AWS::EC2::Route": {
            "properties": {
                "DestinationCidrBlock": {},
                "DestinationIpv6CidrBlock": {},
                "GatewayId": {},
                "InstanceId": {},
                "NatGatewayId": {},
                "NetworkInterfaceId": {},
                "RouteTableId": {},
                "VpcPeeringConnectionId": {}
            },
            "type": "object"
        },
        "AWS::EC2::RouteTable": {
            "properties": {
                "Tags": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SecurityGroup": {
            "properties": {
                "GroupDescription": {},
                "GroupName": {},
                "SecurityGroupEgress": {},
                "SecurityGroupIngress": {},
                "Tags": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SecurityGroup.Egress": {
            "properties": {
                "CidrIp": {},
                "CidrIpv6": {},
                "DestinationPrefixListId": {},
                "DestinationSecurityGroupId": {},
                "FromPort": {},
                "IpProtocol": {},
                "ToPort": {}
            },
            "type": "object"
        },
        "AWS::EC2::SecurityGroup.Ingress": {
            "properties": {
                "CidrIp": {},
                "CidrIpv6": {},
                "FromPort": {},
                "IpProtocol": {},
                "SourceSecurityGroupId": {},
                "SourceSecurityGroupName": {},
                "SourceSecurityGroupOwnerId": {},
                "ToPort": {}
            },
            "type": "object"
        },
        "AWS::EC2::SecurityGroupEgress": {
            "properties": {
                "CidrIp": {},
                "CidrIpv6": {},
                "DestinationPrefixListId": {},
                "DestinationSecurityGroupId": {},
                "FromPort": {},
                "GroupId": {},
                "IpProtocol": {},
                "ToPort": {}
            },
            "type": "object"
        },
        "AWS::EC2::SecurityGroupIngress": {
            "properties": {
                "CidrIp": {},
                "CidrIpv6": {},
                "FromPort": {},
                "GroupId": {},
                "GroupName": {},
                "IpProtocol": {},
                "SourceSecurityGroupId": {},
                "SourceSecurityGroupName": {},
                "SourceSecurityGroupOwnerId": {},
                "ToPort": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet": {
            "properties": {
                "SpotFleetRequestConfigData": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.BlockDeviceMapping": {
            "properties": {
                "DeviceName": {},
                "Ebs": {},
                "NoDevice": {},
                "VirtualName": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.EbsBlockDevice": {
            "properties": {
                "DeleteOnTermination": {},
                "Encrypted": {},
                "Iops": {},
                "SnapshotId": {},
                "VolumeSize": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.GroupIdentifier": {
            "properties": {
                "GroupId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.IamInstanceProfileSpecification": {
            "properties": {
                "Arn": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.InstanceIpv6Address": {
            "properties": {
                "Ipv6Address": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.InstanceNetworkInterfaceSpecification": {
            "properties": {
                "AssociatePublicIpAddress": {},
                "DeleteOnTermination": {},
                "Description": {},
                "DeviceIndex": {},
                "Groups": {},
                "Ipv6AddressCount": {},
                "Ipv6Addresses": {},
                "NetworkInterfaceId": {},
                "PrivateIpAddresses": {},
                "SecondaryPrivateIpAddressCount": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.PrivateIpAddressSpecification": {
            "properties": {
                "Primary": {},
                "PrivateIpAddress": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.SpotFleetLaunchSpecification": {
            "properties": {
                "BlockDeviceMappings": {},
                "EbsOptimized": {},
                "IamInstanceProfile": {},
                "ImageId": {},
                "InstanceType": {},
                "KernelId": {},
                "KeyName": {},
                "Monitoring": {},
                "NetworkInterfaces": {},
                "Placement": {},
                "RamdiskId": {},
                "SecurityGroups": {},
                "SpotPrice": {},
                "SubnetId": {},
                "UserData": {},
                "WeightedCapacity": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.SpotFleetMonitoring": {
            "properties": {
                "Enabled": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.SpotFleetRequestConfigData": {
            "properties": {
                "AllocationStrategy": {},
                "ExcessCapacityTerminationPolicy": {},
                "IamFleetRole": {},
                "LaunchSpecifications": {},
                "SpotPrice": {},
                "TargetCapacity": {},
                "TerminateInstancesWithExpiration": {},
                "ValidFrom": {},
                "ValidUntil": {}
            },
            "type": "object"
        },
        "AWS::EC2::SpotFleet.SpotPlacement": {
            "properties": {
                "AvailabilityZone": {},
                "GroupName": {}
            },
            "type": "object"
        },
        "AWS::EC2::Subnet": {
            "properties": {
                "AvailabilityZone": {},
                "CidrBlock": {},
                "MapPublicIpOnLaunch": {},
                "Tags": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SubnetCidrBlock": {
            "properties": {
                "Ipv6CidrBlock": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SubnetNetworkAclAssociation": {
            "properties": {
                "NetworkAclId": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::SubnetRouteTableAssociation": {
            "properties": {
                "RouteTableId": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EC2::TrunkInterfaceAssociation": {
            "properties": {
                "BranchInterfaceId": {},
                "GREKey": {},
                "TrunkInterfaceId": {},
                "VLANId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPC": {
            "properties": {
                "CidrBlock": {},
                "EnableDnsHostnames": {},
                "EnableDnsSupport": {},
                "InstanceTenancy": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPCCidrBlock": {
            "properties": {
                "AmazonProvidedIpv6CidrBlock": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPCDHCPOptionsAssociation": {
            "properties": {
                "DhcpOptionsId": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPCEndpoint": {
            "properties": {
                "PolicyDocument": {},
                "RouteTableIds": {},
                "ServiceName": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPCGatewayAttachment": {
            "properties": {
                "InternetGatewayId": {},
                "VpcId": {},
                "VpnGatewayId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPCPeeringConnection": {
            "properties": {
                "PeerOwnerId": {},
                "PeerRoleArn": {},
                "PeerVpcId": {},
                "Tags": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPNConnection": {
            "properties": {
                "CustomerGatewayId": {},
                "StaticRoutesOnly": {},
                "Tags": {},
                "Type": {},
                "VpnGatewayId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPNConnectionRoute": {
            "properties": {
                "DestinationCidrBlock": {},
                "VpnConnectionId": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPNGateway": {
            "properties": {
                "Tags": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::EC2::VPNGatewayRoutePropagation": {
            "properties": {
                "RouteTableIds": {},
                "VpnGatewayId": {}
            },
            "type": "object"
        },
        "AWS::EC2::Volume": {
            "properties": {
                "AutoEnableIO": {},
                "AvailabilityZone": {},
                "Encrypted": {},
                "Iops": {},
                "KmsKeyId": {},
                "Size": {},
                "SnapshotId": {},
                "Tags": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EC2::VolumeAttachment": {
            "properties": {
                "Device": {},
                "InstanceId": {},
                "VolumeId": {}
            },
            "type": "object"
        },
        "AWS::ECR::Repository": {
            "properties": {
                "RepositoryName": {},
                "RepositoryPolicyText": {}
            },
            "type": "object"
        },
        "AWS::ECS::Cluster": {
            "properties": {
                "ClusterName": {}
            },
            "type": "object"
        },
        "AWS::ECS::Service": {
            "properties": {
                "Cluster": {},
                "DeploymentConfiguration": {},
                "DesiredCount": {},
                "LoadBalancers": {},
                "PlacementConstraints": {},
                "PlacementStrategies": {},
                "Role": {},
                "ServiceName": {},
                "TaskDefinition": {}
            },
            "type": "object"
        },
        "AWS::ECS::Service.DeploymentConfiguration": {
            "properties": {
                "MaximumPercent": {},
                "MinimumHealthyPercent": {}
            },
            "type": "object"
        },
        "AWS::ECS::Service.LoadBalancer": {
            "properties": {
                "ContainerName": {},
                "ContainerPort": {},
                "LoadBalancerName": {},
                "TargetGroupArn": {}
            },
            "type": "object"
        },
        "AWS::ECS::Service.PlacementConstraint": {
            "properties": {
                "Expression": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ECS::Service.PlacementStrategy": {
            "properties": {
                "Field": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition": {
            "properties": {
                "ContainerDefinitions": {},
                "Family": {},
                "NetworkMode": {},
                "PlacementConstraints": {},
                "TaskRoleArn": {},
                "Volumes": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.ContainerDefinition": {
            "properties": {
                "Command": {},
                "Cpu": {},
                "DisableNetworking": {},
                "DnsSearchDomains": {},
                "DnsServers": {},
                "DockerLabels": {},
                "DockerSecurityOptions": {},
                "EntryPoint": {},
                "Environment": {},
                "Essential": {},
                "ExtraHosts": {},
                "Hostname": {},
                "Image": {},
                "Links": {},
                "LogConfiguration": {},
                "Memory": {},
                "MemoryReservation": {},
                "MountPoints": {},
                "Name": {},
                "PortMappings": {},
                "Privileged": {},
                "ReadonlyRootFilesystem": {},
                "Ulimits": {},
                "User": {},
                "VolumesFrom": {},
                "WorkingDirectory": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.HostEntry": {
            "properties": {
                "Hostname": {},
                "IpAddress": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.HostVolumeProperties": {
            "properties": {
                "SourcePath": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.KeyValuePair": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.LogConfiguration": {
            "properties": {
                "LogDriver": {},
                "Options": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.MountPoint": {
            "properties": {
                "ContainerPath": {},
                "ReadOnly": {},
                "SourceVolume": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.PortMapping": {
            "properties": {
                "ContainerPort": {},
                "HostPort": {},
                "Protocol": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.TaskDefinitionPlacementConstraint": {
            "properties": {
                "Expression": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.Ulimit": {
            "properties": {
                "HardLimit": {},
                "Name": {},
                "SoftLimit": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.Volume": {
            "properties": {
                "Host": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::ECS::TaskDefinition.VolumeFrom": {
            "properties": {
                "ReadOnly": {},
                "SourceContainer": {}
            },
            "type": "object"
        },
        "AWS::EFS::FileSystem": {
            "properties": {
                "FileSystemTags": {},
                "PerformanceMode": {}
            },
            "type": "object"
        },
        "AWS::EFS::FileSystem.ElasticFileSystemTag": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::EFS::MountTarget": {
            "properties": {
                "FileSystemId": {},
                "IpAddress": {},
                "SecurityGroups": {},
                "SubnetId": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster": {
            "properties": {
                "AdditionalInfo": {},
                "Applications": {},
                "AutoScalingRole": {},
                "BootstrapActions": {},
                "Configurations": {},
                "Instances": {},
                "JobFlowRole": {},
                "LogUri": {},
                "Name": {},
                "ReleaseLabel": {},
                "ScaleDownBehavior": {},
                "SecurityConfiguration": {},
                "ServiceRole": {},
                "Tags": {},
                "VisibleToAllUsers": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.Application": {
            "properties": {
                "AdditionalInfo": {},
                "Args": {},
                "Name": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.AutoScalingPolicy": {
            "properties": {
                "Constraints": {},
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.BootstrapActionConfig": {
            "properties": {
                "Name": {},
                "ScriptBootstrapAction": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.CloudWatchAlarmDefinition": {
            "properties": {
                "ComparisonOperator": {},
                "Dimensions": {},
                "EvaluationPeriods": {},
                "MetricName": {},
                "Namespace": {},
                "Period": {},
                "Statistic": {},
                "Threshold": {},
                "Unit": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.Configuration": {
            "properties": {
                "Classification": {},
                "ConfigurationProperties": {},
                "Configurations": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.EbsBlockDeviceConfig": {
            "properties": {
                "VolumeSpecification": {},
                "VolumesPerInstance": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.EbsConfiguration": {
            "properties": {
                "EbsBlockDeviceConfigs": {},
                "EbsOptimized": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.InstanceFleetConfig": {
            "properties": {
                "InstanceTypeConfigs": {},
                "LaunchSpecifications": {},
                "Name": {},
                "TargetOnDemandCapacity": {},
                "TargetSpotCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.InstanceFleetProvisioningSpecifications": {
            "properties": {
                "SpotSpecification": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.InstanceGroupConfig": {
            "properties": {
                "AutoScalingPolicy": {},
                "BidPrice": {},
                "Configurations": {},
                "EbsConfiguration": {},
                "InstanceCount": {},
                "InstanceType": {},
                "Market": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.InstanceTypeConfig": {
            "properties": {
                "BidPrice": {},
                "BidPriceAsPercentageOfOnDemandPrice": {},
                "Configurations": {},
                "EbsConfiguration": {},
                "InstanceType": {},
                "WeightedCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.JobFlowInstancesConfig": {
            "properties": {
                "AdditionalMasterSecurityGroups": {},
                "AdditionalSlaveSecurityGroups": {},
                "CoreInstanceFleet": {},
                "CoreInstanceGroup": {},
                "Ec2KeyName": {},
                "Ec2SubnetId": {},
                "EmrManagedMasterSecurityGroup": {},
                "EmrManagedSlaveSecurityGroup": {},
                "HadoopVersion": {},
                "MasterInstanceFleet": {},
                "MasterInstanceGroup": {},
                "Placement": {},
                "ServiceAccessSecurityGroup": {},
                "TerminationProtected": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.MetricDimension": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.PlacementType": {
            "properties": {
                "AvailabilityZone": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.ScalingAction": {
            "properties": {
                "Market": {},
                "SimpleScalingPolicyConfiguration": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.ScalingConstraints": {
            "properties": {
                "MaxCapacity": {},
                "MinCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.ScalingRule": {
            "properties": {
                "Action": {},
                "Description": {},
                "Name": {},
                "Trigger": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.ScalingTrigger": {
            "properties": {
                "CloudWatchAlarmDefinition": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.ScriptBootstrapActionConfig": {
            "properties": {
                "Args": {},
                "Path": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.SimpleScalingPolicyConfiguration": {
            "properties": {
                "AdjustmentType": {},
                "CoolDown": {},
                "ScalingAdjustment": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.SpotProvisioningSpecification": {
            "properties": {
                "BlockDurationMinutes": {},
                "TimeoutAction": {},
                "TimeoutDurationMinutes": {}
            },
            "type": "object"
        },
        "AWS::EMR::Cluster.VolumeSpecification": {
            "properties": {
                "Iops": {},
                "SizeInGB": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig": {
            "properties": {
                "ClusterId": {},
                "InstanceFleetType": {},
                "InstanceTypeConfigs": {},
                "LaunchSpecifications": {},
                "Name": {},
                "TargetOnDemandCapacity": {},
                "TargetSpotCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.Configuration": {
            "properties": {
                "Classification": {},
                "ConfigurationProperties": {},
                "Configurations": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.EbsBlockDeviceConfig": {
            "properties": {
                "VolumeSpecification": {},
                "VolumesPerInstance": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.EbsConfiguration": {
            "properties": {
                "EbsBlockDeviceConfigs": {},
                "EbsOptimized": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.InstanceFleetProvisioningSpecifications": {
            "properties": {
                "SpotSpecification": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.InstanceTypeConfig": {
            "properties": {
                "BidPrice": {},
                "BidPriceAsPercentageOfOnDemandPrice": {},
                "Configurations": {},
                "EbsConfiguration": {},
                "InstanceType": {},
                "WeightedCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.SpotProvisioningSpecification": {
            "properties": {
                "BlockDurationMinutes": {},
                "TimeoutAction": {},
                "TimeoutDurationMinutes": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceFleetConfig.VolumeSpecification": {
            "properties": {
                "Iops": {},
                "SizeInGB": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig": {
            "properties": {
                "AutoScalingPolicy": {},
                "BidPrice": {},
                "Configurations": {},
                "EbsConfiguration": {},
                "InstanceCount": {},
                "InstanceRole": {},
                "InstanceType": {},
                "JobFlowId": {},
                "Market": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.AutoScalingPolicy": {
            "properties": {
                "Constraints": {},
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.CloudWatchAlarmDefinition": {
            "properties": {
                "ComparisonOperator": {},
                "Dimensions": {},
                "EvaluationPeriods": {},
                "MetricName": {},
                "Namespace": {},
                "Period": {},
                "Statistic": {},
                "Threshold": {},
                "Unit": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.Configuration": {
            "properties": {
                "Classification": {},
                "ConfigurationProperties": {},
                "Configurations": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.EbsBlockDeviceConfig": {
            "properties": {
                "VolumeSpecification": {},
                "VolumesPerInstance": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.EbsConfiguration": {
            "properties": {
                "EbsBlockDeviceConfigs": {},
                "EbsOptimized": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.MetricDimension": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.ScalingAction": {
            "properties": {
                "Market": {},
                "SimpleScalingPolicyConfiguration": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.ScalingConstraints": {
            "properties": {
                "MaxCapacity": {},
                "MinCapacity": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.ScalingRule": {
            "properties": {
                "Action": {},
                "Description": {},
                "Name": {},
                "Trigger": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.ScalingTrigger": {
            "properties": {
                "CloudWatchAlarmDefinition": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.SimpleScalingPolicyConfiguration": {
            "properties": {
                "AdjustmentType": {},
                "CoolDown": {},
                "ScalingAdjustment": {}
            },
            "type": "object"
        },
        "AWS::EMR::InstanceGroupConfig.VolumeSpecification": {
            "properties": {
                "Iops": {},
                "SizeInGB": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::EMR::SecurityConfiguration": {
            "properties": {
                "Name": {},
                "SecurityConfiguration": {}
            },
            "type": "object"
        },
        "AWS::EMR::Step": {
            "properties": {
                "ActionOnFailure": {},
                "HadoopJarStep": {},
                "JobFlowId": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::EMR::Step.HadoopJarStepConfig": {
            "properties": {
                "Args": {},
                "Jar": {},
                "MainClass": {},
                "StepProperties": {}
            },
            "type": "object"
        },
        "AWS::EMR::Step.KeyValue": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::CacheCluster": {
            "properties": {
                "AZMode": {},
                "AutoMinorVersionUpgrade": {},
                "CacheNodeType": {},
                "CacheParameterGroupName": {},
                "CacheSecurityGroupNames": {},
                "CacheSubnetGroupName": {},
                "ClusterName": {},
                "Engine": {},
                "EngineVersion": {},
                "NotificationTopicArn": {},
                "NumCacheNodes": {},
                "Port": {},
                "PreferredAvailabilityZone": {},
                "PreferredAvailabilityZones": {},
                "PreferredMaintenanceWindow": {},
                "SnapshotArns": {},
                "SnapshotName": {},
                "SnapshotRetentionLimit": {},
                "SnapshotWindow": {},
                "Tags": {},
                "VpcSecurityGroupIds": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::ParameterGroup": {
            "properties": {
                "CacheParameterGroupFamily": {},
                "Description": {},
                "Properties": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::ReplicationGroup": {
            "properties": {
                "AutoMinorVersionUpgrade": {},
                "AutomaticFailoverEnabled": {},
                "CacheNodeType": {},
                "CacheParameterGroupName": {},
                "CacheSecurityGroupNames": {},
                "CacheSubnetGroupName": {},
                "Engine": {},
                "EngineVersion": {},
                "NodeGroupConfiguration": {},
                "NotificationTopicArn": {},
                "NumCacheClusters": {},
                "NumNodeGroups": {},
                "Port": {},
                "PreferredCacheClusterAZs": {},
                "PreferredMaintenanceWindow": {},
                "PrimaryClusterId": {},
                "ReplicasPerNodeGroup": {},
                "ReplicationGroupDescription": {},
                "ReplicationGroupId": {},
                "SecurityGroupIds": {},
                "SnapshotArns": {},
                "SnapshotName": {},
                "SnapshotRetentionLimit": {},
                "SnapshotWindow": {},
                "SnapshottingClusterId": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::ReplicationGroup.NodeGroupConfiguration": {
            "properties": {
                "PrimaryAvailabilityZone": {},
                "ReplicaAvailabilityZones": {},
                "ReplicaCount": {},
                "Slots": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::SecurityGroup": {
            "properties": {
                "Description": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::SecurityGroupIngress": {
            "properties": {
                "CacheSecurityGroupName": {},
                "EC2SecurityGroupName": {},
                "EC2SecurityGroupOwnerId": {}
            },
            "type": "object"
        },
        "AWS::ElastiCache::SubnetGroup": {
            "properties": {
                "CacheSubnetGroupName": {},
                "Description": {},
                "SubnetIds": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::Application": {
            "properties": {
                "ApplicationName": {},
                "Description": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::ApplicationVersion": {
            "properties": {
                "ApplicationName": {},
                "Description": {},
                "SourceBundle": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle": {
            "properties": {
                "S3Bucket": {},
                "S3Key": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate": {
            "properties": {
                "ApplicationName": {},
                "Description": {},
                "EnvironmentId": {},
                "OptionSettings": {},
                "SolutionStackName": {},
                "SourceConfiguration": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.ConfigurationOptionSetting": {
            "properties": {
                "Namespace": {},
                "OptionName": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration": {
            "properties": {
                "ApplicationName": {},
                "TemplateName": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::Environment": {
            "properties": {
                "ApplicationName": {},
                "CNAMEPrefix": {},
                "Description": {},
                "EnvironmentName": {},
                "OptionSettings": {},
                "SolutionStackName": {},
                "Tags": {},
                "TemplateName": {},
                "Tier": {},
                "VersionLabel": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::Environment.OptionSettings": {
            "properties": {
                "Namespace": {},
                "OptionName": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ElasticBeanstalk::Environment.Tier": {
            "properties": {
                "Name": {},
                "Type": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer": {
            "properties": {
                "AccessLoggingPolicy": {},
                "AppCookieStickinessPolicy": {},
                "AvailabilityZones": {},
                "ConnectionDrainingPolicy": {},
                "ConnectionSettings": {},
                "CrossZone": {},
                "HealthCheck": {},
                "Instances": {},
                "LBCookieStickinessPolicy": {},
                "Listeners": {},
                "LoadBalancerName": {},
                "Policies": {},
                "Scheme": {},
                "SecurityGroups": {},
                "Subnets": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.AccessLoggingPolicy": {
            "properties": {
                "EmitInterval": {},
                "Enabled": {},
                "S3BucketName": {},
                "S3BucketPrefix": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.AppCookieStickinessPolicy": {
            "properties": {
                "CookieName": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionDrainingPolicy": {
            "properties": {
                "Enabled": {},
                "Timeout": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionSettings": {
            "properties": {
                "IdleTimeout": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.HealthCheck": {
            "properties": {
                "HealthyThreshold": {},
                "Interval": {},
                "Target": {},
                "Timeout": {},
                "UnhealthyThreshold": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.LBCookieStickinessPolicy": {
            "properties": {
                "CookieExpirationPeriod": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.Listeners": {
            "properties": {
                "InstancePort": {},
                "InstanceProtocol": {},
                "LoadBalancerPort": {},
                "PolicyNames": {},
                "Protocol": {},
                "SSLCertificateId": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancing::LoadBalancer.Policies": {
            "properties": {
                "Attributes": {},
                "InstancePorts": {},
                "LoadBalancerPorts": {},
                "PolicyName": {},
                "PolicyType": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::Listener": {
            "properties": {
                "Certificates": {},
                "DefaultActions": {},
                "LoadBalancerArn": {},
                "Port": {},
                "Protocol": {},
                "SslPolicy": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::Listener.Action": {
            "properties": {
                "TargetGroupArn": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::Listener.Certificate": {
            "properties": {
                "CertificateArn": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule": {
            "properties": {
                "Actions": {},
                "Conditions": {},
                "ListenerArn": {},
                "Priority": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.Action": {
            "properties": {
                "TargetGroupArn": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::ListenerRule.RuleCondition": {
            "properties": {
                "Field": {},
                "Values": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer": {
            "properties": {
                "IpAddressType": {},
                "LoadBalancerAttributes": {},
                "Name": {},
                "Scheme": {},
                "SecurityGroups": {},
                "Subnets": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttribute": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup": {
            "properties": {
                "HealthCheckIntervalSeconds": {},
                "HealthCheckPath": {},
                "HealthCheckPort": {},
                "HealthCheckProtocol": {},
                "HealthCheckTimeoutSeconds": {},
                "HealthyThresholdCount": {},
                "Matcher": {},
                "Name": {},
                "Port": {},
                "Protocol": {},
                "Tags": {},
                "TargetGroupAttributes": {},
                "Targets": {},
                "UnhealthyThresholdCount": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher": {
            "properties": {
                "HttpCode": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.TargetDescription": {
            "properties": {
                "Id": {},
                "Port": {}
            },
            "type": "object"
        },
        "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttribute": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Elasticsearch::Domain": {
            "properties": {
                "AccessPolicies": {},
                "AdvancedOptions": {},
                "DomainName": {},
                "EBSOptions": {},
                "ElasticsearchClusterConfig": {},
                "ElasticsearchVersion": {},
                "SnapshotOptions": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::Elasticsearch::Domain.EBSOptions": {
            "properties": {
                "EBSEnabled": {},
                "Iops": {},
                "VolumeSize": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig": {
            "properties": {
                "DedicatedMasterCount": {},
                "DedicatedMasterEnabled": {},
                "DedicatedMasterType": {},
                "InstanceCount": {},
                "InstanceType": {},
                "ZoneAwarenessEnabled": {}
            },
            "type": "object"
        },
        "AWS::Elasticsearch::Domain.SnapshotOptions": {
            "properties": {
                "AutomatedSnapshotStartHour": {}
            },
            "type": "object"
        },
        "AWS::Events::Rule": {
            "properties": {
                "Description": {},
                "EventPattern": {},
                "Name": {},
                "RoleArn": {},
                "ScheduleExpression": {},
                "State": {},
                "Targets": {}
            },
            "type": "object"
        },
        "AWS::Events::Rule.Target": {
            "properties": {
                "Arn": {},
                "Id": {},
                "Input": {},
                "InputPath": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Alias": {
            "properties": {
                "Description": {},
                "Name": {},
                "RoutingStrategy": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Alias.RoutingStrategy": {
            "properties": {
                "FleetId": {},
                "Message": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Build": {
            "properties": {
                "Name": {},
                "StorageLocation": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Build.S3Location": {
            "properties": {
                "Bucket": {},
                "Key": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Fleet": {
            "properties": {
                "BuildId": {},
                "Description": {},
                "DesiredEC2Instances": {},
                "EC2InboundPermissions": {},
                "EC2InstanceType": {},
                "LogPaths": {},
                "MaxSize": {},
                "MinSize": {},
                "Name": {},
                "ServerLaunchParameters": {},
                "ServerLaunchPath": {}
            },
            "type": "object"
        },
        "AWS::GameLift::Fleet.IpPermission": {
            "properties": {
                "FromPort": {},
                "IpRange": {},
                "Protocol": {},
                "ToPort": {}
            },
            "type": "object"
        },
        "AWS::IAM::AccessKey": {
            "properties": {
                "Serial": {},
                "Status": {},
                "UserName": {}
            },
            "type": "object"
        },
        "AWS::IAM::Group": {
            "properties": {
                "GroupName": {},
                "ManagedPolicyArns": {},
                "Path": {},
                "Policies": {}
            },
            "type": "object"
        },
        "AWS::IAM::Group.Policy": {
            "properties": {
                "PolicyDocument": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::IAM::InstanceProfile": {
            "properties": {
                "InstanceProfileName": {},
                "Path": {},
                "Roles": {}
            },
            "type": "object"
        },
        "AWS::IAM::ManagedPolicy": {
            "properties": {
                "Description": {},
                "Groups": {},
                "ManagedPolicyName": {},
                "Path": {},
                "PolicyDocument": {},
                "Roles": {},
                "Users": {}
            },
            "type": "object"
        },
        "AWS::IAM::Policy": {
            "properties": {
                "Groups": {},
                "PolicyDocument": {},
                "PolicyName": {},
                "Roles": {},
                "Users": {}
            },
            "type": "object"
        },
        "AWS::IAM::Role": {
            "properties": {
                "AssumeRolePolicyDocument": {},
                "ManagedPolicyArns": {},
                "Path": {},
                "Policies": {},
                "RoleName": {}
            },
            "type": "object"
        },
        "AWS::IAM::Role.Policy": {
            "properties": {
                "PolicyDocument": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::IAM::User": {
            "properties": {
                "Groups": {},
                "LoginProfile": {},
                "ManagedPolicyArns": {},
                "Path": {},
                "Policies": {},
                "UserName": {}
            },
            "type": "object"
        },
        "AWS::IAM::User.LoginProfile": {
            "properties": {
                "Password": {},
                "PasswordResetRequired": {}
            },
            "type": "object"
        },
        "AWS::IAM::User.Policy": {
            "properties": {
                "PolicyDocument": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::IAM::UserToGroupAddition": {
            "properties": {
                "GroupName": {},
                "Users": {}
            },
            "type": "object"
        },
        "AWS::IoT::Certificate": {
            "properties": {
                "CertificateSigningRequest": {},
                "Status": {}
            },
            "type": "object"
        },
        "AWS::IoT::Policy": {
            "properties": {
                "PolicyDocument": {},
                "PolicyName": {}
            },
            "type": "object"
        },
        "AWS::IoT::PolicyPrincipalAttachment": {
            "properties": {
                "PolicyName": {},
                "Principal": {}
            },
            "type": "object"
        },
        "AWS::IoT::Thing": {
            "properties": {
                "AttributePayload": {},
                "ThingName": {}
            },
            "type": "object"
        },
        "AWS::IoT::Thing.AttributePayload": {
            "properties": {
                "Attributes": {}
            },
            "type": "object"
        },
        "AWS::IoT::ThingPrincipalAttachment": {
            "properties": {
                "Principal": {},
                "ThingName": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule": {
            "properties": {
                "RuleName": {},
                "TopicRulePayload": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.Action": {
            "properties": {
                "CloudwatchAlarm": {},
                "CloudwatchMetric": {},
                "DynamoDB": {},
                "Elasticsearch": {},
                "Firehose": {},
                "Kinesis": {},
                "Lambda": {},
                "Republish": {},
                "S3": {},
                "Sns": {},
                "Sqs": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.CloudwatchAlarmAction": {
            "properties": {
                "AlarmName": {},
                "RoleArn": {},
                "StateReason": {},
                "StateValue": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.CloudwatchMetricAction": {
            "properties": {
                "MetricName": {},
                "MetricNamespace": {},
                "MetricTimestamp": {},
                "MetricUnit": {},
                "MetricValue": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.DynamoDBAction": {
            "properties": {
                "HashKeyField": {},
                "HashKeyValue": {},
                "PayloadField": {},
                "RangeKeyField": {},
                "RangeKeyValue": {},
                "RoleArn": {},
                "TableName": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.ElasticsearchAction": {
            "properties": {
                "Endpoint": {},
                "Id": {},
                "Index": {},
                "RoleArn": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.FirehoseAction": {
            "properties": {
                "DeliveryStreamName": {},
                "RoleArn": {},
                "Separator": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.KinesisAction": {
            "properties": {
                "PartitionKey": {},
                "RoleArn": {},
                "StreamName": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.LambdaAction": {
            "properties": {
                "FunctionArn": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.RepublishAction": {
            "properties": {
                "RoleArn": {},
                "Topic": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.S3Action": {
            "properties": {
                "BucketName": {},
                "Key": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.SnsAction": {
            "properties": {
                "MessageFormat": {},
                "RoleArn": {},
                "TargetArn": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.SqsAction": {
            "properties": {
                "QueueUrl": {},
                "RoleArn": {},
                "UseBase64": {}
            },
            "type": "object"
        },
        "AWS::IoT::TopicRule.TopicRulePayload": {
            "properties": {
                "Actions": {},
                "AwsIotSqlVersion": {},
                "Description": {},
                "RuleDisabled": {},
                "Sql": {}
            },
            "type": "object"
        },
        "AWS::KMS::Alias": {
            "properties": {
                "AliasName": {},
                "TargetKeyId": {}
            },
            "type": "object"
        },
        "AWS::KMS::Key": {
            "properties": {
                "Description": {},
                "EnableKeyRotation": {},
                "Enabled": {},
                "KeyPolicy": {},
                "KeyUsage": {}
            },
            "type": "object"
        },
        "AWS::Kinesis::Stream": {
            "properties": {
                "Name": {},
                "RetentionPeriodHours": {},
                "ShardCount": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application": {
            "properties": {
                "ApplicationCode": {},
                "ApplicationDescription": {},
                "ApplicationName": {},
                "Inputs": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.CSVMappingParameters": {
            "properties": {
                "RecordColumnDelimiter": {},
                "RecordRowDelimiter": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.Input": {
            "properties": {
                "InputParallelism": {},
                "InputSchema": {},
                "KinesisFirehoseInput": {},
                "KinesisStreamsInput": {},
                "NamePrefix": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.InputParallelism": {
            "properties": {
                "Count": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.InputSchema": {
            "properties": {
                "RecordColumns": {},
                "RecordEncoding": {},
                "RecordFormat": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.JSONMappingParameters": {
            "properties": {
                "RecordRowPath": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.KinesisFirehoseInput": {
            "properties": {
                "ResourceARN": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.KinesisStreamsInput": {
            "properties": {
                "ResourceARN": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.MappingParameters": {
            "properties": {
                "CSVMappingParameters": {},
                "JSONMappingParameters": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.RecordColumn": {
            "properties": {
                "Mapping": {},
                "Name": {},
                "SqlType": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::Application.RecordFormat": {
            "properties": {
                "MappingParameters": {},
                "RecordFormatType": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationOutput": {
            "properties": {
                "ApplicationName": {},
                "Output": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationOutput.DestinationSchema": {
            "properties": {
                "RecordFormatType": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationOutput.KinesisFirehoseOutput": {
            "properties": {
                "ResourceARN": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationOutput.KinesisStreamsOutput": {
            "properties": {
                "ResourceARN": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationOutput.Output": {
            "properties": {
                "DestinationSchema": {},
                "KinesisFirehoseOutput": {},
                "KinesisStreamsOutput": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
            "properties": {
                "ApplicationName": {},
                "ReferenceDataSource": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.CSVMappingParameters": {
            "properties": {
                "RecordColumnDelimiter": {},
                "RecordRowDelimiter": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.JSONMappingParameters": {
            "properties": {
                "RecordRowPath": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.MappingParameters": {
            "properties": {
                "CSVMappingParameters": {},
                "JSONMappingParameters": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordColumn": {
            "properties": {
                "Mapping": {},
                "Name": {},
                "SqlType": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordFormat": {
            "properties": {
                "MappingParameters": {},
                "RecordFormatType": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource": {
            "properties": {
                "ReferenceSchema": {},
                "S3ReferenceDataSource": {},
                "TableName": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceSchema": {
            "properties": {
                "RecordColumns": {},
                "RecordEncoding": {},
                "RecordFormat": {}
            },
            "type": "object"
        },
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource.S3ReferenceDataSource": {
            "properties": {
                "BucketARN": {},
                "FileKey": {},
                "ReferenceRoleARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream": {
            "properties": {
                "DeliveryStreamName": {},
                "ElasticsearchDestinationConfiguration": {},
                "RedshiftDestinationConfiguration": {},
                "S3DestinationConfiguration": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.BufferingHints": {
            "properties": {
                "IntervalInSeconds": {},
                "SizeInMBs": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.CloudWatchLoggingOptions": {
            "properties": {
                "Enabled": {},
                "LogGroupName": {},
                "LogStreamName": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.CopyCommand": {
            "properties": {
                "CopyOptions": {},
                "DataTableColumns": {},
                "DataTableName": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.ElasticsearchBufferingHints": {
            "properties": {
                "IntervalInSeconds": {},
                "SizeInMBs": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration": {
            "properties": {
                "BufferingHints": {},
                "CloudWatchLoggingOptions": {},
                "DomainARN": {},
                "IndexName": {},
                "IndexRotationPeriod": {},
                "RetryOptions": {},
                "RoleARN": {},
                "S3BackupMode": {},
                "S3Configuration": {},
                "TypeName": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.ElasticsearchRetryOptions": {
            "properties": {
                "DurationInSeconds": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.EncryptionConfiguration": {
            "properties": {
                "KMSEncryptionConfig": {},
                "NoEncryptionConfig": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.KMSEncryptionConfig": {
            "properties": {
                "AWSKMSKeyARN": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration": {
            "properties": {
                "CloudWatchLoggingOptions": {},
                "ClusterJDBCURL": {},
                "CopyCommand": {},
                "Password": {},
                "RoleARN": {},
                "S3Configuration": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration": {
            "properties": {
                "BucketARN": {},
                "BufferingHints": {},
                "CloudWatchLoggingOptions": {},
                "CompressionFormat": {},
                "EncryptionConfiguration": {},
                "Prefix": {},
                "RoleARN": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Alias": {
            "properties": {
                "Description": {},
                "FunctionName": {},
                "FunctionVersion": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::Lambda::EventSourceMapping": {
            "properties": {
                "BatchSize": {},
                "Enabled": {},
                "EventSourceArn": {},
                "FunctionName": {},
                "StartingPosition": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function": {
            "properties": {
                "Code": {},
                "DeadLetterConfig": {},
                "Description": {},
                "Environment": {},
                "FunctionName": {},
                "Handler": {},
                "KmsKeyArn": {},
                "MemorySize": {},
                "Role": {},
                "Runtime": {},
                "Tags": {},
                "Timeout": {},
                "TracingConfig": {},
                "VpcConfig": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function.Code": {
            "properties": {
                "S3Bucket": {},
                "S3Key": {},
                "S3ObjectVersion": {},
                "ZipFile": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function.DeadLetterConfig": {
            "properties": {
                "TargetArn": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function.Environment": {
            "properties": {
                "Variables": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function.TracingConfig": {
            "properties": {
                "Mode": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Function.VpcConfig": {
            "properties": {
                "SecurityGroupIds": {},
                "SubnetIds": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Permission": {
            "properties": {
                "Action": {},
                "FunctionName": {},
                "Principal": {},
                "SourceAccount": {},
                "SourceArn": {}
            },
            "type": "object"
        },
        "AWS::Lambda::Version": {
            "properties": {
                "CodeSha256": {},
                "Description": {},
                "FunctionName": {}
            },
            "type": "object"
        },
        "AWS::Logs::Destination": {
            "properties": {
                "DestinationName": {},
                "DestinationPolicy": {},
                "RoleArn": {},
                "TargetArn": {}
            },
            "type": "object"
        },
        "AWS::Logs::LogGroup": {
            "properties": {
                "LogGroupName": {},
                "RetentionInDays": {}
            },
            "type": "object"
        },
        "AWS::Logs::LogStream": {
            "properties": {
                "LogGroupName": {},
                "LogStreamName": {}
            },
            "type": "object"
        },
        "AWS::Logs::MetricFilter": {
            "properties": {
                "FilterPattern": {},
                "LogGroupName": {},
                "MetricTransformations": {}
            },
            "type": "object"
        },
        "AWS::Logs::MetricFilter.MetricTransformation": {
            "properties": {
                "MetricName": {},
                "MetricNamespace": {},
                "MetricValue": {}
            },
            "type": "object"
        },
        "AWS::Logs::SubscriptionFilter": {
            "properties": {
                "DestinationArn": {},
                "FilterPattern": {},
                "LogGroupName": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::App": {
            "properties": {
                "AppSource": {},
                "Attributes": {},
                "DataSources": {},
                "Description": {},
                "Domains": {},
                "EnableSsl": {},
                "Environment": {},
                "Name": {},
                "Shortname": {},
                "SslConfiguration": {},
                "StackId": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::App.DataSource": {
            "properties": {
                "Arn": {},
                "DatabaseName": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::App.EnvironmentVariable": {
            "properties": {
                "Key": {},
                "Secure": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::App.Source": {
            "properties": {
                "Password": {},
                "Revision": {},
                "SshKey": {},
                "Type": {},
                "Url": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::App.SslConfiguration": {
            "properties": {
                "Certificate": {},
                "Chain": {},
                "PrivateKey": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
            "properties": {
                "ElasticLoadBalancerName": {},
                "LayerId": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Instance": {
            "properties": {
                "AgentVersion": {},
                "AmiId": {},
                "Architecture": {},
                "AutoScalingType": {},
                "AvailabilityZone": {},
                "BlockDeviceMappings": {},
                "EbsOptimized": {},
                "ElasticIps": {},
                "Hostname": {},
                "InstallUpdatesOnBoot": {},
                "InstanceType": {},
                "LayerIds": {},
                "Os": {},
                "RootDeviceType": {},
                "SshKeyName": {},
                "StackId": {},
                "SubnetId": {},
                "Tenancy": {},
                "TimeBasedAutoScaling": {},
                "VirtualizationType": {},
                "Volumes": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Instance.BlockDeviceMapping": {
            "properties": {
                "DeviceName": {},
                "Ebs": {},
                "NoDevice": {},
                "VirtualName": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Instance.EbsBlockDevice": {
            "properties": {
                "DeleteOnTermination": {},
                "Iops": {},
                "SnapshotId": {},
                "VolumeSize": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Instance.TimeBasedAutoScaling": {
            "properties": {
                "Friday": {},
                "Monday": {},
                "Saturday": {},
                "Sunday": {},
                "Thursday": {},
                "Tuesday": {},
                "Wednesday": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer": {
            "properties": {
                "Attributes": {},
                "AutoAssignElasticIps": {},
                "AutoAssignPublicIps": {},
                "CustomInstanceProfileArn": {},
                "CustomJson": {},
                "CustomRecipes": {},
                "CustomSecurityGroupIds": {},
                "EnableAutoHealing": {},
                "InstallUpdatesOnBoot": {},
                "LifecycleEventConfiguration": {},
                "LoadBasedAutoScaling": {},
                "Name": {},
                "Packages": {},
                "Shortname": {},
                "StackId": {},
                "Type": {},
                "UseEbsOptimizedInstances": {},
                "VolumeConfigurations": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.AutoScalingThresholds": {
            "properties": {
                "CpuThreshold": {},
                "IgnoreMetricsTime": {},
                "InstanceCount": {},
                "LoadThreshold": {},
                "MemoryThreshold": {},
                "ThresholdsWaitTime": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.LifecycleEventConfiguration": {
            "properties": {
                "ShutdownEventConfiguration": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.LoadBasedAutoScaling": {
            "properties": {
                "DownScaling": {},
                "Enable": {},
                "UpScaling": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.Recipes": {
            "properties": {
                "Configure": {},
                "Deploy": {},
                "Setup": {},
                "Shutdown": {},
                "Undeploy": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.ShutdownEventConfiguration": {
            "properties": {
                "DelayUntilElbConnectionsDrained": {},
                "ExecutionTimeout": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Layer.VolumeConfiguration": {
            "properties": {
                "Iops": {},
                "MountPoint": {},
                "NumberOfDisks": {},
                "RaidLevel": {},
                "Size": {},
                "VolumeType": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack": {
            "properties": {
                "AgentVersion": {},
                "Attributes": {},
                "ChefConfiguration": {},
                "CloneAppIds": {},
                "ClonePermissions": {},
                "ConfigurationManager": {},
                "CustomCookbooksSource": {},
                "CustomJson": {},
                "DefaultAvailabilityZone": {},
                "DefaultInstanceProfileArn": {},
                "DefaultOs": {},
                "DefaultRootDeviceType": {},
                "DefaultSshKeyName": {},
                "DefaultSubnetId": {},
                "EcsClusterArn": {},
                "ElasticIps": {},
                "HostnameTheme": {},
                "Name": {},
                "RdsDbInstances": {},
                "ServiceRoleArn": {},
                "SourceStackId": {},
                "UseCustomCookbooks": {},
                "UseOpsworksSecurityGroups": {},
                "VpcId": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack.ChefConfiguration": {
            "properties": {
                "BerkshelfVersion": {},
                "ManageBerkshelf": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack.ElasticIp": {
            "properties": {
                "Ip": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack.RdsDbInstance": {
            "properties": {
                "DbPassword": {},
                "DbUser": {},
                "RdsDbInstanceArn": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack.Source": {
            "properties": {
                "Password": {},
                "Revision": {},
                "SshKey": {},
                "Type": {},
                "Url": {},
                "Username": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Stack.StackConfigurationManager": {
            "properties": {
                "Name": {},
                "Version": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::UserProfile": {
            "properties": {
                "AllowSelfManagement": {},
                "IamUserArn": {},
                "SshPublicKey": {},
                "SshUsername": {}
            },
            "type": "object"
        },
        "AWS::OpsWorks::Volume": {
            "properties": {
                "Ec2VolumeId": {},
                "MountPoint": {},
                "Name": {},
                "StackId": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBCluster": {
            "properties": {
                "AvailabilityZones": {},
                "BackupRetentionPeriod": {},
                "DBClusterParameterGroupName": {},
                "DBSubnetGroupName": {},
                "DatabaseName": {},
                "Engine": {},
                "EngineVersion": {},
                "KmsKeyId": {},
                "MasterUserPassword": {},
                "MasterUsername": {},
                "Port": {},
                "PreferredBackupWindow": {},
                "PreferredMaintenanceWindow": {},
                "ReplicationSourceIdentifier": {},
                "SnapshotIdentifier": {},
                "StorageEncrypted": {},
                "Tags": {},
                "VpcSecurityGroupIds": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBClusterParameterGroup": {
            "properties": {
                "Description": {},
                "Family": {},
                "Parameters": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBInstance": {
            "properties": {
                "AllocatedStorage": {},
                "AllowMajorVersionUpgrade": {},
                "AutoMinorVersionUpgrade": {},
                "AvailabilityZone": {},
                "BackupRetentionPeriod": {},
                "CharacterSetName": {},
                "CopyTagsToSnapshot": {},
                "DBClusterIdentifier": {},
                "DBInstanceClass": {},
                "DBInstanceIdentifier": {},
                "DBName": {},
                "DBParameterGroupName": {},
                "DBSecurityGroups": {},
                "DBSnapshotIdentifier": {},
                "DBSubnetGroupName": {},
                "Domain": {},
                "DomainIAMRoleName": {},
                "Engine": {},
                "EngineVersion": {},
                "Iops": {},
                "KmsKeyId": {},
                "LicenseModel": {},
                "MasterUserPassword": {},
                "MasterUsername": {},
                "MonitoringInterval": {},
                "MonitoringRoleArn": {},
                "MultiAZ": {},
                "OptionGroupName": {},
                "Port": {},
                "PreferredBackupWindow": {},
                "PreferredMaintenanceWindow": {},
                "PubliclyAccessible": {},
                "SourceDBInstanceIdentifier": {},
                "StorageEncrypted": {},
                "StorageType": {},
                "Tags": {},
                "Timezone": {},
                "VPCSecurityGroups": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBParameterGroup": {
            "properties": {
                "Description": {},
                "Family": {},
                "Parameters": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBSecurityGroup": {
            "properties": {
                "DBSecurityGroupIngress": {},
                "EC2VpcId": {},
                "GroupDescription": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBSecurityGroup.Ingress": {
            "properties": {
                "CIDRIP": {},
                "EC2SecurityGroupId": {},
                "EC2SecurityGroupName": {},
                "EC2SecurityGroupOwnerId": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBSecurityGroupIngress": {
            "properties": {
                "CIDRIP": {},
                "DBSecurityGroupName": {},
                "EC2SecurityGroupId": {},
                "EC2SecurityGroupName": {},
                "EC2SecurityGroupOwnerId": {}
            },
            "type": "object"
        },
        "AWS::RDS::DBSubnetGroup": {
            "properties": {
                "DBSubnetGroupDescription": {},
                "SubnetIds": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::RDS::EventSubscription": {
            "properties": {
                "Enabled": {},
                "EventCategories": {},
                "SnsTopicArn": {},
                "SourceIds": {},
                "SourceType": {}
            },
            "type": "object"
        },
        "AWS::RDS::OptionGroup": {
            "properties": {
                "EngineName": {},
                "MajorEngineVersion": {},
                "OptionConfigurations": {},
                "OptionGroupDescription": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::RDS::OptionGroup.OptionConfiguration": {
            "properties": {
                "DBSecurityGroupMemberships": {},
                "OptionName": {},
                "OptionSettings": {},
                "Port": {},
                "VpcSecurityGroupMemberships": {}
            },
            "type": "object"
        },
        "AWS::RDS::OptionGroup.OptionSetting": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Redshift::Cluster": {
            "properties": {
                "AllowVersionUpgrade": {},
                "AutomatedSnapshotRetentionPeriod": {},
                "AvailabilityZone": {},
                "ClusterParameterGroupName": {},
                "ClusterSecurityGroups": {},
                "ClusterSubnetGroupName": {},
                "ClusterType": {},
                "ClusterVersion": {},
                "DBName": {},
                "ElasticIp": {},
                "Encrypted": {},
                "HsmClientCertificateIdentifier": {},
                "HsmConfigurationIdentifier": {},
                "IamRoles": {},
                "KmsKeyId": {},
                "LoggingProperties": {},
                "MasterUserPassword": {},
                "MasterUsername": {},
                "NodeType": {},
                "NumberOfNodes": {},
                "OwnerAccount": {},
                "Port": {},
                "PreferredMaintenanceWindow": {},
                "PubliclyAccessible": {},
                "SnapshotClusterIdentifier": {},
                "SnapshotIdentifier": {},
                "Tags": {},
                "VpcSecurityGroupIds": {}
            },
            "type": "object"
        },
        "AWS::Redshift::Cluster.LoggingProperties": {
            "properties": {
                "BucketName": {},
                "S3KeyPrefix": {}
            },
            "type": "object"
        },
        "AWS::Redshift::ClusterParameterGroup": {
            "properties": {
                "Description": {},
                "ParameterGroupFamily": {},
                "Parameters": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::Redshift::ClusterParameterGroup.Parameter": {
            "properties": {
                "ParameterName": {},
                "ParameterValue": {}
            },
            "type": "object"
        },
        "AWS::Redshift::ClusterSecurityGroup": {
            "properties": {
                "Description": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::Redshift::ClusterSecurityGroupIngress": {
            "properties": {
                "CIDRIP": {},
                "ClusterSecurityGroupName": {},
                "EC2SecurityGroupName": {},
                "EC2SecurityGroupOwnerId": {}
            },
            "type": "object"
        },
        "AWS::Redshift::ClusterSubnetGroup": {
            "properties": {
                "Description": {},
                "SubnetIds": {},
                "Tags": {}
            },
            "type": "object"
        },
        "AWS::Route53::HealthCheck": {
            "properties": {
                "HealthCheckConfig": {},
                "HealthCheckTags": {}
            },
            "type": "object"
        },
        "AWS::Route53::HealthCheck.AlarmIdentifier": {
            "properties": {
                "Name": {},
                "Region": {}
            },
            "type": "object"
        },
        "AWS::Route53::HealthCheck.HealthCheckConfig": {
            "properties": {
                "AlarmIdentifier": {},
                "ChildHealthChecks": {},
                "EnableSNI": {},
                "FailureThreshold": {},
                "FullyQualifiedDomainName": {},
                "HealthThreshold": {},
                "IPAddress": {},
                "InsufficientDataHealthStatus": {},
                "Inverted": {},
                "MeasureLatency": {},
                "Port": {},
                "RequestInterval": {},
                "ResourcePath": {},
                "SearchString": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::Route53::HealthCheck.HealthCheckTag": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Route53::HostedZone": {
            "properties": {
                "HostedZoneConfig": {},
                "HostedZoneTags": {},
                "Name": {},
                "VPCs": {}
            },
            "type": "object"
        },
        "AWS::Route53::HostedZone.HostedZoneConfig": {
            "properties": {
                "Comment": {}
            },
            "type": "object"
        },
        "AWS::Route53::HostedZone.HostedZoneTag": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::Route53::HostedZone.VPC": {
            "properties": {
                "VPCId": {},
                "VPCRegion": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSet": {
            "properties": {
                "AliasTarget": {},
                "Comment": {},
                "Failover": {},
                "GeoLocation": {},
                "HealthCheckId": {},
                "HostedZoneId": {},
                "HostedZoneName": {},
                "Name": {},
                "Region": {},
                "ResourceRecords": {},
                "SetIdentifier": {},
                "TTL": {},
                "Type": {},
                "Weight": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSet.AliasTarget": {
            "properties": {
                "DNSName": {},
                "EvaluateTargetHealth": {},
                "HostedZoneId": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSet.GeoLocation": {
            "properties": {
                "ContinentCode": {},
                "CountryCode": {},
                "SubdivisionCode": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSetGroup": {
            "properties": {
                "Comment": {},
                "HostedZoneId": {},
                "HostedZoneName": {},
                "RecordSets": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSetGroup.AliasTarget": {
            "properties": {
                "DNSName": {},
                "EvaluateTargetHealth": {},
                "HostedZoneId": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSetGroup.GeoLocation": {
            "properties": {
                "ContinentCode": {},
                "CountryCode": {},
                "SubdivisionCode": {}
            },
            "type": "object"
        },
        "AWS::Route53::RecordSetGroup.RecordSet": {
            "properties": {
                "AliasTarget": {},
                "Comment": {},
                "Failover": {},
                "GeoLocation": {},
                "HealthCheckId": {},
                "HostedZoneId": {},
                "HostedZoneName": {},
                "Name": {},
                "Region": {},
                "ResourceRecords": {},
                "SetIdentifier": {},
                "TTL": {},
                "Type": {},
                "Weight": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket": {
            "properties": {
                "AccessControl": {},
                "BucketName": {},
                "CorsConfiguration": {},
                "LifecycleConfiguration": {},
                "LoggingConfiguration": {},
                "NotificationConfiguration": {},
                "ReplicationConfiguration": {},
                "Tags": {},
                "VersioningConfiguration": {},
                "WebsiteConfiguration": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.CorsConfiguration": {
            "properties": {
                "CorsRules": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.CorsRule": {
            "properties": {
                "AllowedHeaders": {},
                "AllowedMethods": {},
                "AllowedOrigins": {},
                "ExposedHeaders": {},
                "Id": {},
                "MaxAge": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.FilterRule": {
            "properties": {
                "Name": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.LambdaConfiguration": {
            "properties": {
                "Event": {},
                "Filter": {},
                "Function": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.LifecycleConfiguration": {
            "properties": {
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.LoggingConfiguration": {
            "properties": {
                "DestinationBucketName": {},
                "LogFilePrefix": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.NoncurrentVersionTransition": {
            "properties": {
                "StorageClass": {},
                "TransitionInDays": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.NotificationConfiguration": {
            "properties": {
                "LambdaConfigurations": {},
                "QueueConfigurations": {},
                "TopicConfigurations": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.NotificationFilter": {
            "properties": {
                "S3Key": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.QueueConfiguration": {
            "properties": {
                "Event": {},
                "Filter": {},
                "Queue": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.RedirectAllRequestsTo": {
            "properties": {
                "HostName": {},
                "Protocol": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.RedirectRule": {
            "properties": {
                "HostName": {},
                "HttpRedirectCode": {},
                "Protocol": {},
                "ReplaceKeyPrefixWith": {},
                "ReplaceKeyWith": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.ReplicationConfiguration": {
            "properties": {
                "Role": {},
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.ReplicationDestination": {
            "properties": {
                "Bucket": {},
                "StorageClass": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.ReplicationRule": {
            "properties": {
                "Destination": {},
                "Id": {},
                "Prefix": {},
                "Status": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.RoutingRule": {
            "properties": {
                "RedirectRule": {},
                "RoutingRuleCondition": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.RoutingRuleCondition": {
            "properties": {
                "HttpErrorCodeReturnedEquals": {},
                "KeyPrefixEquals": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.Rule": {
            "properties": {
                "ExpirationDate": {},
                "ExpirationInDays": {},
                "Id": {},
                "NoncurrentVersionExpirationInDays": {},
                "NoncurrentVersionTransition": {},
                "NoncurrentVersionTransitions": {},
                "Prefix": {},
                "Status": {},
                "Transition": {},
                "Transitions": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.S3KeyFilter": {
            "properties": {
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.TopicConfiguration": {
            "properties": {
                "Event": {},
                "Filter": {},
                "Topic": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.Transition": {
            "properties": {
                "StorageClass": {},
                "TransitionDate": {},
                "TransitionInDays": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.VersioningConfiguration": {
            "properties": {
                "Status": {}
            },
            "type": "object"
        },
        "AWS::S3::Bucket.WebsiteConfiguration": {
            "properties": {
                "ErrorDocument": {},
                "IndexDocument": {},
                "RedirectAllRequestsTo": {},
                "RoutingRules": {}
            },
            "type": "object"
        },
        "AWS::S3::BucketPolicy": {
            "properties": {
                "Bucket": {},
                "PolicyDocument": {}
            },
            "type": "object"
        },
        "AWS::SDB::Domain": {
            "properties": {
                "Description": {}
            },
            "type": "object"
        },
        "AWS::SNS::Subscription": {
            "properties": {
                "Endpoint": {},
                "Protocol": {},
                "TopicArn": {}
            },
            "type": "object"
        },
        "AWS::SNS::Topic": {
            "properties": {
                "DisplayName": {},
                "Subscription": {},
                "TopicName": {}
            },
            "type": "object"
        },
        "AWS::SNS::Topic.Subscription": {
            "properties": {
                "Endpoint": {},
                "Protocol": {}
            },
            "type": "object"
        },
        "AWS::SNS::TopicPolicy": {
            "properties": {
                "PolicyDocument": {},
                "Topics": {}
            },
            "type": "object"
        },
        "AWS::SQS::Queue": {
            "properties": {
                "ContentBasedDeduplication": {},
                "DelaySeconds": {},
                "FifoQueue": {},
                "MaximumMessageSize": {},
                "MessageRetentionPeriod": {},
                "QueueName": {},
                "ReceiveMessageWaitTimeSeconds": {},
                "RedrivePolicy": {},
                "VisibilityTimeout": {}
            },
            "type": "object"
        },
        "AWS::SQS::QueuePolicy": {
            "properties": {
                "PolicyDocument": {},
                "Queues": {}
            },
            "type": "object"
        },
        "AWS::SSM::Association": {
            "properties": {
                "DocumentVersion": {},
                "InstanceId": {},
                "Name": {},
                "Parameters": {},
                "ScheduleExpression": {},
                "Targets": {}
            },
            "type": "object"
        },
        "AWS::SSM::Association.ParameterValues": {
            "properties": {
                "ParameterValues": {}
            },
            "type": "object"
        },
        "AWS::SSM::Association.Target": {
            "properties": {
                "Key": {},
                "Values": {}
            },
            "type": "object"
        },
        "AWS::SSM::Document": {
            "properties": {
                "Content": {},
                "DocumentType": {}
            },
            "type": "object"
        },
        "AWS::SSM::Parameter": {
            "properties": {
                "Description": {},
                "Name": {},
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::StepFunctions::Activity": {
            "properties": {
                "Name": {}
            },
            "type": "object"
        },
        "AWS::StepFunctions::StateMachine": {
            "properties": {
                "DefinitionString": {},
                "RoleArn": {}
            },
            "type": "object"
        },
        "AWS::WAF::ByteMatchSet": {
            "properties": {
                "ByteMatchTuples": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::WAF::ByteMatchSet.ByteMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "PositionalConstraint": {},
                "TargetString": {},
                "TargetStringBase64": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAF::ByteMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::IPSet": {
            "properties": {
                "IPSetDescriptors": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::WAF::IPSet.IPSetDescriptor": {
            "properties": {
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::WAF::Rule": {
            "properties": {
                "MetricName": {},
                "Name": {},
                "Predicates": {}
            },
            "type": "object"
        },
        "AWS::WAF::Rule.Predicate": {
            "properties": {
                "DataId": {},
                "Negated": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::SizeConstraintSet": {
            "properties": {
                "Name": {},
                "SizeConstraints": {}
            },
            "type": "object"
        },
        "AWS::WAF::SizeConstraintSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::SizeConstraintSet.SizeConstraint": {
            "properties": {
                "ComparisonOperator": {},
                "FieldToMatch": {},
                "Size": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAF::SqlInjectionMatchSet": {
            "properties": {
                "Name": {},
                "SqlInjectionMatchTuples": {}
            },
            "type": "object"
        },
        "AWS::WAF::SqlInjectionMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAF::WebACL": {
            "properties": {
                "DefaultAction": {},
                "MetricName": {},
                "Name": {},
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::WAF::WebACL.ActivatedRule": {
            "properties": {
                "Action": {},
                "Priority": {},
                "RuleId": {}
            },
            "type": "object"
        },
        "AWS::WAF::WebACL.WafAction": {
            "properties": {
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::XssMatchSet": {
            "properties": {
                "Name": {},
                "XssMatchTuples": {}
            },
            "type": "object"
        },
        "AWS::WAF::XssMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAF::XssMatchSet.XssMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::ByteMatchSet": {
            "properties": {
                "ByteMatchTuples": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::ByteMatchSet.ByteMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "PositionalConstraint": {},
                "TargetString": {},
                "TargetStringBase64": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::ByteMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::IPSet": {
            "properties": {
                "IPSetDescriptors": {},
                "Name": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::IPSet.IPSetDescriptor": {
            "properties": {
                "Type": {},
                "Value": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::Rule": {
            "properties": {
                "MetricName": {},
                "Name": {},
                "Predicates": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::Rule.Predicate": {
            "properties": {
                "DataId": {},
                "Negated": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SizeConstraintSet": {
            "properties": {
                "Name": {},
                "SizeConstraints": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SizeConstraintSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SizeConstraintSet.SizeConstraint": {
            "properties": {
                "ComparisonOperator": {},
                "FieldToMatch": {},
                "Size": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SqlInjectionMatchSet": {
            "properties": {
                "Name": {},
                "SqlInjectionMatchTuples": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SqlInjectionMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::WebACL": {
            "properties": {
                "DefaultAction": {},
                "MetricName": {},
                "Name": {},
                "Rules": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::WebACL.Action": {
            "properties": {
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::WebACL.Rule": {
            "properties": {
                "Action": {},
                "Priority": {},
                "RuleId": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::WebACLAssociation": {
            "properties": {
                "ResourceArn": {},
                "WebACLId": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::XssMatchSet": {
            "properties": {
                "Name": {},
                "XssMatchTuples": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::XssMatchSet.FieldToMatch": {
            "properties": {
                "Data": {},
                "Type": {}
            },
            "type": "object"
        },
        "AWS::WAFRegional::XssMatchSet.XssMatchTuple": {
            "properties": {
                "FieldToMatch": {},
                "TextTransformation": {}
            },
            "type": "object"
        },
        "AWS::WorkSpaces::Workspace": {
            "properties": {
                "BundleId": {},
                "DirectoryId": {},
                "RootVolumeEncryptionEnabled": {},
                "UserName": {},
                "UserVolumeEncryptionEnabled": {},
                "VolumeEncryptionKey": {}
            },
            "type": "object"
        },
        "Parameter": {
            "additionalProperties": false,
            "properties": {
                "AllowedPattern": {
                    "type": "string"
                },
                "AllowedValues": {
                    "type": "array"
                },
                "ConstraintDescription": {
                    "type": "string"
                },
                "Default": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "MaxLength": {
                    "type": "string"
                },
                "MaxValue": {
                    "type": "string"
                },
                "MinLength": {
                    "type": "string"
                },
                "MinValue": {
                    "type": "string"
                },
                "NoEcho": {
                    "type": [
                        "string",
                        "boolean"
                    ]
                },
                "Type": {
                    "enum": [
                        "String",
                        "Number",
                        "List\u003cNumber\u003e",
                        "CommaDelimitedList",
                        "AWS::EC2::AvailabilityZone::Name",
                        "AWS::EC2::Image::Id",
                        "AWS::EC2::Instance::Id",
                        "AWS::EC2::KeyPair::KeyName",
                        "AWS::EC2::SecurityGroup::GroupName",
                        "AWS::EC2::SecurityGroup::Id",
                        "AWS::EC2::Subnet::Id",
                        "AWS::EC2::Volume::Id",
                        "AWS::EC2::VPC::Id",
                        "AWS::Route53::HostedZone::Id",
                        "List\u003cAWS::EC2::AvailabilityZone::Name\u003e",
                        "List\u003cAWS::EC2::Image::Id\u003e",
                        "List\u003cAWS::EC2::Instance::Id\u003e",
                        "List\u003cAWS::EC2::SecurityGroup::GroupName\u003e",
                        "List\u003cAWS::EC2::SecurityGroup::Id\u003e",
                        "List\u003cAWS::EC2::Subnet::Id\u003e",
                        "List\u003cAWS::EC2::Volume::Id\u003e",
                        "List\u003cAWS::EC2::VPC::Id\u003e",
                        "List\u003cAWS::Route53::HostedZone::Id\u003e",
                        "List\u003cString\u003e"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "Type"
            ],
            "type": "object"
        },
        "Tag": {
            "properties": {
                "Key": {},
                "Value": {}
            },
            "type": "object"
        }
    },
    "id": "https://aws.amazon.com/cloudformation/#1.4.2",
    "properties": {
        "AWSTemplateFormatVersion": {
            "enum": [
                "2010-09-09"
            ],
            "type": "string"
        },
        "Conditions": {
            "additionalProperties": false,
            "patternProperties": {
                ".*": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Description": {
            "description": "Template description",
            "maxLength": 1024,
            "type": "string"
        },
        "Mappings": {
            "additionalProperties": false,
            "patternProperties": {
                ".*": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Parameters": {
            "additionalProperties": false,
            "maxProperties": 50,
            "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                    "$ref": "#/definitions/Parameter"
                }
            },
            "type": "object"
        },
        "Resources": {
            "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Account"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::ApiKey"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Authorizer"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::BasePathMapping"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::ClientCertificate"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Deployment"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::DomainName"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Method"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Model"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Resource"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::RestApi"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::Stage"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::UsagePlan"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApiGateway::UsagePlanKey"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApplicationAutoScaling::ScalableTarget"
                        },
                        {
                            "$ref": "#/definitions/AWS::ApplicationAutoScaling::ScalingPolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::AutoScaling::AutoScalingGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::AutoScaling::LaunchConfiguration"
                        },
                        {
                            "$ref": "#/definitions/AWS::AutoScaling::LifecycleHook"
                        },
                        {
                            "$ref": "#/definitions/AWS::AutoScaling::ScalingPolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::AutoScaling::ScheduledAction"
                        },
                        {
                            "$ref": "#/definitions/AWS::Batch::ComputeEnvironment"
                        },
                        {
                            "$ref": "#/definitions/AWS::Batch::JobDefinition"
                        },
                        {
                            "$ref": "#/definitions/AWS::Batch::JobQueue"
                        },
                        {
                            "$ref": "#/definitions/AWS::CertificateManager::Certificate"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudFormation::CustomResource"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudFormation::Stack"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudFormation::WaitCondition"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudFormation::WaitConditionHandle"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudFront::Distribution"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudTrail::Trail"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudWatch::Alarm"
                        },
                        {
                            "$ref": "#/definitions/AWS::CloudWatch::Dashboard"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodeBuild::Project"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodeCommit::Repository"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodeDeploy::Application"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodeDeploy::DeploymentConfig"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodeDeploy::DeploymentGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodePipeline::CustomActionType"
                        },
                        {
                            "$ref": "#/definitions/AWS::CodePipeline::Pipeline"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::IdentityPool"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::IdentityPoolRoleAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::UserPool"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::UserPoolClient"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::UserPoolGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::UserPoolUser"
                        },
                        {
                            "$ref": "#/definitions/AWS::Cognito::UserPoolUserToGroupAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::Config::ConfigRule"
                        },
                        {
                            "$ref": "#/definitions/AWS::Config::ConfigurationRecorder"
                        },
                        {
                            "$ref": "#/definitions/AWS::Config::DeliveryChannel"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::Certificate"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::Endpoint"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::EventSubscription"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::ReplicationInstance"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::ReplicationSubnetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::DMS::ReplicationTask"
                        },
                        {
                            "$ref": "#/definitions/AWS::DataPipeline::Pipeline"
                        },
                        {
                            "$ref": "#/definitions/AWS::DirectoryService::MicrosoftAD"
                        },
                        {
                            "$ref": "#/definitions/AWS::DirectoryService::SimpleAD"
                        },
                        {
                            "$ref": "#/definitions/AWS::DynamoDB::Table"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::CustomerGateway"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::DHCPOptions"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::EIP"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::EIPAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::EgressOnlyInternetGateway"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::FlowLog"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::Host"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::Instance"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::InternetGateway"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NatGateway"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NetworkAcl"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NetworkAclEntry"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NetworkInterface"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NetworkInterfaceAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::NetworkInterfacePermission"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::PlacementGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::Route"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::RouteTable"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SecurityGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SecurityGroupEgress"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SecurityGroupIngress"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SpotFleet"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::Subnet"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SubnetCidrBlock"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SubnetNetworkAclAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::SubnetRouteTableAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::TrunkInterfaceAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPC"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPCCidrBlock"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPCDHCPOptionsAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPCEndpoint"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPCGatewayAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPCPeeringConnection"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPNConnection"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPNConnectionRoute"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPNGateway"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VPNGatewayRoutePropagation"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::Volume"
                        },
                        {
                            "$ref": "#/definitions/AWS::EC2::VolumeAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::ECR::Repository"
                        },
                        {
                            "$ref": "#/definitions/AWS::ECS::Cluster"
                        },
                        {
                            "$ref": "#/definitions/AWS::ECS::Service"
                        },
                        {
                            "$ref": "#/definitions/AWS::ECS::TaskDefinition"
                        },
                        {
                            "$ref": "#/definitions/AWS::EFS::FileSystem"
                        },
                        {
                            "$ref": "#/definitions/AWS::EFS::MountTarget"
                        },
                        {
                            "$ref": "#/definitions/AWS::EMR::Cluster"
                        },
                        {
                            "$ref": "#/definitions/AWS::EMR::InstanceFleetConfig"
                        },
                        {
                            "$ref": "#/definitions/AWS::EMR::InstanceGroupConfig"
                        },
                        {
                            "$ref": "#/definitions/AWS::EMR::SecurityConfiguration"
                        },
                        {
                            "$ref": "#/definitions/AWS::EMR::Step"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::CacheCluster"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::ParameterGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::ReplicationGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::SecurityGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::SecurityGroupIngress"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElastiCache::SubnetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticBeanstalk::Application"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticBeanstalk::ApplicationVersion"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticBeanstalk::ConfigurationTemplate"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticBeanstalk::Environment"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticLoadBalancing::LoadBalancer"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::Listener"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::ListenerRule"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::LoadBalancer"
                        },
                        {
                            "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::TargetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Elasticsearch::Domain"
                        },
                        {
                            "$ref": "#/definitions/AWS::Events::Rule"
                        },
                        {
                            "$ref": "#/definitions/AWS::GameLift::Alias"
                        },
                        {
                            "$ref": "#/definitions/AWS::GameLift::Build"
                        },
                        {
                            "$ref": "#/definitions/AWS::GameLift::Fleet"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::AccessKey"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::Group"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::InstanceProfile"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::ManagedPolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::Policy"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::Role"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::User"
                        },
                        {
                            "$ref": "#/definitions/AWS::IAM::UserToGroupAddition"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::Certificate"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::Policy"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::PolicyPrincipalAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::Thing"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::ThingPrincipalAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::IoT::TopicRule"
                        },
                        {
                            "$ref": "#/definitions/AWS::KMS::Alias"
                        },
                        {
                            "$ref": "#/definitions/AWS::KMS::Key"
                        },
                        {
                            "$ref": "#/definitions/AWS::Kinesis::Stream"
                        },
                        {
                            "$ref": "#/definitions/AWS::KinesisAnalytics::Application"
                        },
                        {
                            "$ref": "#/definitions/AWS::KinesisAnalytics::ApplicationOutput"
                        },
                        {
                            "$ref": "#/definitions/AWS::KinesisAnalytics::ApplicationReferenceDataSource"
                        },
                        {
                            "$ref": "#/definitions/AWS::KinesisFirehose::DeliveryStream"
                        },
                        {
                            "$ref": "#/definitions/AWS::Lambda::Alias"
                        },
                        {
                            "$ref": "#/definitions/AWS::Lambda::EventSourceMapping"
                        },
                        {
                            "$ref": "#/definitions/AWS::Lambda::Function"
                        },
                        {
                            "$ref": "#/definitions/AWS::Lambda::Permission"
                        },
                        {
                            "$ref": "#/definitions/AWS::Lambda::Version"
                        },
                        {
                            "$ref": "#/definitions/AWS::Logs::Destination"
                        },
                        {
                            "$ref": "#/definitions/AWS::Logs::LogGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Logs::LogStream"
                        },
                        {
                            "$ref": "#/definitions/AWS::Logs::MetricFilter"
                        },
                        {
                            "$ref": "#/definitions/AWS::Logs::SubscriptionFilter"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::App"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::ElasticLoadBalancerAttachment"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::Instance"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::Layer"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::Stack"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::UserProfile"
                        },
                        {
                            "$ref": "#/definitions/AWS::OpsWorks::Volume"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBCluster"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBClusterParameterGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBInstance"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBParameterGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBSecurityGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBSecurityGroupIngress"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::DBSubnetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::EventSubscription"
                        },
                        {
                            "$ref": "#/definitions/AWS::RDS::OptionGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Redshift::Cluster"
                        },
                        {
                            "$ref": "#/definitions/AWS::Redshift::ClusterParameterGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Redshift::ClusterSecurityGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Redshift::ClusterSecurityGroupIngress"
                        },
                        {
                            "$ref": "#/definitions/AWS::Redshift::ClusterSubnetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::Route53::HealthCheck"
                        },
                        {
                            "$ref": "#/definitions/AWS::Route53::HostedZone"
                        },
                        {
                            "$ref": "#/definitions/AWS::Route53::RecordSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::Route53::RecordSetGroup"
                        },
                        {
                            "$ref": "#/definitions/AWS::S3::Bucket"
                        },
                        {
                            "$ref": "#/definitions/AWS::S3::BucketPolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::SDB::Domain"
                        },
                        {
                            "$ref": "#/definitions/AWS::SNS::Subscription"
                        },
                        {
                            "$ref": "#/definitions/AWS::SNS::Topic"
                        },
                        {
                            "$ref": "#/definitions/AWS::SNS::TopicPolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::SQS::Queue"
                        },
                        {
                            "$ref": "#/definitions/AWS::SQS::QueuePolicy"
                        },
                        {
                            "$ref": "#/definitions/AWS::SSM::Association"
                        },
                        {
                            "$ref": "#/definitions/AWS::SSM::Document"
                        },
                        {
                            "$ref": "#/definitions/AWS::SSM::Parameter"
                        },
                        {
                            "$ref": "#/definitions/AWS::StepFunctions::Activity"
                        },
                        {
                            "$ref": "#/definitions/AWS::StepFunctions::StateMachine"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::ByteMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::IPSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::Rule"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::SizeConstraintSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::SqlInjectionMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::WebACL"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAF::XssMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::ByteMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::IPSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::Rule"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::SizeConstraintSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::SqlInjectionMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::WebACL"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::WebACLAssociation"
                        },
                        {
                            "$ref": "#/definitions/AWS::WAFRegional::XssMatchSet"
                        },
                        {
                            "$ref": "#/definitions/AWS::WorkSpaces::Workspace"
                        }
                    ]
                }
            },
            "type": "object"
        }
    },
    "type": "object"
}