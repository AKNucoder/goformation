{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://aws.amazon.com/cloudformation/#1.4.2",
    "type": "object",
    "properties": {

        "AWSTemplateFormatVersion": {
            "type": "string",
            "enum": [
                "2010-09-09"
            ]
        },

        "Description": {
            "description": "Template description",
            "type": "string",
            "maxLength": 1024
        },

        "Parameters": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                    "$ref": "#/definitions/Parameter"
                }
            },
            "maxProperties": 50,
            "additionalProperties": false
        },
        
        "Mappings": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "object"
                }
            },
            "additionalProperties": false
        },

        "Conditions": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "object"
                }
            },
            "additionalProperties": false
        },
        "Resources": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9]+$": {
                    "anyOf": [
                         { "$ref": "#/definitions/AWS::ApiGateway::Account" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::ApiKey" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Authorizer" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::BasePathMapping" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::ClientCertificate" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Deployment" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::DomainName" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Method" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Model" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Resource" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::RestApi" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::Stage" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::UsagePlan" }, 
                         { "$ref": "#/definitions/AWS::ApiGateway::UsagePlanKey" }, 
                         { "$ref": "#/definitions/AWS::ApplicationAutoScaling::ScalableTarget" }, 
                         { "$ref": "#/definitions/AWS::ApplicationAutoScaling::ScalingPolicy" }, 
                         { "$ref": "#/definitions/AWS::AutoScaling::AutoScalingGroup" }, 
                         { "$ref": "#/definitions/AWS::AutoScaling::LaunchConfiguration" }, 
                         { "$ref": "#/definitions/AWS::AutoScaling::LifecycleHook" }, 
                         { "$ref": "#/definitions/AWS::AutoScaling::ScalingPolicy" }, 
                         { "$ref": "#/definitions/AWS::AutoScaling::ScheduledAction" }, 
                         { "$ref": "#/definitions/AWS::Batch::ComputeEnvironment" }, 
                         { "$ref": "#/definitions/AWS::Batch::JobDefinition" }, 
                         { "$ref": "#/definitions/AWS::Batch::JobQueue" }, 
                         { "$ref": "#/definitions/AWS::CertificateManager::Certificate" }, 
                         { "$ref": "#/definitions/AWS::CloudFormation::CustomResource" }, 
                         { "$ref": "#/definitions/AWS::CloudFormation::Stack" }, 
                         { "$ref": "#/definitions/AWS::CloudFormation::WaitCondition" }, 
                         { "$ref": "#/definitions/AWS::CloudFormation::WaitConditionHandle" }, 
                         { "$ref": "#/definitions/AWS::CloudFront::Distribution" }, 
                         { "$ref": "#/definitions/AWS::CloudTrail::Trail" }, 
                         { "$ref": "#/definitions/AWS::CloudWatch::Alarm" }, 
                         { "$ref": "#/definitions/AWS::CloudWatch::Dashboard" }, 
                         { "$ref": "#/definitions/AWS::CodeBuild::Project" }, 
                         { "$ref": "#/definitions/AWS::CodeCommit::Repository" }, 
                         { "$ref": "#/definitions/AWS::CodeDeploy::Application" }, 
                         { "$ref": "#/definitions/AWS::CodeDeploy::DeploymentConfig" }, 
                         { "$ref": "#/definitions/AWS::CodeDeploy::DeploymentGroup" }, 
                         { "$ref": "#/definitions/AWS::CodePipeline::CustomActionType" }, 
                         { "$ref": "#/definitions/AWS::CodePipeline::Pipeline" }, 
                         { "$ref": "#/definitions/AWS::Cognito::IdentityPool" }, 
                         { "$ref": "#/definitions/AWS::Cognito::IdentityPoolRoleAttachment" }, 
                         { "$ref": "#/definitions/AWS::Cognito::UserPool" }, 
                         { "$ref": "#/definitions/AWS::Cognito::UserPoolClient" }, 
                         { "$ref": "#/definitions/AWS::Cognito::UserPoolGroup" }, 
                         { "$ref": "#/definitions/AWS::Cognito::UserPoolUser" }, 
                         { "$ref": "#/definitions/AWS::Cognito::UserPoolUserToGroupAttachment" }, 
                         { "$ref": "#/definitions/AWS::Config::ConfigRule" }, 
                         { "$ref": "#/definitions/AWS::Config::ConfigurationRecorder" }, 
                         { "$ref": "#/definitions/AWS::Config::DeliveryChannel" }, 
                         { "$ref": "#/definitions/AWS::DMS::Certificate" }, 
                         { "$ref": "#/definitions/AWS::DMS::Endpoint" }, 
                         { "$ref": "#/definitions/AWS::DMS::EventSubscription" }, 
                         { "$ref": "#/definitions/AWS::DMS::ReplicationInstance" }, 
                         { "$ref": "#/definitions/AWS::DMS::ReplicationSubnetGroup" }, 
                         { "$ref": "#/definitions/AWS::DMS::ReplicationTask" }, 
                         { "$ref": "#/definitions/AWS::DataPipeline::Pipeline" }, 
                         { "$ref": "#/definitions/AWS::DirectoryService::MicrosoftAD" }, 
                         { "$ref": "#/definitions/AWS::DirectoryService::SimpleAD" }, 
                         { "$ref": "#/definitions/AWS::DynamoDB::Table" }, 
                         { "$ref": "#/definitions/AWS::EC2::CustomerGateway" }, 
                         { "$ref": "#/definitions/AWS::EC2::DHCPOptions" }, 
                         { "$ref": "#/definitions/AWS::EC2::EIP" }, 
                         { "$ref": "#/definitions/AWS::EC2::EIPAssociation" }, 
                         { "$ref": "#/definitions/AWS::EC2::EgressOnlyInternetGateway" }, 
                         { "$ref": "#/definitions/AWS::EC2::FlowLog" }, 
                         { "$ref": "#/definitions/AWS::EC2::Host" }, 
                         { "$ref": "#/definitions/AWS::EC2::Instance" }, 
                         { "$ref": "#/definitions/AWS::EC2::InternetGateway" }, 
                         { "$ref": "#/definitions/AWS::EC2::NatGateway" }, 
                         { "$ref": "#/definitions/AWS::EC2::NetworkAcl" }, 
                         { "$ref": "#/definitions/AWS::EC2::NetworkAclEntry" }, 
                         { "$ref": "#/definitions/AWS::EC2::NetworkInterface" }, 
                         { "$ref": "#/definitions/AWS::EC2::NetworkInterfaceAttachment" }, 
                         { "$ref": "#/definitions/AWS::EC2::NetworkInterfacePermission" }, 
                         { "$ref": "#/definitions/AWS::EC2::PlacementGroup" }, 
                         { "$ref": "#/definitions/AWS::EC2::Route" }, 
                         { "$ref": "#/definitions/AWS::EC2::RouteTable" }, 
                         { "$ref": "#/definitions/AWS::EC2::SecurityGroup" }, 
                         { "$ref": "#/definitions/AWS::EC2::SecurityGroupEgress" }, 
                         { "$ref": "#/definitions/AWS::EC2::SecurityGroupIngress" }, 
                         { "$ref": "#/definitions/AWS::EC2::SpotFleet" }, 
                         { "$ref": "#/definitions/AWS::EC2::Subnet" }, 
                         { "$ref": "#/definitions/AWS::EC2::SubnetCidrBlock" }, 
                         { "$ref": "#/definitions/AWS::EC2::SubnetNetworkAclAssociation" }, 
                         { "$ref": "#/definitions/AWS::EC2::SubnetRouteTableAssociation" }, 
                         { "$ref": "#/definitions/AWS::EC2::TrunkInterfaceAssociation" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPC" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPCCidrBlock" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPCDHCPOptionsAssociation" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPCEndpoint" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPCGatewayAttachment" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPCPeeringConnection" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPNConnection" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPNConnectionRoute" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPNGateway" }, 
                         { "$ref": "#/definitions/AWS::EC2::VPNGatewayRoutePropagation" }, 
                         { "$ref": "#/definitions/AWS::EC2::Volume" }, 
                         { "$ref": "#/definitions/AWS::EC2::VolumeAttachment" }, 
                         { "$ref": "#/definitions/AWS::ECR::Repository" }, 
                         { "$ref": "#/definitions/AWS::ECS::Cluster" }, 
                         { "$ref": "#/definitions/AWS::ECS::Service" }, 
                         { "$ref": "#/definitions/AWS::ECS::TaskDefinition" }, 
                         { "$ref": "#/definitions/AWS::EFS::FileSystem" }, 
                         { "$ref": "#/definitions/AWS::EFS::MountTarget" }, 
                         { "$ref": "#/definitions/AWS::EMR::Cluster" }, 
                         { "$ref": "#/definitions/AWS::EMR::InstanceFleetConfig" }, 
                         { "$ref": "#/definitions/AWS::EMR::InstanceGroupConfig" }, 
                         { "$ref": "#/definitions/AWS::EMR::SecurityConfiguration" }, 
                         { "$ref": "#/definitions/AWS::EMR::Step" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::CacheCluster" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::ParameterGroup" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::ReplicationGroup" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::SecurityGroup" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::SecurityGroupIngress" }, 
                         { "$ref": "#/definitions/AWS::ElastiCache::SubnetGroup" }, 
                         { "$ref": "#/definitions/AWS::ElasticBeanstalk::Application" }, 
                         { "$ref": "#/definitions/AWS::ElasticBeanstalk::ApplicationVersion" }, 
                         { "$ref": "#/definitions/AWS::ElasticBeanstalk::ConfigurationTemplate" }, 
                         { "$ref": "#/definitions/AWS::ElasticBeanstalk::Environment" }, 
                         { "$ref": "#/definitions/AWS::ElasticLoadBalancing::LoadBalancer" }, 
                         { "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::Listener" }, 
                         { "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::ListenerRule" }, 
                         { "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::LoadBalancer" }, 
                         { "$ref": "#/definitions/AWS::ElasticLoadBalancingV2::TargetGroup" }, 
                         { "$ref": "#/definitions/AWS::Elasticsearch::Domain" }, 
                         { "$ref": "#/definitions/AWS::Events::Rule" }, 
                         { "$ref": "#/definitions/AWS::GameLift::Alias" }, 
                         { "$ref": "#/definitions/AWS::GameLift::Build" }, 
                         { "$ref": "#/definitions/AWS::GameLift::Fleet" }, 
                         { "$ref": "#/definitions/AWS::IAM::AccessKey" }, 
                         { "$ref": "#/definitions/AWS::IAM::Group" }, 
                         { "$ref": "#/definitions/AWS::IAM::InstanceProfile" }, 
                         { "$ref": "#/definitions/AWS::IAM::ManagedPolicy" }, 
                         { "$ref": "#/definitions/AWS::IAM::Policy" }, 
                         { "$ref": "#/definitions/AWS::IAM::Role" }, 
                         { "$ref": "#/definitions/AWS::IAM::User" }, 
                         { "$ref": "#/definitions/AWS::IAM::UserToGroupAddition" }, 
                         { "$ref": "#/definitions/AWS::IoT::Certificate" }, 
                         { "$ref": "#/definitions/AWS::IoT::Policy" }, 
                         { "$ref": "#/definitions/AWS::IoT::PolicyPrincipalAttachment" }, 
                         { "$ref": "#/definitions/AWS::IoT::Thing" }, 
                         { "$ref": "#/definitions/AWS::IoT::ThingPrincipalAttachment" }, 
                         { "$ref": "#/definitions/AWS::IoT::TopicRule" }, 
                         { "$ref": "#/definitions/AWS::KMS::Alias" }, 
                         { "$ref": "#/definitions/AWS::KMS::Key" }, 
                         { "$ref": "#/definitions/AWS::Kinesis::Stream" }, 
                         { "$ref": "#/definitions/AWS::KinesisAnalytics::Application" }, 
                         { "$ref": "#/definitions/AWS::KinesisAnalytics::ApplicationOutput" }, 
                         { "$ref": "#/definitions/AWS::KinesisAnalytics::ApplicationReferenceDataSource" }, 
                         { "$ref": "#/definitions/AWS::KinesisFirehose::DeliveryStream" }, 
                         { "$ref": "#/definitions/AWS::Lambda::Alias" }, 
                         { "$ref": "#/definitions/AWS::Lambda::EventSourceMapping" }, 
                         { "$ref": "#/definitions/AWS::Lambda::Function" }, 
                         { "$ref": "#/definitions/AWS::Lambda::Permission" }, 
                         { "$ref": "#/definitions/AWS::Lambda::Version" }, 
                         { "$ref": "#/definitions/AWS::Logs::Destination" }, 
                         { "$ref": "#/definitions/AWS::Logs::LogGroup" }, 
                         { "$ref": "#/definitions/AWS::Logs::LogStream" }, 
                         { "$ref": "#/definitions/AWS::Logs::MetricFilter" }, 
                         { "$ref": "#/definitions/AWS::Logs::SubscriptionFilter" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::App" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::ElasticLoadBalancerAttachment" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::Instance" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::Layer" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::Stack" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::UserProfile" }, 
                         { "$ref": "#/definitions/AWS::OpsWorks::Volume" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBCluster" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBClusterParameterGroup" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBInstance" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBParameterGroup" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBSecurityGroup" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBSecurityGroupIngress" }, 
                         { "$ref": "#/definitions/AWS::RDS::DBSubnetGroup" }, 
                         { "$ref": "#/definitions/AWS::RDS::EventSubscription" }, 
                         { "$ref": "#/definitions/AWS::RDS::OptionGroup" }, 
                         { "$ref": "#/definitions/AWS::Redshift::Cluster" }, 
                         { "$ref": "#/definitions/AWS::Redshift::ClusterParameterGroup" }, 
                         { "$ref": "#/definitions/AWS::Redshift::ClusterSecurityGroup" }, 
                         { "$ref": "#/definitions/AWS::Redshift::ClusterSecurityGroupIngress" }, 
                         { "$ref": "#/definitions/AWS::Redshift::ClusterSubnetGroup" }, 
                         { "$ref": "#/definitions/AWS::Route53::HealthCheck" }, 
                         { "$ref": "#/definitions/AWS::Route53::HostedZone" }, 
                         { "$ref": "#/definitions/AWS::Route53::RecordSet" }, 
                         { "$ref": "#/definitions/AWS::Route53::RecordSetGroup" }, 
                         { "$ref": "#/definitions/AWS::S3::Bucket" }, 
                         { "$ref": "#/definitions/AWS::S3::BucketPolicy" }, 
                         { "$ref": "#/definitions/AWS::SDB::Domain" }, 
                         { "$ref": "#/definitions/AWS::SNS::Subscription" }, 
                         { "$ref": "#/definitions/AWS::SNS::Topic" }, 
                         { "$ref": "#/definitions/AWS::SNS::TopicPolicy" }, 
                         { "$ref": "#/definitions/AWS::SQS::Queue" }, 
                         { "$ref": "#/definitions/AWS::SQS::QueuePolicy" }, 
                         { "$ref": "#/definitions/AWS::SSM::Association" }, 
                         { "$ref": "#/definitions/AWS::SSM::Document" }, 
                         { "$ref": "#/definitions/AWS::SSM::Parameter" }, 
                         { "$ref": "#/definitions/AWS::StepFunctions::Activity" }, 
                         { "$ref": "#/definitions/AWS::StepFunctions::StateMachine" }, 
                         { "$ref": "#/definitions/AWS::WAF::ByteMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WAF::IPSet" }, 
                         { "$ref": "#/definitions/AWS::WAF::Rule" }, 
                         { "$ref": "#/definitions/AWS::WAF::SizeConstraintSet" }, 
                         { "$ref": "#/definitions/AWS::WAF::SqlInjectionMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WAF::WebACL" }, 
                         { "$ref": "#/definitions/AWS::WAF::XssMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::ByteMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::IPSet" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::Rule" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::SizeConstraintSet" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::SqlInjectionMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::WebACL" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::WebACLAssociation" }, 
                         { "$ref": "#/definitions/AWS::WAFRegional::XssMatchSet" }, 
                         { "$ref": "#/definitions/AWS::WorkSpaces::Workspace" }
                        
                    ]
                }
            }
        }
    },

    "definitions": {
        "Parameter": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "String",
                        "Number",
                        "List<Number>",
                        "CommaDelimitedList",
                        "AWS::EC2::AvailabilityZone::Name",
                        "AWS::EC2::Image::Id",
                        "AWS::EC2::Instance::Id",
                        "AWS::EC2::KeyPair::KeyName",
                        "AWS::EC2::SecurityGroup::GroupName",
                        "AWS::EC2::SecurityGroup::Id",
                        "AWS::EC2::Subnet::Id",
                        "AWS::EC2::Volume::Id",
                        "AWS::EC2::VPC::Id",
                        "AWS::Route53::HostedZone::Id",
                        "List<AWS::EC2::AvailabilityZone::Name>",
                        "List<AWS::EC2::Image::Id>",
                        "List<AWS::EC2::Instance::Id>",
                        "List<AWS::EC2::SecurityGroup::GroupName>",
                        "List<AWS::EC2::SecurityGroup::Id>",
                        "List<AWS::EC2::Subnet::Id>",
                        "List<AWS::EC2::Volume::Id>",
                        "List<AWS::EC2::VPC::Id>",
                        "List<AWS::Route53::HostedZone::Id>",
                        "List<String>"
                    ]
                },
                "AllowedPattern": {
                    "type": "string"
                },
                "AllowedValues": {
                    "type": "array"
                },
                "ConstraintDescription": {
                    "type": "string"
                },
                "Default": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "MaxLength": {
                    "type": "string"
                },
                "MaxValue": {
                    "type": "string"
                },
                "MinLength": {
                    "type": "string"
                },
                "MinValue": {
                    "type": "string"
                },
                "NoEcho": {
                    "type": [
                        "string",
                        "boolean"
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "Type"
            ]
        },
    
        
            "AWS::ApiGateway::Account": {
    "type": "object",
    "properties": {
        "CloudWatchRoleArn": {
        }
        
    }
},
        
            "AWS::ApiGateway::ApiKey": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Enabled": {
        },
        "Name": {
        },
        "StageKeys": {
        }
        
    }
},
        
            "AWS::ApiGateway::Authorizer": {
    "type": "object",
    "properties": {
        "AuthorizerCredentials": {
        },
        "AuthorizerResultTtlInSeconds": {
        },
        "AuthorizerUri": {
        },
        "IdentitySource": {
        },
        "IdentityValidationExpression": {
        },
        "Name": {
        },
        "ProviderARNs": {
        },
        "RestApiId": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ApiGateway::BasePathMapping": {
    "type": "object",
    "properties": {
        "BasePath": {
        },
        "DomainName": {
        },
        "RestApiId": {
        },
        "Stage": {
        }
        
    }
},
        
            "AWS::ApiGateway::ClientCertificate": {
    "type": "object",
    "properties": {
        "Description": {
        }
        
    }
},
        
            "AWS::ApiGateway::Deployment": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "RestApiId": {
        },
        "StageDescription": {
        },
        "StageName": {
        }
        
    }
},
        
            "AWS::ApiGateway::DomainName": {
    "type": "object",
    "properties": {
        "CertificateArn": {
        },
        "DomainName": {
        }
        
    }
},
        
            "AWS::ApiGateway::Method": {
    "type": "object",
    "properties": {
        "ApiKeyRequired": {
        },
        "AuthorizationType": {
        },
        "AuthorizerId": {
        },
        "HttpMethod": {
        },
        "Integration": {
        },
        "MethodResponses": {
        },
        "RequestModels": {
        },
        "RequestParameters": {
        },
        "ResourceId": {
        },
        "RestApiId": {
        }
        
    }
},
        
            "AWS::ApiGateway::Model": {
    "type": "object",
    "properties": {
        "ContentType": {
        },
        "Description": {
        },
        "Name": {
        },
        "RestApiId": {
        },
        "Schema": {
        }
        
    }
},
        
            "AWS::ApiGateway::Resource": {
    "type": "object",
    "properties": {
        "ParentId": {
        },
        "PathPart": {
        },
        "RestApiId": {
        }
        
    }
},
        
            "AWS::ApiGateway::RestApi": {
    "type": "object",
    "properties": {
        "BinaryMediaTypes": {
        },
        "Body": {
        },
        "BodyS3Location": {
        },
        "CloneFrom": {
        },
        "Description": {
        },
        "FailOnWarnings": {
        },
        "Mode": {
        },
        "Name": {
        },
        "Parameters": {
        }
        
    }
},
        
            "AWS::ApiGateway::Stage": {
    "type": "object",
    "properties": {
        "CacheClusterEnabled": {
        },
        "CacheClusterSize": {
        },
        "ClientCertificateId": {
        },
        "DeploymentId": {
        },
        "Description": {
        },
        "MethodSettings": {
        },
        "RestApiId": {
        },
        "StageName": {
        },
        "Variables": {
        }
        
    }
},
        
            "AWS::ApiGateway::UsagePlan": {
    "type": "object",
    "properties": {
        "ApiStages": {
        },
        "Description": {
        },
        "Quota": {
        },
        "Throttle": {
        },
        "UsagePlanName": {
        }
        
    }
},
        
            "AWS::ApiGateway::UsagePlanKey": {
    "type": "object",
    "properties": {
        "KeyId": {
        },
        "KeyType": {
        },
        "UsagePlanId": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalableTarget": {
    "type": "object",
    "properties": {
        "MaxCapacity": {
        },
        "MinCapacity": {
        },
        "ResourceId": {
        },
        "RoleARN": {
        },
        "ScalableDimension": {
        },
        "ServiceNamespace": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy": {
    "type": "object",
    "properties": {
        "PolicyName": {
        },
        "PolicyType": {
        },
        "ResourceId": {
        },
        "ScalableDimension": {
        },
        "ScalingTargetId": {
        },
        "ServiceNamespace": {
        },
        "StepScalingPolicyConfiguration": {
        },
        "TargetTrackingScalingPolicyConfiguration": {
        }
        
    }
},
        
            "AWS::AutoScaling::AutoScalingGroup": {
    "type": "object",
    "properties": {
        "AvailabilityZones": {
        },
        "Cooldown": {
        },
        "DesiredCapacity": {
        },
        "HealthCheckGracePeriod": {
        },
        "HealthCheckType": {
        },
        "InstanceId": {
        },
        "LaunchConfigurationName": {
        },
        "LoadBalancerNames": {
        },
        "MaxSize": {
        },
        "MetricsCollection": {
        },
        "MinSize": {
        },
        "NotificationConfigurations": {
        },
        "PlacementGroup": {
        },
        "Tags": {
        },
        "TargetGroupARNs": {
        },
        "TerminationPolicies": {
        },
        "VPCZoneIdentifier": {
        }
        
    }
},
        
            "AWS::AutoScaling::LaunchConfiguration": {
    "type": "object",
    "properties": {
        "AssociatePublicIpAddress": {
        },
        "BlockDeviceMappings": {
        },
        "ClassicLinkVPCId": {
        },
        "ClassicLinkVPCSecurityGroups": {
        },
        "EbsOptimized": {
        },
        "IamInstanceProfile": {
        },
        "ImageId": {
        },
        "InstanceId": {
        },
        "InstanceMonitoring": {
        },
        "InstanceType": {
        },
        "KernelId": {
        },
        "KeyName": {
        },
        "PlacementTenancy": {
        },
        "RamDiskId": {
        },
        "SecurityGroups": {
        },
        "SpotPrice": {
        },
        "UserData": {
        }
        
    }
},
        
            "AWS::AutoScaling::LifecycleHook": {
    "type": "object",
    "properties": {
        "AutoScalingGroupName": {
        },
        "DefaultResult": {
        },
        "HeartbeatTimeout": {
        },
        "LifecycleTransition": {
        },
        "NotificationMetadata": {
        },
        "NotificationTargetARN": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::AutoScaling::ScalingPolicy": {
    "type": "object",
    "properties": {
        "AdjustmentType": {
        },
        "AutoScalingGroupName": {
        },
        "Cooldown": {
        },
        "EstimatedInstanceWarmup": {
        },
        "MetricAggregationType": {
        },
        "MinAdjustmentMagnitude": {
        },
        "PolicyType": {
        },
        "ScalingAdjustment": {
        },
        "StepAdjustments": {
        }
        
    }
},
        
            "AWS::AutoScaling::ScheduledAction": {
    "type": "object",
    "properties": {
        "AutoScalingGroupName": {
        },
        "DesiredCapacity": {
        },
        "EndTime": {
        },
        "MaxSize": {
        },
        "MinSize": {
        },
        "Recurrence": {
        },
        "StartTime": {
        }
        
    }
},
        
            "AWS::Batch::ComputeEnvironment": {
    "type": "object",
    "properties": {
        "ComputeEnvironmentName": {
        },
        "ComputeResources": {
        },
        "ServiceRole": {
        },
        "State": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition": {
    "type": "object",
    "properties": {
        "ContainerProperties": {
        },
        "JobDefinitionName": {
        },
        "Parameters": {
        },
        "RetryStrategy": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::Batch::JobQueue": {
    "type": "object",
    "properties": {
        "ComputeEnvironmentOrder": {
        },
        "JobQueueName": {
        },
        "Priority": {
        },
        "State": {
        }
        
    }
},
        
            "AWS::CertificateManager::Certificate": {
    "type": "object",
    "properties": {
        "DomainName": {
        },
        "DomainValidationOptions": {
        },
        "SubjectAlternativeNames": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::CloudFormation::CustomResource": {
    "type": "object",
    "properties": {
        "ServiceToken": {
        }
        
    }
},
        
            "AWS::CloudFormation::Stack": {
    "type": "object",
    "properties": {
        "NotificationARNs": {
        },
        "Parameters": {
        },
        "Tags": {
        },
        "TemplateURL": {
        },
        "TimeoutInMinutes": {
        }
        
    }
},
        
            "AWS::CloudFormation::WaitCondition": {
    "type": "object",
    "properties": {
        "Count": {
        },
        "Handle": {
        },
        "Timeout": {
        }
        
    }
},
        
            "AWS::CloudFormation::WaitConditionHandle": {
    "type": "object",
    "properties": {
        
    }
},
        
            "AWS::CloudFront::Distribution": {
    "type": "object",
    "properties": {
        "DistributionConfig": {
        }
        
    }
},
        
            "AWS::CloudTrail::Trail": {
    "type": "object",
    "properties": {
        "CloudWatchLogsLogGroupArn": {
        },
        "CloudWatchLogsRoleArn": {
        },
        "EnableLogFileValidation": {
        },
        "IncludeGlobalServiceEvents": {
        },
        "IsLogging": {
        },
        "IsMultiRegionTrail": {
        },
        "KMSKeyId": {
        },
        "S3BucketName": {
        },
        "S3KeyPrefix": {
        },
        "SnsTopicName": {
        },
        "Tags": {
        },
        "TrailName": {
        }
        
    }
},
        
            "AWS::CloudWatch::Alarm": {
    "type": "object",
    "properties": {
        "ActionsEnabled": {
        },
        "AlarmActions": {
        },
        "AlarmDescription": {
        },
        "AlarmName": {
        },
        "ComparisonOperator": {
        },
        "Dimensions": {
        },
        "EvaluateLowSampleCountPercentile": {
        },
        "EvaluationPeriods": {
        },
        "ExtendedStatistic": {
        },
        "InsufficientDataActions": {
        },
        "MetricName": {
        },
        "Namespace": {
        },
        "OKActions": {
        },
        "Period": {
        },
        "Statistic": {
        },
        "Threshold": {
        },
        "TreatMissingData": {
        },
        "Unit": {
        }
        
    }
},
        
            "AWS::CloudWatch::Dashboard": {
    "type": "object",
    "properties": {
        "DashboardBody": {
        },
        "DashboardName": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project": {
    "type": "object",
    "properties": {
        "Artifacts": {
        },
        "Description": {
        },
        "EncryptionKey": {
        },
        "Environment": {
        },
        "Name": {
        },
        "ServiceRole": {
        },
        "Source": {
        },
        "Tags": {
        },
        "TimeoutInMinutes": {
        }
        
    }
},
        
            "AWS::CodeCommit::Repository": {
    "type": "object",
    "properties": {
        "RepositoryDescription": {
        },
        "RepositoryName": {
        },
        "Triggers": {
        }
        
    }
},
        
            "AWS::CodeDeploy::Application": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentConfig": {
    "type": "object",
    "properties": {
        "DeploymentConfigName": {
        },
        "MinimumHealthyHosts": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup": {
    "type": "object",
    "properties": {
        "AlarmConfiguration": {
        },
        "ApplicationName": {
        },
        "AutoScalingGroups": {
        },
        "Deployment": {
        },
        "DeploymentConfigName": {
        },
        "DeploymentGroupName": {
        },
        "Ec2TagFilters": {
        },
        "OnPremisesInstanceTagFilters": {
        },
        "ServiceRoleArn": {
        },
        "TriggerConfigurations": {
        }
        
    }
},
        
            "AWS::CodePipeline::CustomActionType": {
    "type": "object",
    "properties": {
        "Category": {
        },
        "ConfigurationProperties": {
        },
        "InputArtifactDetails": {
        },
        "OutputArtifactDetails": {
        },
        "Provider": {
        },
        "Settings": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline": {
    "type": "object",
    "properties": {
        "ArtifactStore": {
        },
        "DisableInboundStageTransitions": {
        },
        "Name": {
        },
        "RestartExecutionOnUpdate": {
        },
        "RoleArn": {
        },
        "Stages": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPool": {
    "type": "object",
    "properties": {
        "AllowUnauthenticatedIdentities": {
        },
        "CognitoEvents": {
        },
        "CognitoIdentityProviders": {
        },
        "CognitoStreams": {
        },
        "DeveloperProviderName": {
        },
        "IdentityPoolName": {
        },
        "OpenIdConnectProviderARNs": {
        },
        "PushSync": {
        },
        "SamlProviderARNs": {
        },
        "SupportedLoginProviders": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPoolRoleAttachment": {
    "type": "object",
    "properties": {
        "IdentityPoolId": {
        },
        "RoleMappings": {
        },
        "Roles": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool": {
    "type": "object",
    "properties": {
        "AdminCreateUserConfig": {
        },
        "AliasAttributes": {
        },
        "AutoVerifiedAttributes": {
        },
        "DeviceConfiguration": {
        },
        "EmailConfiguration": {
        },
        "EmailVerificationMessage": {
        },
        "EmailVerificationSubject": {
        },
        "LambdaConfig": {
        },
        "MfaConfiguration": {
        },
        "Policies": {
        },
        "Schema": {
        },
        "SmsAuthenticationMessage": {
        },
        "SmsConfiguration": {
        },
        "SmsVerificationMessage": {
        },
        "UserPoolName": {
        },
        "UserPoolTags": {
        }
        
    }
},
        
            "AWS::Cognito::UserPoolClient": {
    "type": "object",
    "properties": {
        "ClientName": {
        },
        "ExplicitAuthFlows": {
        },
        "GenerateSecret": {
        },
        "ReadAttributes": {
        },
        "RefreshTokenValidity": {
        },
        "UserPoolId": {
        },
        "WriteAttributes": {
        }
        
    }
},
        
            "AWS::Cognito::UserPoolGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "GroupName": {
        },
        "Precedence": {
        },
        "RoleArn": {
        },
        "UserPoolId": {
        }
        
    }
},
        
            "AWS::Cognito::UserPoolUser": {
    "type": "object",
    "properties": {
        "DesiredDeliveryMediums": {
        },
        "ForceAliasCreation": {
        },
        "MessageAction": {
        },
        "UserAttributes": {
        },
        "UserPoolId": {
        },
        "Username": {
        },
        "ValidationData": {
        }
        
    }
},
        
            "AWS::Cognito::UserPoolUserToGroupAttachment": {
    "type": "object",
    "properties": {
        "GroupName": {
        },
        "UserPoolId": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::Config::ConfigRule": {
    "type": "object",
    "properties": {
        "ConfigRuleName": {
        },
        "Description": {
        },
        "InputParameters": {
        },
        "MaximumExecutionFrequency": {
        },
        "Scope": {
        },
        "Source": {
        }
        
    }
},
        
            "AWS::Config::ConfigurationRecorder": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "RecordingGroup": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::Config::DeliveryChannel": {
    "type": "object",
    "properties": {
        "ConfigSnapshotDeliveryProperties": {
        },
        "Name": {
        },
        "S3BucketName": {
        },
        "S3KeyPrefix": {
        },
        "SnsTopicARN": {
        }
        
    }
},
        
            "AWS::DMS::Certificate": {
    "type": "object",
    "properties": {
        "CertificateIdentifier": {
        },
        "CertificatePem": {
        },
        "CertificateWallet": {
        }
        
    }
},
        
            "AWS::DMS::Endpoint": {
    "type": "object",
    "properties": {
        "CertificateArn": {
        },
        "DatabaseName": {
        },
        "DynamoDbSettings": {
        },
        "EndpointIdentifier": {
        },
        "EndpointType": {
        },
        "EngineName": {
        },
        "ExtraConnectionAttributes": {
        },
        "KmsKeyId": {
        },
        "MongoDbSettings": {
        },
        "Password": {
        },
        "Port": {
        },
        "S3Settings": {
        },
        "ServerName": {
        },
        "SslMode": {
        },
        "Tags": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::DMS::EventSubscription": {
    "type": "object",
    "properties": {
        "Enabled": {
        },
        "EventCategories": {
        },
        "SnsTopicArn": {
        },
        "SourceIds": {
        },
        "SourceType": {
        },
        "SubscriptionName": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::DMS::ReplicationInstance": {
    "type": "object",
    "properties": {
        "AllocatedStorage": {
        },
        "AllowMajorVersionUpgrade": {
        },
        "AutoMinorVersionUpgrade": {
        },
        "AvailabilityZone": {
        },
        "EngineVersion": {
        },
        "KmsKeyId": {
        },
        "MultiAZ": {
        },
        "PreferredMaintenanceWindow": {
        },
        "PubliclyAccessible": {
        },
        "ReplicationInstanceClass": {
        },
        "ReplicationInstanceIdentifier": {
        },
        "ReplicationSubnetGroupIdentifier": {
        },
        "Tags": {
        },
        "VpcSecurityGroupIds": {
        }
        
    }
},
        
            "AWS::DMS::ReplicationSubnetGroup": {
    "type": "object",
    "properties": {
        "ReplicationSubnetGroupDescription": {
        },
        "ReplicationSubnetGroupIdentifier": {
        },
        "SubnetIds": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::DMS::ReplicationTask": {
    "type": "object",
    "properties": {
        "CdcStartTime": {
        },
        "MigrationType": {
        },
        "ReplicationInstanceArn": {
        },
        "ReplicationTaskIdentifier": {
        },
        "ReplicationTaskSettings": {
        },
        "SourceEndpointArn": {
        },
        "TableMappings": {
        },
        "Tags": {
        },
        "TargetEndpointArn": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline": {
    "type": "object",
    "properties": {
        "Activate": {
        },
        "Description": {
        },
        "Name": {
        },
        "ParameterObjects": {
        },
        "ParameterValues": {
        },
        "PipelineObjects": {
        },
        "PipelineTags": {
        }
        
    }
},
        
            "AWS::DirectoryService::MicrosoftAD": {
    "type": "object",
    "properties": {
        "CreateAlias": {
        },
        "EnableSso": {
        },
        "Name": {
        },
        "Password": {
        },
        "ShortName": {
        },
        "VpcSettings": {
        }
        
    }
},
        
            "AWS::DirectoryService::SimpleAD": {
    "type": "object",
    "properties": {
        "CreateAlias": {
        },
        "Description": {
        },
        "EnableSso": {
        },
        "Name": {
        },
        "Password": {
        },
        "ShortName": {
        },
        "Size": {
        },
        "VpcSettings": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table": {
    "type": "object",
    "properties": {
        "AttributeDefinitions": {
        },
        "GlobalSecondaryIndexes": {
        },
        "KeySchema": {
        },
        "LocalSecondaryIndexes": {
        },
        "ProvisionedThroughput": {
        },
        "StreamSpecification": {
        },
        "TableName": {
        }
        
    }
},
        
            "AWS::EC2::CustomerGateway": {
    "type": "object",
    "properties": {
        "BgpAsn": {
        },
        "IpAddress": {
        },
        "Tags": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::EC2::DHCPOptions": {
    "type": "object",
    "properties": {
        "DomainName": {
        },
        "DomainNameServers": {
        },
        "NetbiosNameServers": {
        },
        "NetbiosNodeType": {
        },
        "NtpServers": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::EC2::EIP": {
    "type": "object",
    "properties": {
        "Domain": {
        },
        "InstanceId": {
        }
        
    }
},
        
            "AWS::EC2::EIPAssociation": {
    "type": "object",
    "properties": {
        "AllocationId": {
        },
        "EIP": {
        },
        "InstanceId": {
        },
        "NetworkInterfaceId": {
        },
        "PrivateIpAddress": {
        }
        
    }
},
        
            "AWS::EC2::EgressOnlyInternetGateway": {
    "type": "object",
    "properties": {
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::FlowLog": {
    "type": "object",
    "properties": {
        "DeliverLogsPermissionArn": {
        },
        "LogGroupName": {
        },
        "ResourceId": {
        },
        "ResourceType": {
        },
        "TrafficType": {
        }
        
    }
},
        
            "AWS::EC2::Host": {
    "type": "object",
    "properties": {
        "AutoPlacement": {
        },
        "AvailabilityZone": {
        },
        "InstanceType": {
        }
        
    }
},
        
            "AWS::EC2::Instance": {
    "type": "object",
    "properties": {
        "AdditionalInfo": {
        },
        "Affinity": {
        },
        "AvailabilityZone": {
        },
        "BlockDeviceMappings": {
        },
        "DisableApiTermination": {
        },
        "EbsOptimized": {
        },
        "HostId": {
        },
        "IamInstanceProfile": {
        },
        "ImageId": {
        },
        "InstanceInitiatedShutdownBehavior": {
        },
        "InstanceType": {
        },
        "Ipv6AddressCount": {
        },
        "Ipv6Addresses": {
        },
        "KernelId": {
        },
        "KeyName": {
        },
        "Monitoring": {
        },
        "NetworkInterfaces": {
        },
        "PlacementGroupName": {
        },
        "PrivateIpAddress": {
        },
        "RamdiskId": {
        },
        "SecurityGroupIds": {
        },
        "SecurityGroups": {
        },
        "SourceDestCheck": {
        },
        "SsmAssociations": {
        },
        "SubnetId": {
        },
        "Tags": {
        },
        "Tenancy": {
        },
        "UserData": {
        },
        "Volumes": {
        }
        
    }
},
        
            "AWS::EC2::InternetGateway": {
    "type": "object",
    "properties": {
        "Tags": {
        }
        
    }
},
        
            "AWS::EC2::NatGateway": {
    "type": "object",
    "properties": {
        "AllocationId": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::NetworkAcl": {
    "type": "object",
    "properties": {
        "Tags": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::NetworkAclEntry": {
    "type": "object",
    "properties": {
        "CidrBlock": {
        },
        "Egress": {
        },
        "Icmp": {
        },
        "Ipv6CidrBlock": {
        },
        "NetworkAclId": {
        },
        "PortRange": {
        },
        "Protocol": {
        },
        "RuleAction": {
        },
        "RuleNumber": {
        }
        
    }
},
        
            "AWS::EC2::NetworkInterface": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "GroupSet": {
        },
        "InterfaceType": {
        },
        "Ipv6AddressCount": {
        },
        "Ipv6Addresses": {
        },
        "PrivateIpAddress": {
        },
        "PrivateIpAddresses": {
        },
        "SecondaryPrivateIpAddressCount": {
        },
        "SourceDestCheck": {
        },
        "SubnetId": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::EC2::NetworkInterfaceAttachment": {
    "type": "object",
    "properties": {
        "DeleteOnTermination": {
        },
        "DeviceIndex": {
        },
        "InstanceId": {
        },
        "NetworkInterfaceId": {
        }
        
    }
},
        
            "AWS::EC2::NetworkInterfacePermission": {
    "type": "object",
    "properties": {
        "AwsAccountId": {
        },
        "NetworkInterfaceId": {
        },
        "Permission": {
        }
        
    }
},
        
            "AWS::EC2::PlacementGroup": {
    "type": "object",
    "properties": {
        "Strategy": {
        }
        
    }
},
        
            "AWS::EC2::Route": {
    "type": "object",
    "properties": {
        "DestinationCidrBlock": {
        },
        "DestinationIpv6CidrBlock": {
        },
        "GatewayId": {
        },
        "InstanceId": {
        },
        "NatGatewayId": {
        },
        "NetworkInterfaceId": {
        },
        "RouteTableId": {
        },
        "VpcPeeringConnectionId": {
        }
        
    }
},
        
            "AWS::EC2::RouteTable": {
    "type": "object",
    "properties": {
        "Tags": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::SecurityGroup": {
    "type": "object",
    "properties": {
        "GroupDescription": {
        },
        "GroupName": {
        },
        "SecurityGroupEgress": {
        },
        "SecurityGroupIngress": {
        },
        "Tags": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::SecurityGroupEgress": {
    "type": "object",
    "properties": {
        "CidrIp": {
        },
        "CidrIpv6": {
        },
        "DestinationPrefixListId": {
        },
        "DestinationSecurityGroupId": {
        },
        "FromPort": {
        },
        "GroupId": {
        },
        "IpProtocol": {
        },
        "ToPort": {
        }
        
    }
},
        
            "AWS::EC2::SecurityGroupIngress": {
    "type": "object",
    "properties": {
        "CidrIp": {
        },
        "CidrIpv6": {
        },
        "FromPort": {
        },
        "GroupId": {
        },
        "GroupName": {
        },
        "IpProtocol": {
        },
        "SourceSecurityGroupId": {
        },
        "SourceSecurityGroupName": {
        },
        "SourceSecurityGroupOwnerId": {
        },
        "ToPort": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet": {
    "type": "object",
    "properties": {
        "SpotFleetRequestConfigData": {
        }
        
    }
},
        
            "AWS::EC2::Subnet": {
    "type": "object",
    "properties": {
        "AvailabilityZone": {
        },
        "CidrBlock": {
        },
        "MapPublicIpOnLaunch": {
        },
        "Tags": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::SubnetCidrBlock": {
    "type": "object",
    "properties": {
        "Ipv6CidrBlock": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::SubnetNetworkAclAssociation": {
    "type": "object",
    "properties": {
        "NetworkAclId": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::SubnetRouteTableAssociation": {
    "type": "object",
    "properties": {
        "RouteTableId": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::TrunkInterfaceAssociation": {
    "type": "object",
    "properties": {
        "BranchInterfaceId": {
        },
        "GREKey": {
        },
        "TrunkInterfaceId": {
        },
        "VLANId": {
        }
        
    }
},
        
            "AWS::EC2::VPC": {
    "type": "object",
    "properties": {
        "CidrBlock": {
        },
        "EnableDnsHostnames": {
        },
        "EnableDnsSupport": {
        },
        "InstanceTenancy": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::EC2::VPCCidrBlock": {
    "type": "object",
    "properties": {
        "AmazonProvidedIpv6CidrBlock": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::VPCDHCPOptionsAssociation": {
    "type": "object",
    "properties": {
        "DhcpOptionsId": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::VPCEndpoint": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "RouteTableIds": {
        },
        "ServiceName": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::VPCGatewayAttachment": {
    "type": "object",
    "properties": {
        "InternetGatewayId": {
        },
        "VpcId": {
        },
        "VpnGatewayId": {
        }
        
    }
},
        
            "AWS::EC2::VPCPeeringConnection": {
    "type": "object",
    "properties": {
        "PeerOwnerId": {
        },
        "PeerRoleArn": {
        },
        "PeerVpcId": {
        },
        "Tags": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::EC2::VPNConnection": {
    "type": "object",
    "properties": {
        "CustomerGatewayId": {
        },
        "StaticRoutesOnly": {
        },
        "Tags": {
        },
        "Type": {
        },
        "VpnGatewayId": {
        }
        
    }
},
        
            "AWS::EC2::VPNConnectionRoute": {
    "type": "object",
    "properties": {
        "DestinationCidrBlock": {
        },
        "VpnConnectionId": {
        }
        
    }
},
        
            "AWS::EC2::VPNGateway": {
    "type": "object",
    "properties": {
        "Tags": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::EC2::VPNGatewayRoutePropagation": {
    "type": "object",
    "properties": {
        "RouteTableIds": {
        },
        "VpnGatewayId": {
        }
        
    }
},
        
            "AWS::EC2::Volume": {
    "type": "object",
    "properties": {
        "AutoEnableIO": {
        },
        "AvailabilityZone": {
        },
        "Encrypted": {
        },
        "Iops": {
        },
        "KmsKeyId": {
        },
        "Size": {
        },
        "SnapshotId": {
        },
        "Tags": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EC2::VolumeAttachment": {
    "type": "object",
    "properties": {
        "Device": {
        },
        "InstanceId": {
        },
        "VolumeId": {
        }
        
    }
},
        
            "AWS::ECR::Repository": {
    "type": "object",
    "properties": {
        "RepositoryName": {
        },
        "RepositoryPolicyText": {
        }
        
    }
},
        
            "AWS::ECS::Cluster": {
    "type": "object",
    "properties": {
        "ClusterName": {
        }
        
    }
},
        
            "AWS::ECS::Service": {
    "type": "object",
    "properties": {
        "Cluster": {
        },
        "DeploymentConfiguration": {
        },
        "DesiredCount": {
        },
        "LoadBalancers": {
        },
        "PlacementConstraints": {
        },
        "PlacementStrategies": {
        },
        "Role": {
        },
        "ServiceName": {
        },
        "TaskDefinition": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition": {
    "type": "object",
    "properties": {
        "ContainerDefinitions": {
        },
        "Family": {
        },
        "NetworkMode": {
        },
        "PlacementConstraints": {
        },
        "TaskRoleArn": {
        },
        "Volumes": {
        }
        
    }
},
        
            "AWS::EFS::FileSystem": {
    "type": "object",
    "properties": {
        "FileSystemTags": {
        },
        "PerformanceMode": {
        }
        
    }
},
        
            "AWS::EFS::MountTarget": {
    "type": "object",
    "properties": {
        "FileSystemId": {
        },
        "IpAddress": {
        },
        "SecurityGroups": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EMR::Cluster": {
    "type": "object",
    "properties": {
        "AdditionalInfo": {
        },
        "Applications": {
        },
        "AutoScalingRole": {
        },
        "BootstrapActions": {
        },
        "Configurations": {
        },
        "Instances": {
        },
        "JobFlowRole": {
        },
        "LogUri": {
        },
        "Name": {
        },
        "ReleaseLabel": {
        },
        "ScaleDownBehavior": {
        },
        "SecurityConfiguration": {
        },
        "ServiceRole": {
        },
        "Tags": {
        },
        "VisibleToAllUsers": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig": {
    "type": "object",
    "properties": {
        "ClusterId": {
        },
        "InstanceFleetType": {
        },
        "InstanceTypeConfigs": {
        },
        "LaunchSpecifications": {
        },
        "Name": {
        },
        "TargetOnDemandCapacity": {
        },
        "TargetSpotCapacity": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig": {
    "type": "object",
    "properties": {
        "AutoScalingPolicy": {
        },
        "BidPrice": {
        },
        "Configurations": {
        },
        "EbsConfiguration": {
        },
        "InstanceCount": {
        },
        "InstanceRole": {
        },
        "InstanceType": {
        },
        "JobFlowId": {
        },
        "Market": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::EMR::SecurityConfiguration": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "SecurityConfiguration": {
        }
        
    }
},
        
            "AWS::EMR::Step": {
    "type": "object",
    "properties": {
        "ActionOnFailure": {
        },
        "HadoopJarStep": {
        },
        "JobFlowId": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::ElastiCache::CacheCluster": {
    "type": "object",
    "properties": {
        "AZMode": {
        },
        "AutoMinorVersionUpgrade": {
        },
        "CacheNodeType": {
        },
        "CacheParameterGroupName": {
        },
        "CacheSecurityGroupNames": {
        },
        "CacheSubnetGroupName": {
        },
        "ClusterName": {
        },
        "Engine": {
        },
        "EngineVersion": {
        },
        "NotificationTopicArn": {
        },
        "NumCacheNodes": {
        },
        "Port": {
        },
        "PreferredAvailabilityZone": {
        },
        "PreferredAvailabilityZones": {
        },
        "PreferredMaintenanceWindow": {
        },
        "SnapshotArns": {
        },
        "SnapshotName": {
        },
        "SnapshotRetentionLimit": {
        },
        "SnapshotWindow": {
        },
        "Tags": {
        },
        "VpcSecurityGroupIds": {
        }
        
    }
},
        
            "AWS::ElastiCache::ParameterGroup": {
    "type": "object",
    "properties": {
        "CacheParameterGroupFamily": {
        },
        "Description": {
        },
        "Properties": {
        }
        
    }
},
        
            "AWS::ElastiCache::ReplicationGroup": {
    "type": "object",
    "properties": {
        "AutoMinorVersionUpgrade": {
        },
        "AutomaticFailoverEnabled": {
        },
        "CacheNodeType": {
        },
        "CacheParameterGroupName": {
        },
        "CacheSecurityGroupNames": {
        },
        "CacheSubnetGroupName": {
        },
        "Engine": {
        },
        "EngineVersion": {
        },
        "NodeGroupConfiguration": {
        },
        "NotificationTopicArn": {
        },
        "NumCacheClusters": {
        },
        "NumNodeGroups": {
        },
        "Port": {
        },
        "PreferredCacheClusterAZs": {
        },
        "PreferredMaintenanceWindow": {
        },
        "PrimaryClusterId": {
        },
        "ReplicasPerNodeGroup": {
        },
        "ReplicationGroupDescription": {
        },
        "ReplicationGroupId": {
        },
        "SecurityGroupIds": {
        },
        "SnapshotArns": {
        },
        "SnapshotName": {
        },
        "SnapshotRetentionLimit": {
        },
        "SnapshotWindow": {
        },
        "SnapshottingClusterId": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::ElastiCache::SecurityGroup": {
    "type": "object",
    "properties": {
        "Description": {
        }
        
    }
},
        
            "AWS::ElastiCache::SecurityGroupIngress": {
    "type": "object",
    "properties": {
        "CacheSecurityGroupName": {
        },
        "EC2SecurityGroupName": {
        },
        "EC2SecurityGroupOwnerId": {
        }
        
    }
},
        
            "AWS::ElastiCache::SubnetGroup": {
    "type": "object",
    "properties": {
        "CacheSubnetGroupName": {
        },
        "Description": {
        },
        "SubnetIds": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::Application": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "Description": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::ApplicationVersion": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "Description": {
        },
        "SourceBundle": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::ConfigurationTemplate": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "Description": {
        },
        "EnvironmentId": {
        },
        "OptionSettings": {
        },
        "SolutionStackName": {
        },
        "SourceConfiguration": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::Environment": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "CNAMEPrefix": {
        },
        "Description": {
        },
        "EnvironmentName": {
        },
        "OptionSettings": {
        },
        "SolutionStackName": {
        },
        "Tags": {
        },
        "TemplateName": {
        },
        "Tier": {
        },
        "VersionLabel": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer": {
    "type": "object",
    "properties": {
        "AccessLoggingPolicy": {
        },
        "AppCookieStickinessPolicy": {
        },
        "AvailabilityZones": {
        },
        "ConnectionDrainingPolicy": {
        },
        "ConnectionSettings": {
        },
        "CrossZone": {
        },
        "HealthCheck": {
        },
        "Instances": {
        },
        "LBCookieStickinessPolicy": {
        },
        "Listeners": {
        },
        "LoadBalancerName": {
        },
        "Policies": {
        },
        "Scheme": {
        },
        "SecurityGroups": {
        },
        "Subnets": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::Listener": {
    "type": "object",
    "properties": {
        "Certificates": {
        },
        "DefaultActions": {
        },
        "LoadBalancerArn": {
        },
        "Port": {
        },
        "Protocol": {
        },
        "SslPolicy": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::ListenerRule": {
    "type": "object",
    "properties": {
        "Actions": {
        },
        "Conditions": {
        },
        "ListenerArn": {
        },
        "Priority": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::LoadBalancer": {
    "type": "object",
    "properties": {
        "IpAddressType": {
        },
        "LoadBalancerAttributes": {
        },
        "Name": {
        },
        "Scheme": {
        },
        "SecurityGroups": {
        },
        "Subnets": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::TargetGroup": {
    "type": "object",
    "properties": {
        "HealthCheckIntervalSeconds": {
        },
        "HealthCheckPath": {
        },
        "HealthCheckPort": {
        },
        "HealthCheckProtocol": {
        },
        "HealthCheckTimeoutSeconds": {
        },
        "HealthyThresholdCount": {
        },
        "Matcher": {
        },
        "Name": {
        },
        "Port": {
        },
        "Protocol": {
        },
        "Tags": {
        },
        "TargetGroupAttributes": {
        },
        "Targets": {
        },
        "UnhealthyThresholdCount": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::Elasticsearch::Domain": {
    "type": "object",
    "properties": {
        "AccessPolicies": {
        },
        "AdvancedOptions": {
        },
        "DomainName": {
        },
        "EBSOptions": {
        },
        "ElasticsearchClusterConfig": {
        },
        "ElasticsearchVersion": {
        },
        "SnapshotOptions": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::Events::Rule": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "EventPattern": {
        },
        "Name": {
        },
        "RoleArn": {
        },
        "ScheduleExpression": {
        },
        "State": {
        },
        "Targets": {
        }
        
    }
},
        
            "AWS::GameLift::Alias": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Name": {
        },
        "RoutingStrategy": {
        }
        
    }
},
        
            "AWS::GameLift::Build": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "StorageLocation": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::GameLift::Fleet": {
    "type": "object",
    "properties": {
        "BuildId": {
        },
        "Description": {
        },
        "DesiredEC2Instances": {
        },
        "EC2InboundPermissions": {
        },
        "EC2InstanceType": {
        },
        "LogPaths": {
        },
        "MaxSize": {
        },
        "MinSize": {
        },
        "Name": {
        },
        "ServerLaunchParameters": {
        },
        "ServerLaunchPath": {
        }
        
    }
},
        
            "AWS::IAM::AccessKey": {
    "type": "object",
    "properties": {
        "Serial": {
        },
        "Status": {
        },
        "UserName": {
        }
        
    }
},
        
            "AWS::IAM::Group": {
    "type": "object",
    "properties": {
        "GroupName": {
        },
        "ManagedPolicyArns": {
        },
        "Path": {
        },
        "Policies": {
        }
        
    }
},
        
            "AWS::IAM::InstanceProfile": {
    "type": "object",
    "properties": {
        "InstanceProfileName": {
        },
        "Path": {
        },
        "Roles": {
        }
        
    }
},
        
            "AWS::IAM::ManagedPolicy": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Groups": {
        },
        "ManagedPolicyName": {
        },
        "Path": {
        },
        "PolicyDocument": {
        },
        "Roles": {
        },
        "Users": {
        }
        
    }
},
        
            "AWS::IAM::Policy": {
    "type": "object",
    "properties": {
        "Groups": {
        },
        "PolicyDocument": {
        },
        "PolicyName": {
        },
        "Roles": {
        },
        "Users": {
        }
        
    }
},
        
            "AWS::IAM::Role": {
    "type": "object",
    "properties": {
        "AssumeRolePolicyDocument": {
        },
        "ManagedPolicyArns": {
        },
        "Path": {
        },
        "Policies": {
        },
        "RoleName": {
        }
        
    }
},
        
            "AWS::IAM::User": {
    "type": "object",
    "properties": {
        "Groups": {
        },
        "LoginProfile": {
        },
        "ManagedPolicyArns": {
        },
        "Path": {
        },
        "Policies": {
        },
        "UserName": {
        }
        
    }
},
        
            "AWS::IAM::UserToGroupAddition": {
    "type": "object",
    "properties": {
        "GroupName": {
        },
        "Users": {
        }
        
    }
},
        
            "AWS::IoT::Certificate": {
    "type": "object",
    "properties": {
        "CertificateSigningRequest": {
        },
        "Status": {
        }
        
    }
},
        
            "AWS::IoT::Policy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::IoT::PolicyPrincipalAttachment": {
    "type": "object",
    "properties": {
        "PolicyName": {
        },
        "Principal": {
        }
        
    }
},
        
            "AWS::IoT::Thing": {
    "type": "object",
    "properties": {
        "AttributePayload": {
        },
        "ThingName": {
        }
        
    }
},
        
            "AWS::IoT::ThingPrincipalAttachment": {
    "type": "object",
    "properties": {
        "Principal": {
        },
        "ThingName": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule": {
    "type": "object",
    "properties": {
        "RuleName": {
        },
        "TopicRulePayload": {
        }
        
    }
},
        
            "AWS::KMS::Alias": {
    "type": "object",
    "properties": {
        "AliasName": {
        },
        "TargetKeyId": {
        }
        
    }
},
        
            "AWS::KMS::Key": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "EnableKeyRotation": {
        },
        "Enabled": {
        },
        "KeyPolicy": {
        },
        "KeyUsage": {
        }
        
    }
},
        
            "AWS::Kinesis::Stream": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "RetentionPeriodHours": {
        },
        "ShardCount": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application": {
    "type": "object",
    "properties": {
        "ApplicationCode": {
        },
        "ApplicationDescription": {
        },
        "ApplicationName": {
        },
        "Inputs": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationOutput": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "Output": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "ReferenceDataSource": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream": {
    "type": "object",
    "properties": {
        "DeliveryStreamName": {
        },
        "ElasticsearchDestinationConfiguration": {
        },
        "RedshiftDestinationConfiguration": {
        },
        "S3DestinationConfiguration": {
        }
        
    }
},
        
            "AWS::Lambda::Alias": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "FunctionName": {
        },
        "FunctionVersion": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::Lambda::EventSourceMapping": {
    "type": "object",
    "properties": {
        "BatchSize": {
        },
        "Enabled": {
        },
        "EventSourceArn": {
        },
        "FunctionName": {
        },
        "StartingPosition": {
        }
        
    }
},
        
            "AWS::Lambda::Function": {
    "type": "object",
    "properties": {
        "Code": {
        },
        "DeadLetterConfig": {
        },
        "Description": {
        },
        "Environment": {
        },
        "FunctionName": {
        },
        "Handler": {
        },
        "KmsKeyArn": {
        },
        "MemorySize": {
        },
        "Role": {
        },
        "Runtime": {
        },
        "Tags": {
        },
        "Timeout": {
        },
        "TracingConfig": {
        },
        "VpcConfig": {
        }
        
    }
},
        
            "AWS::Lambda::Permission": {
    "type": "object",
    "properties": {
        "Action": {
        },
        "FunctionName": {
        },
        "Principal": {
        },
        "SourceAccount": {
        },
        "SourceArn": {
        }
        
    }
},
        
            "AWS::Lambda::Version": {
    "type": "object",
    "properties": {
        "CodeSha256": {
        },
        "Description": {
        },
        "FunctionName": {
        }
        
    }
},
        
            "AWS::Logs::Destination": {
    "type": "object",
    "properties": {
        "DestinationName": {
        },
        "DestinationPolicy": {
        },
        "RoleArn": {
        },
        "TargetArn": {
        }
        
    }
},
        
            "AWS::Logs::LogGroup": {
    "type": "object",
    "properties": {
        "LogGroupName": {
        },
        "RetentionInDays": {
        }
        
    }
},
        
            "AWS::Logs::LogStream": {
    "type": "object",
    "properties": {
        "LogGroupName": {
        },
        "LogStreamName": {
        }
        
    }
},
        
            "AWS::Logs::MetricFilter": {
    "type": "object",
    "properties": {
        "FilterPattern": {
        },
        "LogGroupName": {
        },
        "MetricTransformations": {
        }
        
    }
},
        
            "AWS::Logs::SubscriptionFilter": {
    "type": "object",
    "properties": {
        "DestinationArn": {
        },
        "FilterPattern": {
        },
        "LogGroupName": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::OpsWorks::App": {
    "type": "object",
    "properties": {
        "AppSource": {
        },
        "Attributes": {
        },
        "DataSources": {
        },
        "Description": {
        },
        "Domains": {
        },
        "EnableSsl": {
        },
        "Environment": {
        },
        "Name": {
        },
        "Shortname": {
        },
        "SslConfiguration": {
        },
        "StackId": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
    "type": "object",
    "properties": {
        "ElasticLoadBalancerName": {
        },
        "LayerId": {
        }
        
    }
},
        
            "AWS::OpsWorks::Instance": {
    "type": "object",
    "properties": {
        "AgentVersion": {
        },
        "AmiId": {
        },
        "Architecture": {
        },
        "AutoScalingType": {
        },
        "AvailabilityZone": {
        },
        "BlockDeviceMappings": {
        },
        "EbsOptimized": {
        },
        "ElasticIps": {
        },
        "Hostname": {
        },
        "InstallUpdatesOnBoot": {
        },
        "InstanceType": {
        },
        "LayerIds": {
        },
        "Os": {
        },
        "RootDeviceType": {
        },
        "SshKeyName": {
        },
        "StackId": {
        },
        "SubnetId": {
        },
        "Tenancy": {
        },
        "TimeBasedAutoScaling": {
        },
        "VirtualizationType": {
        },
        "Volumes": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer": {
    "type": "object",
    "properties": {
        "Attributes": {
        },
        "AutoAssignElasticIps": {
        },
        "AutoAssignPublicIps": {
        },
        "CustomInstanceProfileArn": {
        },
        "CustomJson": {
        },
        "CustomRecipes": {
        },
        "CustomSecurityGroupIds": {
        },
        "EnableAutoHealing": {
        },
        "InstallUpdatesOnBoot": {
        },
        "LifecycleEventConfiguration": {
        },
        "LoadBasedAutoScaling": {
        },
        "Name": {
        },
        "Packages": {
        },
        "Shortname": {
        },
        "StackId": {
        },
        "Type": {
        },
        "UseEbsOptimizedInstances": {
        },
        "VolumeConfigurations": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack": {
    "type": "object",
    "properties": {
        "AgentVersion": {
        },
        "Attributes": {
        },
        "ChefConfiguration": {
        },
        "CloneAppIds": {
        },
        "ClonePermissions": {
        },
        "ConfigurationManager": {
        },
        "CustomCookbooksSource": {
        },
        "CustomJson": {
        },
        "DefaultAvailabilityZone": {
        },
        "DefaultInstanceProfileArn": {
        },
        "DefaultOs": {
        },
        "DefaultRootDeviceType": {
        },
        "DefaultSshKeyName": {
        },
        "DefaultSubnetId": {
        },
        "EcsClusterArn": {
        },
        "ElasticIps": {
        },
        "HostnameTheme": {
        },
        "Name": {
        },
        "RdsDbInstances": {
        },
        "ServiceRoleArn": {
        },
        "SourceStackId": {
        },
        "UseCustomCookbooks": {
        },
        "UseOpsworksSecurityGroups": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::OpsWorks::UserProfile": {
    "type": "object",
    "properties": {
        "AllowSelfManagement": {
        },
        "IamUserArn": {
        },
        "SshPublicKey": {
        },
        "SshUsername": {
        }
        
    }
},
        
            "AWS::OpsWorks::Volume": {
    "type": "object",
    "properties": {
        "Ec2VolumeId": {
        },
        "MountPoint": {
        },
        "Name": {
        },
        "StackId": {
        }
        
    }
},
        
            "AWS::RDS::DBCluster": {
    "type": "object",
    "properties": {
        "AvailabilityZones": {
        },
        "BackupRetentionPeriod": {
        },
        "DBClusterParameterGroupName": {
        },
        "DBSubnetGroupName": {
        },
        "DatabaseName": {
        },
        "Engine": {
        },
        "EngineVersion": {
        },
        "KmsKeyId": {
        },
        "MasterUserPassword": {
        },
        "MasterUsername": {
        },
        "Port": {
        },
        "PreferredBackupWindow": {
        },
        "PreferredMaintenanceWindow": {
        },
        "ReplicationSourceIdentifier": {
        },
        "SnapshotIdentifier": {
        },
        "StorageEncrypted": {
        },
        "Tags": {
        },
        "VpcSecurityGroupIds": {
        }
        
    }
},
        
            "AWS::RDS::DBClusterParameterGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Family": {
        },
        "Parameters": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::RDS::DBInstance": {
    "type": "object",
    "properties": {
        "AllocatedStorage": {
        },
        "AllowMajorVersionUpgrade": {
        },
        "AutoMinorVersionUpgrade": {
        },
        "AvailabilityZone": {
        },
        "BackupRetentionPeriod": {
        },
        "CharacterSetName": {
        },
        "CopyTagsToSnapshot": {
        },
        "DBClusterIdentifier": {
        },
        "DBInstanceClass": {
        },
        "DBInstanceIdentifier": {
        },
        "DBName": {
        },
        "DBParameterGroupName": {
        },
        "DBSecurityGroups": {
        },
        "DBSnapshotIdentifier": {
        },
        "DBSubnetGroupName": {
        },
        "Domain": {
        },
        "DomainIAMRoleName": {
        },
        "Engine": {
        },
        "EngineVersion": {
        },
        "Iops": {
        },
        "KmsKeyId": {
        },
        "LicenseModel": {
        },
        "MasterUserPassword": {
        },
        "MasterUsername": {
        },
        "MonitoringInterval": {
        },
        "MonitoringRoleArn": {
        },
        "MultiAZ": {
        },
        "OptionGroupName": {
        },
        "Port": {
        },
        "PreferredBackupWindow": {
        },
        "PreferredMaintenanceWindow": {
        },
        "PubliclyAccessible": {
        },
        "SourceDBInstanceIdentifier": {
        },
        "StorageEncrypted": {
        },
        "StorageType": {
        },
        "Tags": {
        },
        "Timezone": {
        },
        "VPCSecurityGroups": {
        }
        
    }
},
        
            "AWS::RDS::DBParameterGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Family": {
        },
        "Parameters": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::RDS::DBSecurityGroup": {
    "type": "object",
    "properties": {
        "DBSecurityGroupIngress": {
        },
        "EC2VpcId": {
        },
        "GroupDescription": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::RDS::DBSecurityGroupIngress": {
    "type": "object",
    "properties": {
        "CIDRIP": {
        },
        "DBSecurityGroupName": {
        },
        "EC2SecurityGroupId": {
        },
        "EC2SecurityGroupName": {
        },
        "EC2SecurityGroupOwnerId": {
        }
        
    }
},
        
            "AWS::RDS::DBSubnetGroup": {
    "type": "object",
    "properties": {
        "DBSubnetGroupDescription": {
        },
        "SubnetIds": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::RDS::EventSubscription": {
    "type": "object",
    "properties": {
        "Enabled": {
        },
        "EventCategories": {
        },
        "SnsTopicArn": {
        },
        "SourceIds": {
        },
        "SourceType": {
        }
        
    }
},
        
            "AWS::RDS::OptionGroup": {
    "type": "object",
    "properties": {
        "EngineName": {
        },
        "MajorEngineVersion": {
        },
        "OptionConfigurations": {
        },
        "OptionGroupDescription": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::Redshift::Cluster": {
    "type": "object",
    "properties": {
        "AllowVersionUpgrade": {
        },
        "AutomatedSnapshotRetentionPeriod": {
        },
        "AvailabilityZone": {
        },
        "ClusterParameterGroupName": {
        },
        "ClusterSecurityGroups": {
        },
        "ClusterSubnetGroupName": {
        },
        "ClusterType": {
        },
        "ClusterVersion": {
        },
        "DBName": {
        },
        "ElasticIp": {
        },
        "Encrypted": {
        },
        "HsmClientCertificateIdentifier": {
        },
        "HsmConfigurationIdentifier": {
        },
        "IamRoles": {
        },
        "KmsKeyId": {
        },
        "LoggingProperties": {
        },
        "MasterUserPassword": {
        },
        "MasterUsername": {
        },
        "NodeType": {
        },
        "NumberOfNodes": {
        },
        "OwnerAccount": {
        },
        "Port": {
        },
        "PreferredMaintenanceWindow": {
        },
        "PubliclyAccessible": {
        },
        "SnapshotClusterIdentifier": {
        },
        "SnapshotIdentifier": {
        },
        "Tags": {
        },
        "VpcSecurityGroupIds": {
        }
        
    }
},
        
            "AWS::Redshift::ClusterParameterGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "ParameterGroupFamily": {
        },
        "Parameters": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::Redshift::ClusterSecurityGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::Redshift::ClusterSecurityGroupIngress": {
    "type": "object",
    "properties": {
        "CIDRIP": {
        },
        "ClusterSecurityGroupName": {
        },
        "EC2SecurityGroupName": {
        },
        "EC2SecurityGroupOwnerId": {
        }
        
    }
},
        
            "AWS::Redshift::ClusterSubnetGroup": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "SubnetIds": {
        },
        "Tags": {
        }
        
    }
},
        
            "AWS::Route53::HealthCheck": {
    "type": "object",
    "properties": {
        "HealthCheckConfig": {
        },
        "HealthCheckTags": {
        }
        
    }
},
        
            "AWS::Route53::HostedZone": {
    "type": "object",
    "properties": {
        "HostedZoneConfig": {
        },
        "HostedZoneTags": {
        },
        "Name": {
        },
        "VPCs": {
        }
        
    }
},
        
            "AWS::Route53::RecordSet": {
    "type": "object",
    "properties": {
        "AliasTarget": {
        },
        "Comment": {
        },
        "Failover": {
        },
        "GeoLocation": {
        },
        "HealthCheckId": {
        },
        "HostedZoneId": {
        },
        "HostedZoneName": {
        },
        "Name": {
        },
        "Region": {
        },
        "ResourceRecords": {
        },
        "SetIdentifier": {
        },
        "TTL": {
        },
        "Type": {
        },
        "Weight": {
        }
        
    }
},
        
            "AWS::Route53::RecordSetGroup": {
    "type": "object",
    "properties": {
        "Comment": {
        },
        "HostedZoneId": {
        },
        "HostedZoneName": {
        },
        "RecordSets": {
        }
        
    }
},
        
            "AWS::S3::Bucket": {
    "type": "object",
    "properties": {
        "AccessControl": {
        },
        "BucketName": {
        },
        "CorsConfiguration": {
        },
        "LifecycleConfiguration": {
        },
        "LoggingConfiguration": {
        },
        "NotificationConfiguration": {
        },
        "ReplicationConfiguration": {
        },
        "Tags": {
        },
        "VersioningConfiguration": {
        },
        "WebsiteConfiguration": {
        }
        
    }
},
        
            "AWS::S3::BucketPolicy": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "PolicyDocument": {
        }
        
    }
},
        
            "AWS::SDB::Domain": {
    "type": "object",
    "properties": {
        "Description": {
        }
        
    }
},
        
            "AWS::SNS::Subscription": {
    "type": "object",
    "properties": {
        "Endpoint": {
        },
        "Protocol": {
        },
        "TopicArn": {
        }
        
    }
},
        
            "AWS::SNS::Topic": {
    "type": "object",
    "properties": {
        "DisplayName": {
        },
        "Subscription": {
        },
        "TopicName": {
        }
        
    }
},
        
            "AWS::SNS::TopicPolicy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "Topics": {
        }
        
    }
},
        
            "AWS::SQS::Queue": {
    "type": "object",
    "properties": {
        "ContentBasedDeduplication": {
        },
        "DelaySeconds": {
        },
        "FifoQueue": {
        },
        "MaximumMessageSize": {
        },
        "MessageRetentionPeriod": {
        },
        "QueueName": {
        },
        "ReceiveMessageWaitTimeSeconds": {
        },
        "RedrivePolicy": {
        },
        "VisibilityTimeout": {
        }
        
    }
},
        
            "AWS::SQS::QueuePolicy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "Queues": {
        }
        
    }
},
        
            "AWS::SSM::Association": {
    "type": "object",
    "properties": {
        "DocumentVersion": {
        },
        "InstanceId": {
        },
        "Name": {
        },
        "Parameters": {
        },
        "ScheduleExpression": {
        },
        "Targets": {
        }
        
    }
},
        
            "AWS::SSM::Document": {
    "type": "object",
    "properties": {
        "Content": {
        },
        "DocumentType": {
        }
        
    }
},
        
            "AWS::SSM::Parameter": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Name": {
        },
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::StepFunctions::Activity": {
    "type": "object",
    "properties": {
        "Name": {
        }
        
    }
},
        
            "AWS::StepFunctions::StateMachine": {
    "type": "object",
    "properties": {
        "DefinitionString": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::WAF::ByteMatchSet": {
    "type": "object",
    "properties": {
        "ByteMatchTuples": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::WAF::IPSet": {
    "type": "object",
    "properties": {
        "IPSetDescriptors": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::WAF::Rule": {
    "type": "object",
    "properties": {
        "MetricName": {
        },
        "Name": {
        },
        "Predicates": {
        }
        
    }
},
        
            "AWS::WAF::SizeConstraintSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "SizeConstraints": {
        }
        
    }
},
        
            "AWS::WAF::SqlInjectionMatchSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "SqlInjectionMatchTuples": {
        }
        
    }
},
        
            "AWS::WAF::WebACL": {
    "type": "object",
    "properties": {
        "DefaultAction": {
        },
        "MetricName": {
        },
        "Name": {
        },
        "Rules": {
        }
        
    }
},
        
            "AWS::WAF::XssMatchSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "XssMatchTuples": {
        }
        
    }
},
        
            "AWS::WAFRegional::ByteMatchSet": {
    "type": "object",
    "properties": {
        "ByteMatchTuples": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::WAFRegional::IPSet": {
    "type": "object",
    "properties": {
        "IPSetDescriptors": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::WAFRegional::Rule": {
    "type": "object",
    "properties": {
        "MetricName": {
        },
        "Name": {
        },
        "Predicates": {
        }
        
    }
},
        
            "AWS::WAFRegional::SizeConstraintSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "SizeConstraints": {
        }
        
    }
},
        
            "AWS::WAFRegional::SqlInjectionMatchSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "SqlInjectionMatchTuples": {
        }
        
    }
},
        
            "AWS::WAFRegional::WebACL": {
    "type": "object",
    "properties": {
        "DefaultAction": {
        },
        "MetricName": {
        },
        "Name": {
        },
        "Rules": {
        }
        
    }
},
        
            "AWS::WAFRegional::WebACLAssociation": {
    "type": "object",
    "properties": {
        "ResourceArn": {
        },
        "WebACLId": {
        }
        
    }
},
        
            "AWS::WAFRegional::XssMatchSet": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "XssMatchTuples": {
        }
        
    }
},
        
            "AWS::WorkSpaces::Workspace": {
    "type": "object",
    "properties": {
        "BundleId": {
        },
        "DirectoryId": {
        },
        "RootVolumeEncryptionEnabled": {
        },
        "UserName": {
        },
        "UserVolumeEncryptionEnabled": {
        },
        "VolumeEncryptionKey": {
        }
        
    }
},
        

        
            "AWS::ApiGateway::ApiKey.StageKey": {
    "type": "object",
    "properties": {
        "RestApiId": {
        },
        "StageName": {
        }
        
    }
},
        
            "AWS::ApiGateway::Deployment.MethodSetting": {
    "type": "object",
    "properties": {
        "CacheDataEncrypted": {
        },
        "CacheTtlInSeconds": {
        },
        "CachingEnabled": {
        },
        "DataTraceEnabled": {
        },
        "HttpMethod": {
        },
        "LoggingLevel": {
        },
        "MetricsEnabled": {
        },
        "ResourcePath": {
        },
        "ThrottlingBurstLimit": {
        },
        "ThrottlingRateLimit": {
        }
        
    }
},
        
            "AWS::ApiGateway::Deployment.StageDescription": {
    "type": "object",
    "properties": {
        "CacheClusterEnabled": {
        },
        "CacheClusterSize": {
        },
        "CacheDataEncrypted": {
        },
        "CacheTtlInSeconds": {
        },
        "CachingEnabled": {
        },
        "ClientCertificateId": {
        },
        "DataTraceEnabled": {
        },
        "Description": {
        },
        "LoggingLevel": {
        },
        "MethodSettings": {
        },
        "MetricsEnabled": {
        },
        "StageName": {
        },
        "ThrottlingBurstLimit": {
        },
        "ThrottlingRateLimit": {
        },
        "Variables": {
        }
        
    }
},
        
            "AWS::ApiGateway::Method.Integration": {
    "type": "object",
    "properties": {
        "CacheKeyParameters": {
        },
        "CacheNamespace": {
        },
        "Credentials": {
        },
        "IntegrationHttpMethod": {
        },
        "IntegrationResponses": {
        },
        "PassthroughBehavior": {
        },
        "RequestParameters": {
        },
        "RequestTemplates": {
        },
        "Type": {
        },
        "Uri": {
        }
        
    }
},
        
            "AWS::ApiGateway::Method.IntegrationResponse": {
    "type": "object",
    "properties": {
        "ResponseParameters": {
        },
        "ResponseTemplates": {
        },
        "SelectionPattern": {
        },
        "StatusCode": {
        }
        
    }
},
        
            "AWS::ApiGateway::Method.MethodResponse": {
    "type": "object",
    "properties": {
        "ResponseModels": {
        },
        "ResponseParameters": {
        },
        "StatusCode": {
        }
        
    }
},
        
            "AWS::ApiGateway::RestApi.S3Location": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "ETag": {
        },
        "Key": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::ApiGateway::Stage.MethodSetting": {
    "type": "object",
    "properties": {
        "CacheDataEncrypted": {
        },
        "CacheTtlInSeconds": {
        },
        "CachingEnabled": {
        },
        "DataTraceEnabled": {
        },
        "HttpMethod": {
        },
        "LoggingLevel": {
        },
        "MetricsEnabled": {
        },
        "ResourcePath": {
        },
        "ThrottlingBurstLimit": {
        },
        "ThrottlingRateLimit": {
        }
        
    }
},
        
            "AWS::ApiGateway::UsagePlan.ApiStage": {
    "type": "object",
    "properties": {
        "ApiId": {
        },
        "Stage": {
        }
        
    }
},
        
            "AWS::ApiGateway::UsagePlan.QuotaSettings": {
    "type": "object",
    "properties": {
        "Limit": {
        },
        "Offset": {
        },
        "Period": {
        }
        
    }
},
        
            "AWS::ApiGateway::UsagePlan.ThrottleSettings": {
    "type": "object",
    "properties": {
        "BurstLimit": {
        },
        "RateLimit": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.CustomizedMetricSpecification": {
    "type": "object",
    "properties": {
        "Dimensions": {
        },
        "MetricName": {
        },
        "Namespace": {
        },
        "Statistic": {
        },
        "Unit": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.MetricDimension": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification": {
    "type": "object",
    "properties": {
        "PredefinedMetricType": {
        },
        "ResourceLabel": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.StepAdjustment": {
    "type": "object",
    "properties": {
        "MetricIntervalLowerBound": {
        },
        "MetricIntervalUpperBound": {
        },
        "ScalingAdjustment": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration": {
    "type": "object",
    "properties": {
        "AdjustmentType": {
        },
        "Cooldown": {
        },
        "MetricAggregationType": {
        },
        "MinAdjustmentMagnitude": {
        },
        "StepAdjustments": {
        }
        
    }
},
        
            "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration": {
    "type": "object",
    "properties": {
        "CustomizedMetricSpecification": {
        },
        "PredefinedMetricSpecification": {
        },
        "ScaleInCooldown": {
        },
        "ScaleOutCooldown": {
        },
        "TargetValue": {
        }
        
    }
},
        
            "AWS::AutoScaling::AutoScalingGroup.MetricsCollection": {
    "type": "object",
    "properties": {
        "Granularity": {
        },
        "Metrics": {
        }
        
    }
},
        
            "AWS::AutoScaling::AutoScalingGroup.NotificationConfiguration": {
    "type": "object",
    "properties": {
        "NotificationTypes": {
        },
        "TopicARN": {
        }
        
    }
},
        
            "AWS::AutoScaling::AutoScalingGroup.TagProperty": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "PropagateAtLaunch": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::AutoScaling::LaunchConfiguration.BlockDevice": {
    "type": "object",
    "properties": {
        "DeleteOnTermination": {
        },
        "Encrypted": {
        },
        "Iops": {
        },
        "SnapshotId": {
        },
        "VolumeSize": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::AutoScaling::LaunchConfiguration.BlockDeviceMapping": {
    "type": "object",
    "properties": {
        "DeviceName": {
        },
        "Ebs": {
        },
        "NoDevice": {
        },
        "VirtualName": {
        }
        
    }
},
        
            "AWS::AutoScaling::ScalingPolicy.StepAdjustment": {
    "type": "object",
    "properties": {
        "MetricIntervalLowerBound": {
        },
        "MetricIntervalUpperBound": {
        },
        "ScalingAdjustment": {
        }
        
    }
},
        
            "AWS::Batch::ComputeEnvironment.ComputeResources": {
    "type": "object",
    "properties": {
        "BidPercentage": {
        },
        "DesiredvCpus": {
        },
        "Ec2KeyPair": {
        },
        "ImageId": {
        },
        "InstanceRole": {
        },
        "InstanceTypes": {
        },
        "MaxvCpus": {
        },
        "MinvCpus": {
        },
        "SecurityGroupIds": {
        },
        "SpotIamFleetRole": {
        },
        "Subnets": {
        },
        "Tags": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.ContainerProperties": {
    "type": "object",
    "properties": {
        "Command": {
        },
        "Environment": {
        },
        "Image": {
        },
        "JobRoleArn": {
        },
        "Memory": {
        },
        "MountPoints": {
        },
        "Privileged": {
        },
        "ReadonlyRootFilesystem": {
        },
        "Ulimits": {
        },
        "User": {
        },
        "Vcpus": {
        },
        "Volumes": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.Environment": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.MountPoints": {
    "type": "object",
    "properties": {
        "ContainerPath": {
        },
        "ReadOnly": {
        },
        "SourceVolume": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.RetryStrategy": {
    "type": "object",
    "properties": {
        "Attempts": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.Ulimit": {
    "type": "object",
    "properties": {
        "HardLimit": {
        },
        "Name": {
        },
        "SoftLimit": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.Volumes": {
    "type": "object",
    "properties": {
        "Host": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::Batch::JobDefinition.VolumesHost": {
    "type": "object",
    "properties": {
        "SourcePath": {
        }
        
    }
},
        
            "AWS::Batch::JobQueue.ComputeEnvironmentOrder": {
    "type": "object",
    "properties": {
        "ComputeEnvironment": {
        },
        "Order": {
        }
        
    }
},
        
            "AWS::CertificateManager::Certificate.DomainValidationOption": {
    "type": "object",
    "properties": {
        "DomainName": {
        },
        "ValidationDomain": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.CacheBehavior": {
    "type": "object",
    "properties": {
        "AllowedMethods": {
        },
        "CachedMethods": {
        },
        "Compress": {
        },
        "DefaultTTL": {
        },
        "ForwardedValues": {
        },
        "MaxTTL": {
        },
        "MinTTL": {
        },
        "PathPattern": {
        },
        "SmoothStreaming": {
        },
        "TargetOriginId": {
        },
        "TrustedSigners": {
        },
        "ViewerProtocolPolicy": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.Cookies": {
    "type": "object",
    "properties": {
        "Forward": {
        },
        "WhitelistedNames": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.CustomErrorResponse": {
    "type": "object",
    "properties": {
        "ErrorCachingMinTTL": {
        },
        "ErrorCode": {
        },
        "ResponseCode": {
        },
        "ResponsePagePath": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.CustomOriginConfig": {
    "type": "object",
    "properties": {
        "HTTPPort": {
        },
        "HTTPSPort": {
        },
        "OriginProtocolPolicy": {
        },
        "OriginSSLProtocols": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.DefaultCacheBehavior": {
    "type": "object",
    "properties": {
        "AllowedMethods": {
        },
        "CachedMethods": {
        },
        "Compress": {
        },
        "DefaultTTL": {
        },
        "ForwardedValues": {
        },
        "MaxTTL": {
        },
        "MinTTL": {
        },
        "SmoothStreaming": {
        },
        "TargetOriginId": {
        },
        "TrustedSigners": {
        },
        "ViewerProtocolPolicy": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.DistributionConfig": {
    "type": "object",
    "properties": {
        "Aliases": {
        },
        "CacheBehaviors": {
        },
        "Comment": {
        },
        "CustomErrorResponses": {
        },
        "DefaultCacheBehavior": {
        },
        "DefaultRootObject": {
        },
        "Enabled": {
        },
        "HttpVersion": {
        },
        "Logging": {
        },
        "Origins": {
        },
        "PriceClass": {
        },
        "Restrictions": {
        },
        "ViewerCertificate": {
        },
        "WebACLId": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.ForwardedValues": {
    "type": "object",
    "properties": {
        "Cookies": {
        },
        "Headers": {
        },
        "QueryString": {
        },
        "QueryStringCacheKeys": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.GeoRestriction": {
    "type": "object",
    "properties": {
        "Locations": {
        },
        "RestrictionType": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.Logging": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "IncludeCookies": {
        },
        "Prefix": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.Origin": {
    "type": "object",
    "properties": {
        "CustomOriginConfig": {
        },
        "DomainName": {
        },
        "Id": {
        },
        "OriginCustomHeaders": {
        },
        "OriginPath": {
        },
        "S3OriginConfig": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.OriginCustomHeader": {
    "type": "object",
    "properties": {
        "HeaderName": {
        },
        "HeaderValue": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.Restrictions": {
    "type": "object",
    "properties": {
        "GeoRestriction": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.S3OriginConfig": {
    "type": "object",
    "properties": {
        "OriginAccessIdentity": {
        }
        
    }
},
        
            "AWS::CloudFront::Distribution.ViewerCertificate": {
    "type": "object",
    "properties": {
        "AcmCertificateArn": {
        },
        "CloudFrontDefaultCertificate": {
        },
        "IamCertificateId": {
        },
        "MinimumProtocolVersion": {
        },
        "SslSupportMethod": {
        }
        
    }
},
        
            "AWS::CloudWatch::Alarm.Dimension": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project.Artifacts": {
    "type": "object",
    "properties": {
        "Location": {
        },
        "Name": {
        },
        "NamespaceType": {
        },
        "Packaging": {
        },
        "Path": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project.Environment": {
    "type": "object",
    "properties": {
        "ComputeType": {
        },
        "EnvironmentVariables": {
        },
        "Image": {
        },
        "PrivilegedMode": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project.EnvironmentVariable": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project.Source": {
    "type": "object",
    "properties": {
        "Auth": {
        },
        "BuildSpec": {
        },
        "Location": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodeBuild::Project.SourceAuth": {
    "type": "object",
    "properties": {
        "Resource": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodeCommit::Repository.RepositoryTrigger": {
    "type": "object",
    "properties": {
        "Branches": {
        },
        "CustomData": {
        },
        "DestinationArn": {
        },
        "Events": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts": {
    "type": "object",
    "properties": {
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.Alarm": {
    "type": "object",
    "properties": {
        "Name": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration": {
    "type": "object",
    "properties": {
        "Alarms": {
        },
        "Enabled": {
        },
        "IgnorePollAlarmFailure": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.Deployment": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "IgnoreApplicationStopFailures": {
        },
        "Revision": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.EC2TagFilter": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.GitHubLocation": {
    "type": "object",
    "properties": {
        "CommitId": {
        },
        "Repository": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.RevisionLocation": {
    "type": "object",
    "properties": {
        "GitHubLocation": {
        },
        "RevisionType": {
        },
        "S3Location": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.S3Location": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "BundleType": {
        },
        "ETag": {
        },
        "Key": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.TagFilter": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::CodeDeploy::DeploymentGroup.TriggerConfig": {
    "type": "object",
    "properties": {
        "TriggerEvents": {
        },
        "TriggerName": {
        },
        "TriggerTargetArn": {
        }
        
    }
},
        
            "AWS::CodePipeline::CustomActionType.ArtifactDetails": {
    "type": "object",
    "properties": {
        "MaximumCount": {
        },
        "MinimumCount": {
        }
        
    }
},
        
            "AWS::CodePipeline::CustomActionType.ConfigurationProperties": {
    "type": "object",
    "properties": {
        "Description": {
        },
        "Key": {
        },
        "Name": {
        },
        "Queryable": {
        },
        "Required": {
        },
        "Secret": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodePipeline::CustomActionType.Settings": {
    "type": "object",
    "properties": {
        "EntityUrlTemplate": {
        },
        "ExecutionUrlTemplate": {
        },
        "RevisionUrlTemplate": {
        },
        "ThirdPartyConfigurationUrl": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.ActionDeclaration": {
    "type": "object",
    "properties": {
        "ActionTypeId": {
        },
        "Configuration": {
        },
        "InputArtifacts": {
        },
        "Name": {
        },
        "OutputArtifacts": {
        },
        "RoleArn": {
        },
        "RunOrder": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.ActionTypeId": {
    "type": "object",
    "properties": {
        "Category": {
        },
        "Owner": {
        },
        "Provider": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.ArtifactStore": {
    "type": "object",
    "properties": {
        "EncryptionKey": {
        },
        "Location": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.BlockerDeclaration": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.EncryptionKey": {
    "type": "object",
    "properties": {
        "Id": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.InputArtifact": {
    "type": "object",
    "properties": {
        "Name": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.OutputArtifact": {
    "type": "object",
    "properties": {
        "Name": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.StageDeclaration": {
    "type": "object",
    "properties": {
        "Actions": {
        },
        "Blockers": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::CodePipeline::Pipeline.StageTransition": {
    "type": "object",
    "properties": {
        "Reason": {
        },
        "StageName": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPool.CognitoIdentityProvider": {
    "type": "object",
    "properties": {
        "ClientId": {
        },
        "ProviderName": {
        },
        "ServerSideTokenCheck": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPool.CognitoStreams": {
    "type": "object",
    "properties": {
        "RoleArn": {
        },
        "StreamName": {
        },
        "StreamingStatus": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPool.PushSync": {
    "type": "object",
    "properties": {
        "ApplicationArns": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPoolRoleAttachment.MappingRule": {
    "type": "object",
    "properties": {
        "Claim": {
        },
        "MatchType": {
        },
        "RoleARN": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping": {
    "type": "object",
    "properties": {
        "AmbiguousRoleResolution": {
        },
        "RulesConfiguration": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::Cognito::IdentityPoolRoleAttachment.RulesConfigurationType": {
    "type": "object",
    "properties": {
        
    }
},
        
            "AWS::Cognito::UserPool.AdminCreateUserConfig": {
    "type": "object",
    "properties": {
        "AllowAdminCreateUserOnly": {
        },
        "InviteMessageTemplate": {
        },
        "UnusedAccountValidityDays": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.DeviceConfiguration": {
    "type": "object",
    "properties": {
        "ChallengeRequiredOnNewDevice": {
        },
        "DeviceOnlyRememberedOnUserPrompt": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.EmailConfiguration": {
    "type": "object",
    "properties": {
        "ReplyToEmailAddress": {
        },
        "SourceArn": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.InviteMessageTemplate": {
    "type": "object",
    "properties": {
        "EmailMessage": {
        },
        "EmailSubject": {
        },
        "SMSMessage": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.LambdaConfig": {
    "type": "object",
    "properties": {
        "CreateAuthChallenge": {
        },
        "CustomMessage": {
        },
        "DefineAuthChallenge": {
        },
        "PostAuthentication": {
        },
        "PostConfirmation": {
        },
        "PreAuthentication": {
        },
        "PreSignUp": {
        },
        "VerifyAuthChallengeResponse": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.NumberAttributeConstraints": {
    "type": "object",
    "properties": {
        "MaxValue": {
        },
        "MinValue": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.PasswordPolicy": {
    "type": "object",
    "properties": {
        "MinimumLength": {
        },
        "RequireLowercase": {
        },
        "RequireNumbers": {
        },
        "RequireSymbols": {
        },
        "RequireUppercase": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.Policies": {
    "type": "object",
    "properties": {
        "PasswordPolicy": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.SchemaAttribute": {
    "type": "object",
    "properties": {
        "AttributeDataType": {
        },
        "DeveloperOnlyAttribute": {
        },
        "Mutable": {
        },
        "Name": {
        },
        "NumberAttributeConstraints": {
        },
        "Required": {
        },
        "StringAttributeConstraints": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.SmsConfiguration": {
    "type": "object",
    "properties": {
        "ExternalId": {
        },
        "SnsCallerArn": {
        }
        
    }
},
        
            "AWS::Cognito::UserPool.StringAttributeConstraints": {
    "type": "object",
    "properties": {
        "MaxLength": {
        },
        "MinLength": {
        }
        
    }
},
        
            "AWS::Cognito::UserPoolUser.AttributeType": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Config::ConfigRule.Scope": {
    "type": "object",
    "properties": {
        "ComplianceResourceId": {
        },
        "ComplianceResourceTypes": {
        },
        "TagKey": {
        },
        "TagValue": {
        }
        
    }
},
        
            "AWS::Config::ConfigRule.Source": {
    "type": "object",
    "properties": {
        "Owner": {
        },
        "SourceDetails": {
        },
        "SourceIdentifier": {
        }
        
    }
},
        
            "AWS::Config::ConfigRule.SourceDetail": {
    "type": "object",
    "properties": {
        "EventSource": {
        },
        "MaximumExecutionFrequency": {
        },
        "MessageType": {
        }
        
    }
},
        
            "AWS::Config::ConfigurationRecorder.RecordingGroup": {
    "type": "object",
    "properties": {
        "AllSupported": {
        },
        "IncludeGlobalResourceTypes": {
        },
        "ResourceTypes": {
        }
        
    }
},
        
            "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties": {
    "type": "object",
    "properties": {
        "DeliveryFrequency": {
        }
        
    }
},
        
            "AWS::DMS::Endpoint.DynamoDbSettings": {
    "type": "object",
    "properties": {
        "ServiceAccessRoleArn": {
        }
        
    }
},
        
            "AWS::DMS::Endpoint.MongoDbSettings": {
    "type": "object",
    "properties": {
        "AuthMechanism": {
        },
        "AuthSource": {
        },
        "AuthType": {
        },
        "DatabaseName": {
        },
        "DocsToInvestigate": {
        },
        "ExtractDocId": {
        },
        "NestingLevel": {
        },
        "Password": {
        },
        "Port": {
        },
        "ServerName": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::DMS::Endpoint.S3Settings": {
    "type": "object",
    "properties": {
        "BucketFolder": {
        },
        "BucketName": {
        },
        "CompressionType": {
        },
        "CsvDelimiter": {
        },
        "CsvRowDelimiter": {
        },
        "ExternalTableDefinition": {
        },
        "ServiceAccessRoleArn": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.Field": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "RefValue": {
        },
        "StringValue": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.ParameterAttribute": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "StringValue": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.ParameterObject": {
    "type": "object",
    "properties": {
        "Attributes": {
        },
        "Id": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.ParameterValue": {
    "type": "object",
    "properties": {
        "Id": {
        },
        "StringValue": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.PipelineObject": {
    "type": "object",
    "properties": {
        "Fields": {
        },
        "Id": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::DataPipeline::Pipeline.PipelineTag": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::DirectoryService::MicrosoftAD.VpcSettings": {
    "type": "object",
    "properties": {
        "SubnetIds": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::DirectoryService::SimpleAD.VpcSettings": {
    "type": "object",
    "properties": {
        "SubnetIds": {
        },
        "VpcId": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.AttributeDefinition": {
    "type": "object",
    "properties": {
        "AttributeName": {
        },
        "AttributeType": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.GlobalSecondaryIndex": {
    "type": "object",
    "properties": {
        "IndexName": {
        },
        "KeySchema": {
        },
        "Projection": {
        },
        "ProvisionedThroughput": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.KeySchema": {
    "type": "object",
    "properties": {
        "AttributeName": {
        },
        "KeyType": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.LocalSecondaryIndex": {
    "type": "object",
    "properties": {
        "IndexName": {
        },
        "KeySchema": {
        },
        "Projection": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.Projection": {
    "type": "object",
    "properties": {
        "NonKeyAttributes": {
        },
        "ProjectionType": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.ProvisionedThroughput": {
    "type": "object",
    "properties": {
        "ReadCapacityUnits": {
        },
        "WriteCapacityUnits": {
        }
        
    }
},
        
            "AWS::DynamoDB::Table.StreamSpecification": {
    "type": "object",
    "properties": {
        "StreamViewType": {
        }
        
    }
},
        
            "AWS::EC2::Instance.AssociationParameter": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::EC2::Instance.BlockDeviceMapping": {
    "type": "object",
    "properties": {
        "DeviceName": {
        },
        "Ebs": {
        },
        "NoDevice": {
        },
        "VirtualName": {
        }
        
    }
},
        
            "AWS::EC2::Instance.Ebs": {
    "type": "object",
    "properties": {
        "DeleteOnTermination": {
        },
        "Encrypted": {
        },
        "Iops": {
        },
        "SnapshotId": {
        },
        "VolumeSize": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EC2::Instance.InstanceIpv6Address": {
    "type": "object",
    "properties": {
        "Ipv6Address": {
        }
        
    }
},
        
            "AWS::EC2::Instance.NetworkInterface": {
    "type": "object",
    "properties": {
        "AssociatePublicIpAddress": {
        },
        "DeleteOnTermination": {
        },
        "Description": {
        },
        "DeviceIndex": {
        },
        "GroupSet": {
        },
        "Ipv6AddressCount": {
        },
        "Ipv6Addresses": {
        },
        "NetworkInterfaceId": {
        },
        "PrivateIpAddress": {
        },
        "PrivateIpAddresses": {
        },
        "SecondaryPrivateIpAddressCount": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::Instance.NoDevice": {
    "type": "object",
    "properties": {
        
    }
},
        
            "AWS::EC2::Instance.PrivateIpAddressSpecification": {
    "type": "object",
    "properties": {
        "Primary": {
        },
        "PrivateIpAddress": {
        }
        
    }
},
        
            "AWS::EC2::Instance.SsmAssociation": {
    "type": "object",
    "properties": {
        "AssociationParameters": {
        },
        "DocumentName": {
        }
        
    }
},
        
            "AWS::EC2::Instance.Volume": {
    "type": "object",
    "properties": {
        "Device": {
        },
        "VolumeId": {
        }
        
    }
},
        
            "AWS::EC2::NetworkAclEntry.Icmp": {
    "type": "object",
    "properties": {
        "Code": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::EC2::NetworkAclEntry.PortRange": {
    "type": "object",
    "properties": {
        "From": {
        },
        "To": {
        }
        
    }
},
        
            "AWS::EC2::NetworkInterface.InstanceIpv6Address": {
    "type": "object",
    "properties": {
        "Ipv6Address": {
        }
        
    }
},
        
            "AWS::EC2::NetworkInterface.PrivateIpAddressSpecification": {
    "type": "object",
    "properties": {
        "Primary": {
        },
        "PrivateIpAddress": {
        }
        
    }
},
        
            "AWS::EC2::SecurityGroup.Egress": {
    "type": "object",
    "properties": {
        "CidrIp": {
        },
        "CidrIpv6": {
        },
        "DestinationPrefixListId": {
        },
        "DestinationSecurityGroupId": {
        },
        "FromPort": {
        },
        "IpProtocol": {
        },
        "ToPort": {
        }
        
    }
},
        
            "AWS::EC2::SecurityGroup.Ingress": {
    "type": "object",
    "properties": {
        "CidrIp": {
        },
        "CidrIpv6": {
        },
        "FromPort": {
        },
        "IpProtocol": {
        },
        "SourceSecurityGroupId": {
        },
        "SourceSecurityGroupName": {
        },
        "SourceSecurityGroupOwnerId": {
        },
        "ToPort": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.BlockDeviceMapping": {
    "type": "object",
    "properties": {
        "DeviceName": {
        },
        "Ebs": {
        },
        "NoDevice": {
        },
        "VirtualName": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.EbsBlockDevice": {
    "type": "object",
    "properties": {
        "DeleteOnTermination": {
        },
        "Encrypted": {
        },
        "Iops": {
        },
        "SnapshotId": {
        },
        "VolumeSize": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.GroupIdentifier": {
    "type": "object",
    "properties": {
        "GroupId": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.IamInstanceProfileSpecification": {
    "type": "object",
    "properties": {
        "Arn": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.InstanceIpv6Address": {
    "type": "object",
    "properties": {
        "Ipv6Address": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.InstanceNetworkInterfaceSpecification": {
    "type": "object",
    "properties": {
        "AssociatePublicIpAddress": {
        },
        "DeleteOnTermination": {
        },
        "Description": {
        },
        "DeviceIndex": {
        },
        "Groups": {
        },
        "Ipv6AddressCount": {
        },
        "Ipv6Addresses": {
        },
        "NetworkInterfaceId": {
        },
        "PrivateIpAddresses": {
        },
        "SecondaryPrivateIpAddressCount": {
        },
        "SubnetId": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.PrivateIpAddressSpecification": {
    "type": "object",
    "properties": {
        "Primary": {
        },
        "PrivateIpAddress": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.SpotFleetLaunchSpecification": {
    "type": "object",
    "properties": {
        "BlockDeviceMappings": {
        },
        "EbsOptimized": {
        },
        "IamInstanceProfile": {
        },
        "ImageId": {
        },
        "InstanceType": {
        },
        "KernelId": {
        },
        "KeyName": {
        },
        "Monitoring": {
        },
        "NetworkInterfaces": {
        },
        "Placement": {
        },
        "RamdiskId": {
        },
        "SecurityGroups": {
        },
        "SpotPrice": {
        },
        "SubnetId": {
        },
        "UserData": {
        },
        "WeightedCapacity": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.SpotFleetMonitoring": {
    "type": "object",
    "properties": {
        "Enabled": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.SpotFleetRequestConfigData": {
    "type": "object",
    "properties": {
        "AllocationStrategy": {
        },
        "ExcessCapacityTerminationPolicy": {
        },
        "IamFleetRole": {
        },
        "LaunchSpecifications": {
        },
        "SpotPrice": {
        },
        "TargetCapacity": {
        },
        "TerminateInstancesWithExpiration": {
        },
        "ValidFrom": {
        },
        "ValidUntil": {
        }
        
    }
},
        
            "AWS::EC2::SpotFleet.SpotPlacement": {
    "type": "object",
    "properties": {
        "AvailabilityZone": {
        },
        "GroupName": {
        }
        
    }
},
        
            "AWS::ECS::Service.DeploymentConfiguration": {
    "type": "object",
    "properties": {
        "MaximumPercent": {
        },
        "MinimumHealthyPercent": {
        }
        
    }
},
        
            "AWS::ECS::Service.LoadBalancer": {
    "type": "object",
    "properties": {
        "ContainerName": {
        },
        "ContainerPort": {
        },
        "LoadBalancerName": {
        },
        "TargetGroupArn": {
        }
        
    }
},
        
            "AWS::ECS::Service.PlacementConstraint": {
    "type": "object",
    "properties": {
        "Expression": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ECS::Service.PlacementStrategy": {
    "type": "object",
    "properties": {
        "Field": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.ContainerDefinition": {
    "type": "object",
    "properties": {
        "Command": {
        },
        "Cpu": {
        },
        "DisableNetworking": {
        },
        "DnsSearchDomains": {
        },
        "DnsServers": {
        },
        "DockerLabels": {
        },
        "DockerSecurityOptions": {
        },
        "EntryPoint": {
        },
        "Environment": {
        },
        "Essential": {
        },
        "ExtraHosts": {
        },
        "Hostname": {
        },
        "Image": {
        },
        "Links": {
        },
        "LogConfiguration": {
        },
        "Memory": {
        },
        "MemoryReservation": {
        },
        "MountPoints": {
        },
        "Name": {
        },
        "PortMappings": {
        },
        "Privileged": {
        },
        "ReadonlyRootFilesystem": {
        },
        "Ulimits": {
        },
        "User": {
        },
        "VolumesFrom": {
        },
        "WorkingDirectory": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.HostEntry": {
    "type": "object",
    "properties": {
        "Hostname": {
        },
        "IpAddress": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.HostVolumeProperties": {
    "type": "object",
    "properties": {
        "SourcePath": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.KeyValuePair": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.LogConfiguration": {
    "type": "object",
    "properties": {
        "LogDriver": {
        },
        "Options": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.MountPoint": {
    "type": "object",
    "properties": {
        "ContainerPath": {
        },
        "ReadOnly": {
        },
        "SourceVolume": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.PortMapping": {
    "type": "object",
    "properties": {
        "ContainerPort": {
        },
        "HostPort": {
        },
        "Protocol": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.TaskDefinitionPlacementConstraint": {
    "type": "object",
    "properties": {
        "Expression": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.Ulimit": {
    "type": "object",
    "properties": {
        "HardLimit": {
        },
        "Name": {
        },
        "SoftLimit": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.Volume": {
    "type": "object",
    "properties": {
        "Host": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::ECS::TaskDefinition.VolumeFrom": {
    "type": "object",
    "properties": {
        "ReadOnly": {
        },
        "SourceContainer": {
        }
        
    }
},
        
            "AWS::EFS::FileSystem.ElasticFileSystemTag": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.Application": {
    "type": "object",
    "properties": {
        "AdditionalInfo": {
        },
        "Args": {
        },
        "Name": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.AutoScalingPolicy": {
    "type": "object",
    "properties": {
        "Constraints": {
        },
        "Rules": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.BootstrapActionConfig": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "ScriptBootstrapAction": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.CloudWatchAlarmDefinition": {
    "type": "object",
    "properties": {
        "ComparisonOperator": {
        },
        "Dimensions": {
        },
        "EvaluationPeriods": {
        },
        "MetricName": {
        },
        "Namespace": {
        },
        "Period": {
        },
        "Statistic": {
        },
        "Threshold": {
        },
        "Unit": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.Configuration": {
    "type": "object",
    "properties": {
        "Classification": {
        },
        "ConfigurationProperties": {
        },
        "Configurations": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.EbsBlockDeviceConfig": {
    "type": "object",
    "properties": {
        "VolumeSpecification": {
        },
        "VolumesPerInstance": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.EbsConfiguration": {
    "type": "object",
    "properties": {
        "EbsBlockDeviceConfigs": {
        },
        "EbsOptimized": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.InstanceFleetConfig": {
    "type": "object",
    "properties": {
        "InstanceTypeConfigs": {
        },
        "LaunchSpecifications": {
        },
        "Name": {
        },
        "TargetOnDemandCapacity": {
        },
        "TargetSpotCapacity": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.InstanceFleetProvisioningSpecifications": {
    "type": "object",
    "properties": {
        "SpotSpecification": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.InstanceGroupConfig": {
    "type": "object",
    "properties": {
        "AutoScalingPolicy": {
        },
        "BidPrice": {
        },
        "Configurations": {
        },
        "EbsConfiguration": {
        },
        "InstanceCount": {
        },
        "InstanceType": {
        },
        "Market": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.InstanceTypeConfig": {
    "type": "object",
    "properties": {
        "BidPrice": {
        },
        "BidPriceAsPercentageOfOnDemandPrice": {
        },
        "Configurations": {
        },
        "EbsConfiguration": {
        },
        "InstanceType": {
        },
        "WeightedCapacity": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.JobFlowInstancesConfig": {
    "type": "object",
    "properties": {
        "AdditionalMasterSecurityGroups": {
        },
        "AdditionalSlaveSecurityGroups": {
        },
        "CoreInstanceFleet": {
        },
        "CoreInstanceGroup": {
        },
        "Ec2KeyName": {
        },
        "Ec2SubnetId": {
        },
        "EmrManagedMasterSecurityGroup": {
        },
        "EmrManagedSlaveSecurityGroup": {
        },
        "HadoopVersion": {
        },
        "MasterInstanceFleet": {
        },
        "MasterInstanceGroup": {
        },
        "Placement": {
        },
        "ServiceAccessSecurityGroup": {
        },
        "TerminationProtected": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.MetricDimension": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.PlacementType": {
    "type": "object",
    "properties": {
        "AvailabilityZone": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.ScalingAction": {
    "type": "object",
    "properties": {
        "Market": {
        },
        "SimpleScalingPolicyConfiguration": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.ScalingConstraints": {
    "type": "object",
    "properties": {
        "MaxCapacity": {
        },
        "MinCapacity": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.ScalingRule": {
    "type": "object",
    "properties": {
        "Action": {
        },
        "Description": {
        },
        "Name": {
        },
        "Trigger": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.ScalingTrigger": {
    "type": "object",
    "properties": {
        "CloudWatchAlarmDefinition": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.ScriptBootstrapActionConfig": {
    "type": "object",
    "properties": {
        "Args": {
        },
        "Path": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.SimpleScalingPolicyConfiguration": {
    "type": "object",
    "properties": {
        "AdjustmentType": {
        },
        "CoolDown": {
        },
        "ScalingAdjustment": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.SpotProvisioningSpecification": {
    "type": "object",
    "properties": {
        "BlockDurationMinutes": {
        },
        "TimeoutAction": {
        },
        "TimeoutDurationMinutes": {
        }
        
    }
},
        
            "AWS::EMR::Cluster.VolumeSpecification": {
    "type": "object",
    "properties": {
        "Iops": {
        },
        "SizeInGB": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.Configuration": {
    "type": "object",
    "properties": {
        "Classification": {
        },
        "ConfigurationProperties": {
        },
        "Configurations": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.EbsBlockDeviceConfig": {
    "type": "object",
    "properties": {
        "VolumeSpecification": {
        },
        "VolumesPerInstance": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.EbsConfiguration": {
    "type": "object",
    "properties": {
        "EbsBlockDeviceConfigs": {
        },
        "EbsOptimized": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.InstanceFleetProvisioningSpecifications": {
    "type": "object",
    "properties": {
        "SpotSpecification": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.InstanceTypeConfig": {
    "type": "object",
    "properties": {
        "BidPrice": {
        },
        "BidPriceAsPercentageOfOnDemandPrice": {
        },
        "Configurations": {
        },
        "EbsConfiguration": {
        },
        "InstanceType": {
        },
        "WeightedCapacity": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.SpotProvisioningSpecification": {
    "type": "object",
    "properties": {
        "BlockDurationMinutes": {
        },
        "TimeoutAction": {
        },
        "TimeoutDurationMinutes": {
        }
        
    }
},
        
            "AWS::EMR::InstanceFleetConfig.VolumeSpecification": {
    "type": "object",
    "properties": {
        "Iops": {
        },
        "SizeInGB": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.AutoScalingPolicy": {
    "type": "object",
    "properties": {
        "Constraints": {
        },
        "Rules": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.CloudWatchAlarmDefinition": {
    "type": "object",
    "properties": {
        "ComparisonOperator": {
        },
        "Dimensions": {
        },
        "EvaluationPeriods": {
        },
        "MetricName": {
        },
        "Namespace": {
        },
        "Period": {
        },
        "Statistic": {
        },
        "Threshold": {
        },
        "Unit": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.Configuration": {
    "type": "object",
    "properties": {
        "Classification": {
        },
        "ConfigurationProperties": {
        },
        "Configurations": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.EbsBlockDeviceConfig": {
    "type": "object",
    "properties": {
        "VolumeSpecification": {
        },
        "VolumesPerInstance": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.EbsConfiguration": {
    "type": "object",
    "properties": {
        "EbsBlockDeviceConfigs": {
        },
        "EbsOptimized": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.MetricDimension": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.ScalingAction": {
    "type": "object",
    "properties": {
        "Market": {
        },
        "SimpleScalingPolicyConfiguration": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.ScalingConstraints": {
    "type": "object",
    "properties": {
        "MaxCapacity": {
        },
        "MinCapacity": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.ScalingRule": {
    "type": "object",
    "properties": {
        "Action": {
        },
        "Description": {
        },
        "Name": {
        },
        "Trigger": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.ScalingTrigger": {
    "type": "object",
    "properties": {
        "CloudWatchAlarmDefinition": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.SimpleScalingPolicyConfiguration": {
    "type": "object",
    "properties": {
        "AdjustmentType": {
        },
        "CoolDown": {
        },
        "ScalingAdjustment": {
        }
        
    }
},
        
            "AWS::EMR::InstanceGroupConfig.VolumeSpecification": {
    "type": "object",
    "properties": {
        "Iops": {
        },
        "SizeInGB": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::EMR::Step.HadoopJarStepConfig": {
    "type": "object",
    "properties": {
        "Args": {
        },
        "Jar": {
        },
        "MainClass": {
        },
        "StepProperties": {
        }
        
    }
},
        
            "AWS::EMR::Step.KeyValue": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ElastiCache::ReplicationGroup.NodeGroupConfiguration": {
    "type": "object",
    "properties": {
        "PrimaryAvailabilityZone": {
        },
        "ReplicaAvailabilityZones": {
        },
        "ReplicaCount": {
        },
        "Slots": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle": {
    "type": "object",
    "properties": {
        "S3Bucket": {
        },
        "S3Key": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::ConfigurationTemplate.ConfigurationOptionSetting": {
    "type": "object",
    "properties": {
        "Namespace": {
        },
        "OptionName": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration": {
    "type": "object",
    "properties": {
        "ApplicationName": {
        },
        "TemplateName": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::Environment.OptionSettings": {
    "type": "object",
    "properties": {
        "Namespace": {
        },
        "OptionName": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ElasticBeanstalk::Environment.Tier": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Type": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.AccessLoggingPolicy": {
    "type": "object",
    "properties": {
        "EmitInterval": {
        },
        "Enabled": {
        },
        "S3BucketName": {
        },
        "S3BucketPrefix": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.AppCookieStickinessPolicy": {
    "type": "object",
    "properties": {
        "CookieName": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionDrainingPolicy": {
    "type": "object",
    "properties": {
        "Enabled": {
        },
        "Timeout": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionSettings": {
    "type": "object",
    "properties": {
        "IdleTimeout": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.HealthCheck": {
    "type": "object",
    "properties": {
        "HealthyThreshold": {
        },
        "Interval": {
        },
        "Target": {
        },
        "Timeout": {
        },
        "UnhealthyThreshold": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.LBCookieStickinessPolicy": {
    "type": "object",
    "properties": {
        "CookieExpirationPeriod": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.Listeners": {
    "type": "object",
    "properties": {
        "InstancePort": {
        },
        "InstanceProtocol": {
        },
        "LoadBalancerPort": {
        },
        "PolicyNames": {
        },
        "Protocol": {
        },
        "SSLCertificateId": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancing::LoadBalancer.Policies": {
    "type": "object",
    "properties": {
        "Attributes": {
        },
        "InstancePorts": {
        },
        "LoadBalancerPorts": {
        },
        "PolicyName": {
        },
        "PolicyType": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::Listener.Action": {
    "type": "object",
    "properties": {
        "TargetGroupArn": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::Listener.Certificate": {
    "type": "object",
    "properties": {
        "CertificateArn": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::ListenerRule.Action": {
    "type": "object",
    "properties": {
        "TargetGroupArn": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::ListenerRule.RuleCondition": {
    "type": "object",
    "properties": {
        "Field": {
        },
        "Values": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttribute": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher": {
    "type": "object",
    "properties": {
        "HttpCode": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::TargetGroup.TargetDescription": {
    "type": "object",
    "properties": {
        "Id": {
        },
        "Port": {
        }
        
    }
},
        
            "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttribute": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Elasticsearch::Domain.EBSOptions": {
    "type": "object",
    "properties": {
        "EBSEnabled": {
        },
        "Iops": {
        },
        "VolumeSize": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig": {
    "type": "object",
    "properties": {
        "DedicatedMasterCount": {
        },
        "DedicatedMasterEnabled": {
        },
        "DedicatedMasterType": {
        },
        "InstanceCount": {
        },
        "InstanceType": {
        },
        "ZoneAwarenessEnabled": {
        }
        
    }
},
        
            "AWS::Elasticsearch::Domain.SnapshotOptions": {
    "type": "object",
    "properties": {
        "AutomatedSnapshotStartHour": {
        }
        
    }
},
        
            "AWS::Events::Rule.Target": {
    "type": "object",
    "properties": {
        "Arn": {
        },
        "Id": {
        },
        "Input": {
        },
        "InputPath": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::GameLift::Alias.RoutingStrategy": {
    "type": "object",
    "properties": {
        "FleetId": {
        },
        "Message": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::GameLift::Build.S3Location": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "Key": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::GameLift::Fleet.IpPermission": {
    "type": "object",
    "properties": {
        "FromPort": {
        },
        "IpRange": {
        },
        "Protocol": {
        },
        "ToPort": {
        }
        
    }
},
        
            "AWS::IAM::Group.Policy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::IAM::Role.Policy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::IAM::User.LoginProfile": {
    "type": "object",
    "properties": {
        "Password": {
        },
        "PasswordResetRequired": {
        }
        
    }
},
        
            "AWS::IAM::User.Policy": {
    "type": "object",
    "properties": {
        "PolicyDocument": {
        },
        "PolicyName": {
        }
        
    }
},
        
            "AWS::IoT::Thing.AttributePayload": {
    "type": "object",
    "properties": {
        "Attributes": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.Action": {
    "type": "object",
    "properties": {
        "CloudwatchAlarm": {
        },
        "CloudwatchMetric": {
        },
        "DynamoDB": {
        },
        "Elasticsearch": {
        },
        "Firehose": {
        },
        "Kinesis": {
        },
        "Lambda": {
        },
        "Republish": {
        },
        "S3": {
        },
        "Sns": {
        },
        "Sqs": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.CloudwatchAlarmAction": {
    "type": "object",
    "properties": {
        "AlarmName": {
        },
        "RoleArn": {
        },
        "StateReason": {
        },
        "StateValue": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.CloudwatchMetricAction": {
    "type": "object",
    "properties": {
        "MetricName": {
        },
        "MetricNamespace": {
        },
        "MetricTimestamp": {
        },
        "MetricUnit": {
        },
        "MetricValue": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.DynamoDBAction": {
    "type": "object",
    "properties": {
        "HashKeyField": {
        },
        "HashKeyValue": {
        },
        "PayloadField": {
        },
        "RangeKeyField": {
        },
        "RangeKeyValue": {
        },
        "RoleArn": {
        },
        "TableName": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.ElasticsearchAction": {
    "type": "object",
    "properties": {
        "Endpoint": {
        },
        "Id": {
        },
        "Index": {
        },
        "RoleArn": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.FirehoseAction": {
    "type": "object",
    "properties": {
        "DeliveryStreamName": {
        },
        "RoleArn": {
        },
        "Separator": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.KinesisAction": {
    "type": "object",
    "properties": {
        "PartitionKey": {
        },
        "RoleArn": {
        },
        "StreamName": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.LambdaAction": {
    "type": "object",
    "properties": {
        "FunctionArn": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.RepublishAction": {
    "type": "object",
    "properties": {
        "RoleArn": {
        },
        "Topic": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.S3Action": {
    "type": "object",
    "properties": {
        "BucketName": {
        },
        "Key": {
        },
        "RoleArn": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.SnsAction": {
    "type": "object",
    "properties": {
        "MessageFormat": {
        },
        "RoleArn": {
        },
        "TargetArn": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.SqsAction": {
    "type": "object",
    "properties": {
        "QueueUrl": {
        },
        "RoleArn": {
        },
        "UseBase64": {
        }
        
    }
},
        
            "AWS::IoT::TopicRule.TopicRulePayload": {
    "type": "object",
    "properties": {
        "Actions": {
        },
        "AwsIotSqlVersion": {
        },
        "Description": {
        },
        "RuleDisabled": {
        },
        "Sql": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.CSVMappingParameters": {
    "type": "object",
    "properties": {
        "RecordColumnDelimiter": {
        },
        "RecordRowDelimiter": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.Input": {
    "type": "object",
    "properties": {
        "InputParallelism": {
        },
        "InputSchema": {
        },
        "KinesisFirehoseInput": {
        },
        "KinesisStreamsInput": {
        },
        "NamePrefix": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.InputParallelism": {
    "type": "object",
    "properties": {
        "Count": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.InputSchema": {
    "type": "object",
    "properties": {
        "RecordColumns": {
        },
        "RecordEncoding": {
        },
        "RecordFormat": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.JSONMappingParameters": {
    "type": "object",
    "properties": {
        "RecordRowPath": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.KinesisFirehoseInput": {
    "type": "object",
    "properties": {
        "ResourceARN": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.KinesisStreamsInput": {
    "type": "object",
    "properties": {
        "ResourceARN": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.MappingParameters": {
    "type": "object",
    "properties": {
        "CSVMappingParameters": {
        },
        "JSONMappingParameters": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.RecordColumn": {
    "type": "object",
    "properties": {
        "Mapping": {
        },
        "Name": {
        },
        "SqlType": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::Application.RecordFormat": {
    "type": "object",
    "properties": {
        "MappingParameters": {
        },
        "RecordFormatType": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationOutput.DestinationSchema": {
    "type": "object",
    "properties": {
        "RecordFormatType": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationOutput.KinesisFirehoseOutput": {
    "type": "object",
    "properties": {
        "ResourceARN": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationOutput.KinesisStreamsOutput": {
    "type": "object",
    "properties": {
        "ResourceARN": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationOutput.Output": {
    "type": "object",
    "properties": {
        "DestinationSchema": {
        },
        "KinesisFirehoseOutput": {
        },
        "KinesisStreamsOutput": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.CSVMappingParameters": {
    "type": "object",
    "properties": {
        "RecordColumnDelimiter": {
        },
        "RecordRowDelimiter": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.JSONMappingParameters": {
    "type": "object",
    "properties": {
        "RecordRowPath": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.MappingParameters": {
    "type": "object",
    "properties": {
        "CSVMappingParameters": {
        },
        "JSONMappingParameters": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordColumn": {
    "type": "object",
    "properties": {
        "Mapping": {
        },
        "Name": {
        },
        "SqlType": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordFormat": {
    "type": "object",
    "properties": {
        "MappingParameters": {
        },
        "RecordFormatType": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource": {
    "type": "object",
    "properties": {
        "ReferenceSchema": {
        },
        "S3ReferenceDataSource": {
        },
        "TableName": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceSchema": {
    "type": "object",
    "properties": {
        "RecordColumns": {
        },
        "RecordEncoding": {
        },
        "RecordFormat": {
        }
        
    }
},
        
            "AWS::KinesisAnalytics::ApplicationReferenceDataSource.S3ReferenceDataSource": {
    "type": "object",
    "properties": {
        "BucketARN": {
        },
        "FileKey": {
        },
        "ReferenceRoleARN": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.BufferingHints": {
    "type": "object",
    "properties": {
        "IntervalInSeconds": {
        },
        "SizeInMBs": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.CloudWatchLoggingOptions": {
    "type": "object",
    "properties": {
        "Enabled": {
        },
        "LogGroupName": {
        },
        "LogStreamName": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.CopyCommand": {
    "type": "object",
    "properties": {
        "CopyOptions": {
        },
        "DataTableColumns": {
        },
        "DataTableName": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.ElasticsearchBufferingHints": {
    "type": "object",
    "properties": {
        "IntervalInSeconds": {
        },
        "SizeInMBs": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration": {
    "type": "object",
    "properties": {
        "BufferingHints": {
        },
        "CloudWatchLoggingOptions": {
        },
        "DomainARN": {
        },
        "IndexName": {
        },
        "IndexRotationPeriod": {
        },
        "RetryOptions": {
        },
        "RoleARN": {
        },
        "S3BackupMode": {
        },
        "S3Configuration": {
        },
        "TypeName": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.ElasticsearchRetryOptions": {
    "type": "object",
    "properties": {
        "DurationInSeconds": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.EncryptionConfiguration": {
    "type": "object",
    "properties": {
        "KMSEncryptionConfig": {
        },
        "NoEncryptionConfig": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.KMSEncryptionConfig": {
    "type": "object",
    "properties": {
        "AWSKMSKeyARN": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration": {
    "type": "object",
    "properties": {
        "CloudWatchLoggingOptions": {
        },
        "ClusterJDBCURL": {
        },
        "CopyCommand": {
        },
        "Password": {
        },
        "RoleARN": {
        },
        "S3Configuration": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration": {
    "type": "object",
    "properties": {
        "BucketARN": {
        },
        "BufferingHints": {
        },
        "CloudWatchLoggingOptions": {
        },
        "CompressionFormat": {
        },
        "EncryptionConfiguration": {
        },
        "Prefix": {
        },
        "RoleARN": {
        }
        
    }
},
        
            "AWS::Lambda::Function.Code": {
    "type": "object",
    "properties": {
        "S3Bucket": {
        },
        "S3Key": {
        },
        "S3ObjectVersion": {
        },
        "ZipFile": {
        }
        
    }
},
        
            "AWS::Lambda::Function.DeadLetterConfig": {
    "type": "object",
    "properties": {
        "TargetArn": {
        }
        
    }
},
        
            "AWS::Lambda::Function.Environment": {
    "type": "object",
    "properties": {
        "Variables": {
        }
        
    }
},
        
            "AWS::Lambda::Function.TracingConfig": {
    "type": "object",
    "properties": {
        "Mode": {
        }
        
    }
},
        
            "AWS::Lambda::Function.VpcConfig": {
    "type": "object",
    "properties": {
        "SecurityGroupIds": {
        },
        "SubnetIds": {
        }
        
    }
},
        
            "AWS::Logs::MetricFilter.MetricTransformation": {
    "type": "object",
    "properties": {
        "MetricName": {
        },
        "MetricNamespace": {
        },
        "MetricValue": {
        }
        
    }
},
        
            "AWS::OpsWorks::App.DataSource": {
    "type": "object",
    "properties": {
        "Arn": {
        },
        "DatabaseName": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::OpsWorks::App.EnvironmentVariable": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Secure": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::OpsWorks::App.Source": {
    "type": "object",
    "properties": {
        "Password": {
        },
        "Revision": {
        },
        "SshKey": {
        },
        "Type": {
        },
        "Url": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::OpsWorks::App.SslConfiguration": {
    "type": "object",
    "properties": {
        "Certificate": {
        },
        "Chain": {
        },
        "PrivateKey": {
        }
        
    }
},
        
            "AWS::OpsWorks::Instance.BlockDeviceMapping": {
    "type": "object",
    "properties": {
        "DeviceName": {
        },
        "Ebs": {
        },
        "NoDevice": {
        },
        "VirtualName": {
        }
        
    }
},
        
            "AWS::OpsWorks::Instance.EbsBlockDevice": {
    "type": "object",
    "properties": {
        "DeleteOnTermination": {
        },
        "Iops": {
        },
        "SnapshotId": {
        },
        "VolumeSize": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::OpsWorks::Instance.TimeBasedAutoScaling": {
    "type": "object",
    "properties": {
        "Friday": {
        },
        "Monday": {
        },
        "Saturday": {
        },
        "Sunday": {
        },
        "Thursday": {
        },
        "Tuesday": {
        },
        "Wednesday": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.AutoScalingThresholds": {
    "type": "object",
    "properties": {
        "CpuThreshold": {
        },
        "IgnoreMetricsTime": {
        },
        "InstanceCount": {
        },
        "LoadThreshold": {
        },
        "MemoryThreshold": {
        },
        "ThresholdsWaitTime": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.LifecycleEventConfiguration": {
    "type": "object",
    "properties": {
        "ShutdownEventConfiguration": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.LoadBasedAutoScaling": {
    "type": "object",
    "properties": {
        "DownScaling": {
        },
        "Enable": {
        },
        "UpScaling": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.Recipes": {
    "type": "object",
    "properties": {
        "Configure": {
        },
        "Deploy": {
        },
        "Setup": {
        },
        "Shutdown": {
        },
        "Undeploy": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.ShutdownEventConfiguration": {
    "type": "object",
    "properties": {
        "DelayUntilElbConnectionsDrained": {
        },
        "ExecutionTimeout": {
        }
        
    }
},
        
            "AWS::OpsWorks::Layer.VolumeConfiguration": {
    "type": "object",
    "properties": {
        "Iops": {
        },
        "MountPoint": {
        },
        "NumberOfDisks": {
        },
        "RaidLevel": {
        },
        "Size": {
        },
        "VolumeType": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack.ChefConfiguration": {
    "type": "object",
    "properties": {
        "BerkshelfVersion": {
        },
        "ManageBerkshelf": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack.ElasticIp": {
    "type": "object",
    "properties": {
        "Ip": {
        },
        "Name": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack.RdsDbInstance": {
    "type": "object",
    "properties": {
        "DbPassword": {
        },
        "DbUser": {
        },
        "RdsDbInstanceArn": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack.Source": {
    "type": "object",
    "properties": {
        "Password": {
        },
        "Revision": {
        },
        "SshKey": {
        },
        "Type": {
        },
        "Url": {
        },
        "Username": {
        }
        
    }
},
        
            "AWS::OpsWorks::Stack.StackConfigurationManager": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Version": {
        }
        
    }
},
        
            "AWS::RDS::DBSecurityGroup.Ingress": {
    "type": "object",
    "properties": {
        "CIDRIP": {
        },
        "EC2SecurityGroupId": {
        },
        "EC2SecurityGroupName": {
        },
        "EC2SecurityGroupOwnerId": {
        }
        
    }
},
        
            "AWS::RDS::OptionGroup.OptionConfiguration": {
    "type": "object",
    "properties": {
        "DBSecurityGroupMemberships": {
        },
        "OptionName": {
        },
        "OptionSettings": {
        },
        "Port": {
        },
        "VpcSecurityGroupMemberships": {
        }
        
    }
},
        
            "AWS::RDS::OptionGroup.OptionSetting": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Redshift::Cluster.LoggingProperties": {
    "type": "object",
    "properties": {
        "BucketName": {
        },
        "S3KeyPrefix": {
        }
        
    }
},
        
            "AWS::Redshift::ClusterParameterGroup.Parameter": {
    "type": "object",
    "properties": {
        "ParameterName": {
        },
        "ParameterValue": {
        }
        
    }
},
        
            "AWS::Route53::HealthCheck.AlarmIdentifier": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Region": {
        }
        
    }
},
        
            "AWS::Route53::HealthCheck.HealthCheckConfig": {
    "type": "object",
    "properties": {
        "AlarmIdentifier": {
        },
        "ChildHealthChecks": {
        },
        "EnableSNI": {
        },
        "FailureThreshold": {
        },
        "FullyQualifiedDomainName": {
        },
        "HealthThreshold": {
        },
        "IPAddress": {
        },
        "InsufficientDataHealthStatus": {
        },
        "Inverted": {
        },
        "MeasureLatency": {
        },
        "Port": {
        },
        "RequestInterval": {
        },
        "ResourcePath": {
        },
        "SearchString": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::Route53::HealthCheck.HealthCheckTag": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Route53::HostedZone.HostedZoneConfig": {
    "type": "object",
    "properties": {
        "Comment": {
        }
        
    }
},
        
            "AWS::Route53::HostedZone.HostedZoneTag": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::Route53::HostedZone.VPC": {
    "type": "object",
    "properties": {
        "VPCId": {
        },
        "VPCRegion": {
        }
        
    }
},
        
            "AWS::Route53::RecordSet.AliasTarget": {
    "type": "object",
    "properties": {
        "DNSName": {
        },
        "EvaluateTargetHealth": {
        },
        "HostedZoneId": {
        }
        
    }
},
        
            "AWS::Route53::RecordSet.GeoLocation": {
    "type": "object",
    "properties": {
        "ContinentCode": {
        },
        "CountryCode": {
        },
        "SubdivisionCode": {
        }
        
    }
},
        
            "AWS::Route53::RecordSetGroup.AliasTarget": {
    "type": "object",
    "properties": {
        "DNSName": {
        },
        "EvaluateTargetHealth": {
        },
        "HostedZoneId": {
        }
        
    }
},
        
            "AWS::Route53::RecordSetGroup.GeoLocation": {
    "type": "object",
    "properties": {
        "ContinentCode": {
        },
        "CountryCode": {
        },
        "SubdivisionCode": {
        }
        
    }
},
        
            "AWS::Route53::RecordSetGroup.RecordSet": {
    "type": "object",
    "properties": {
        "AliasTarget": {
        },
        "Comment": {
        },
        "Failover": {
        },
        "GeoLocation": {
        },
        "HealthCheckId": {
        },
        "HostedZoneId": {
        },
        "HostedZoneName": {
        },
        "Name": {
        },
        "Region": {
        },
        "ResourceRecords": {
        },
        "SetIdentifier": {
        },
        "TTL": {
        },
        "Type": {
        },
        "Weight": {
        }
        
    }
},
        
            "AWS::S3::Bucket.CorsConfiguration": {
    "type": "object",
    "properties": {
        "CorsRules": {
        }
        
    }
},
        
            "AWS::S3::Bucket.CorsRule": {
    "type": "object",
    "properties": {
        "AllowedHeaders": {
        },
        "AllowedMethods": {
        },
        "AllowedOrigins": {
        },
        "ExposedHeaders": {
        },
        "Id": {
        },
        "MaxAge": {
        }
        
    }
},
        
            "AWS::S3::Bucket.FilterRule": {
    "type": "object",
    "properties": {
        "Name": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::S3::Bucket.LambdaConfiguration": {
    "type": "object",
    "properties": {
        "Event": {
        },
        "Filter": {
        },
        "Function": {
        }
        
    }
},
        
            "AWS::S3::Bucket.LifecycleConfiguration": {
    "type": "object",
    "properties": {
        "Rules": {
        }
        
    }
},
        
            "AWS::S3::Bucket.LoggingConfiguration": {
    "type": "object",
    "properties": {
        "DestinationBucketName": {
        },
        "LogFilePrefix": {
        }
        
    }
},
        
            "AWS::S3::Bucket.NoncurrentVersionTransition": {
    "type": "object",
    "properties": {
        "StorageClass": {
        },
        "TransitionInDays": {
        }
        
    }
},
        
            "AWS::S3::Bucket.NotificationConfiguration": {
    "type": "object",
    "properties": {
        "LambdaConfigurations": {
        },
        "QueueConfigurations": {
        },
        "TopicConfigurations": {
        }
        
    }
},
        
            "AWS::S3::Bucket.NotificationFilter": {
    "type": "object",
    "properties": {
        "S3Key": {
        }
        
    }
},
        
            "AWS::S3::Bucket.QueueConfiguration": {
    "type": "object",
    "properties": {
        "Event": {
        },
        "Filter": {
        },
        "Queue": {
        }
        
    }
},
        
            "AWS::S3::Bucket.RedirectAllRequestsTo": {
    "type": "object",
    "properties": {
        "HostName": {
        },
        "Protocol": {
        }
        
    }
},
        
            "AWS::S3::Bucket.RedirectRule": {
    "type": "object",
    "properties": {
        "HostName": {
        },
        "HttpRedirectCode": {
        },
        "Protocol": {
        },
        "ReplaceKeyPrefixWith": {
        },
        "ReplaceKeyWith": {
        }
        
    }
},
        
            "AWS::S3::Bucket.ReplicationConfiguration": {
    "type": "object",
    "properties": {
        "Role": {
        },
        "Rules": {
        }
        
    }
},
        
            "AWS::S3::Bucket.ReplicationDestination": {
    "type": "object",
    "properties": {
        "Bucket": {
        },
        "StorageClass": {
        }
        
    }
},
        
            "AWS::S3::Bucket.ReplicationRule": {
    "type": "object",
    "properties": {
        "Destination": {
        },
        "Id": {
        },
        "Prefix": {
        },
        "Status": {
        }
        
    }
},
        
            "AWS::S3::Bucket.RoutingRule": {
    "type": "object",
    "properties": {
        "RedirectRule": {
        },
        "RoutingRuleCondition": {
        }
        
    }
},
        
            "AWS::S3::Bucket.RoutingRuleCondition": {
    "type": "object",
    "properties": {
        "HttpErrorCodeReturnedEquals": {
        },
        "KeyPrefixEquals": {
        }
        
    }
},
        
            "AWS::S3::Bucket.Rule": {
    "type": "object",
    "properties": {
        "ExpirationDate": {
        },
        "ExpirationInDays": {
        },
        "Id": {
        },
        "NoncurrentVersionExpirationInDays": {
        },
        "NoncurrentVersionTransition": {
        },
        "NoncurrentVersionTransitions": {
        },
        "Prefix": {
        },
        "Status": {
        },
        "Transition": {
        },
        "Transitions": {
        }
        
    }
},
        
            "AWS::S3::Bucket.S3KeyFilter": {
    "type": "object",
    "properties": {
        "Rules": {
        }
        
    }
},
        
            "AWS::S3::Bucket.TopicConfiguration": {
    "type": "object",
    "properties": {
        "Event": {
        },
        "Filter": {
        },
        "Topic": {
        }
        
    }
},
        
            "AWS::S3::Bucket.Transition": {
    "type": "object",
    "properties": {
        "StorageClass": {
        },
        "TransitionDate": {
        },
        "TransitionInDays": {
        }
        
    }
},
        
            "AWS::S3::Bucket.VersioningConfiguration": {
    "type": "object",
    "properties": {
        "Status": {
        }
        
    }
},
        
            "AWS::S3::Bucket.WebsiteConfiguration": {
    "type": "object",
    "properties": {
        "ErrorDocument": {
        },
        "IndexDocument": {
        },
        "RedirectAllRequestsTo": {
        },
        "RoutingRules": {
        }
        
    }
},
        
            "AWS::SNS::Topic.Subscription": {
    "type": "object",
    "properties": {
        "Endpoint": {
        },
        "Protocol": {
        }
        
    }
},
        
            "AWS::SSM::Association.ParameterValues": {
    "type": "object",
    "properties": {
        "ParameterValues": {
        }
        
    }
},
        
            "AWS::SSM::Association.Target": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Values": {
        }
        
    }
},
        
            "AWS::WAF::ByteMatchSet.ByteMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "PositionalConstraint": {
        },
        "TargetString": {
        },
        "TargetStringBase64": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAF::ByteMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::IPSet.IPSetDescriptor": {
    "type": "object",
    "properties": {
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::WAF::Rule.Predicate": {
    "type": "object",
    "properties": {
        "DataId": {
        },
        "Negated": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::SizeConstraintSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::SizeConstraintSet.SizeConstraint": {
    "type": "object",
    "properties": {
        "ComparisonOperator": {
        },
        "FieldToMatch": {
        },
        "Size": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAF::SqlInjectionMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAF::WebACL.ActivatedRule": {
    "type": "object",
    "properties": {
        "Action": {
        },
        "Priority": {
        },
        "RuleId": {
        }
        
    }
},
        
            "AWS::WAF::WebACL.WafAction": {
    "type": "object",
    "properties": {
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::XssMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAF::XssMatchSet.XssMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAFRegional::ByteMatchSet.ByteMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "PositionalConstraint": {
        },
        "TargetString": {
        },
        "TargetStringBase64": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAFRegional::ByteMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::IPSet.IPSetDescriptor": {
    "type": "object",
    "properties": {
        "Type": {
        },
        "Value": {
        }
        
    }
},
        
            "AWS::WAFRegional::Rule.Predicate": {
    "type": "object",
    "properties": {
        "DataId": {
        },
        "Negated": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::SizeConstraintSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::SizeConstraintSet.SizeConstraint": {
    "type": "object",
    "properties": {
        "ComparisonOperator": {
        },
        "FieldToMatch": {
        },
        "Size": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAFRegional::SqlInjectionMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "AWS::WAFRegional::WebACL.Action": {
    "type": "object",
    "properties": {
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::WebACL.Rule": {
    "type": "object",
    "properties": {
        "Action": {
        },
        "Priority": {
        },
        "RuleId": {
        }
        
    }
},
        
            "AWS::WAFRegional::XssMatchSet.FieldToMatch": {
    "type": "object",
    "properties": {
        "Data": {
        },
        "Type": {
        }
        
    }
},
        
            "AWS::WAFRegional::XssMatchSet.XssMatchTuple": {
    "type": "object",
    "properties": {
        "FieldToMatch": {
        },
        "TextTransformation": {
        }
        
    }
},
        
            "Tag": {
    "type": "object",
    "properties": {
        "Key": {
        },
        "Value": {
        }
        
    }
}
        
        
    }
}